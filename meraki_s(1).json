{
  "openapi": "3.0.1",
  "info": {
    "title": "Meraki Dashboard API",
    "description": "A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.\n\n> Date: 04 June, 2025\n>\n> [Recent Updates](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
    "contact": {
      "name": "Meraki Developer Community",
      "url": "https://meraki.io/community"
    },
    "version": "1.59.0"
  },
  "servers": [
    {
      "url": "https://api.meraki.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api/v1"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "meraki_api_key": {
        "type": "apiKey",
        "name": "X-Cisco-Meraki-API-Key",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key"
      }
    }
  },
  "security": [
    {
      "meraki_api_key": [

      ]
    },
    {
      "bearerAuth": [

      ]
    }
  ],
  "paths":{
    "/devices/{serial}": {
      "get": {
        "description": "Return a single device",
        "operationId": "getDevice",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the device"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float",
                      "description": "Latitude of the device"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float",
                      "description": "Longitude of the device"
                    },
                    "address": {
                      "type": "string",
                      "description": "Physical address of the device"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes for the device, limited to 255 characters"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tags assigned to the device"
                    },
                    "networkId": {
                      "type": "string",
                      "description": "ID of the network the device belongs to"
                    },
                    "serial": {
                      "type": "string",
                      "description": "Serial number of the device"
                    },
                    "model": {
                      "type": "string",
                      "description": "Model of the device"
                    },
                    "mac": {
                      "type": "string",
                      "description": "MAC address of the device"
                    },
                    "lanIp": {
                      "type": "string",
                      "description": "LAN IP address of the device"
                    },
                    "firmware": {
                      "type": "string",
                      "description": "Firmware version of the device"
                    },
                    "floorPlanId": {
                      "type": "string",
                      "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Additional property name"
                          },
                          "value": {
                            "type": "string",
                            "description": "Additional property value"
                          }
                        }
                      },
                      "description": "Additional device information"
                    },
                    "beaconIdParams": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "description": "The UUID to be used in the beacon identifier"
                        },
                        "major": {
                          "type": "integer",
                          "description": "The major number to be used in the beacon identifier"
                        },
                        "minor": {
                          "type": "integer",
                          "description": "The minor number to be used in the beacon identifier"
                        }
                      },
                      "description": "Beacon Id parameters with an identifier and major and minor versions"
                    }
                  }
                },
                "example": {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "tags": [
                    " recently-added "
                  ],
                  "networkId": "N_24329156",
                  "serial": "Q234-ABCD-5678",
                  "model": "MR34",
                  "mac": "00:11:22:33:44:55",
                  "lanIp": "1.2.3.4",
                  "firmware": "wireless-25-14",
                  "floorPlanId": "g_2176982374",
                  "details": [
                    {
                      "name": "Catalyst serial",
                      "value": "123ABC"
                    }
                  ],
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  }
                }
              }
            }
          }
        },
        "summary": "Return a single device",
        "tags": [
          "devices",
          "configure"
        ]
      },
      "put": {
        "description": "Update the attributes of a device",
        "operationId": "updateDevice",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "description": "The name of a device"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of tags of a device"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "description": "The latitude of a device"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "description": "The longitude of a device"
                  },
                  "address": {
                    "type": "string",
                    "nullable": true,
                    "description": "The address of a device"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "description": "The notes for the device. String. Limited to 255 characters."
                  },
                  "moveMapMarker": {
                    "type": "boolean",
                    "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified."
                  },
                  "switchProfileId": {
                    "type": "string",
                    "nullable": true,
                    "description": "The ID of a switch template to bind to the device (for available switch templates, see the 'Switch Templates' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch template, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template."
                  },
                  "floorPlanId": {
                    "type": "string",
                    "nullable": true,
                    "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                  }
                },
                "example": {
                  "name": "My AP",
                  "tags": [
                    " recently-added "
                  ],
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "moveMapMarker": true,
                  "switchProfileId": "1234",
                  "floorPlanId": "g_2176982374"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the device"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float",
                      "description": "Latitude of the device"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float",
                      "description": "Longitude of the device"
                    },
                    "address": {
                      "type": "string",
                      "description": "Physical address of the device"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes for the device, limited to 255 characters"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tags assigned to the device"
                    },
                    "networkId": {
                      "type": "string",
                      "description": "ID of the network the device belongs to"
                    },
                    "serial": {
                      "type": "string",
                      "description": "Serial number of the device"
                    },
                    "model": {
                      "type": "string",
                      "description": "Model of the device"
                    },
                    "mac": {
                      "type": "string",
                      "description": "MAC address of the device"
                    },
                    "lanIp": {
                      "type": "string",
                      "description": "LAN IP address of the device"
                    },
                    "firmware": {
                      "type": "string",
                      "description": "Firmware version of the device"
                    },
                    "floorPlanId": {
                      "type": "string",
                      "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Additional property name"
                          },
                          "value": {
                            "type": "string",
                            "description": "Additional property value"
                          }
                        }
                      },
                      "description": "Additional device information"
                    },
                    "beaconIdParams": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "description": "The UUID to be used in the beacon identifier"
                        },
                        "major": {
                          "type": "integer",
                          "description": "The major number to be used in the beacon identifier"
                        },
                        "minor": {
                          "type": "integer",
                          "description": "The minor number to be used in the beacon identifier"
                        }
                      },
                      "description": "Beacon Id parameters with an identifier and major and minor versions"
                    }
                  }
                },
                "example": {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "tags": [
                    " recently-added "
                  ],
                  "networkId": "N_24329156",
                  "serial": "Q234-ABCD-5678",
                  "model": "MR34",
                  "mac": "00:11:22:33:44:55",
                  "lanIp": "1.2.3.4",
                  "firmware": "wireless-25-14",
                  "floorPlanId": "g_2176982374",
                  "details": [
                    {
                      "name": "Catalyst serial",
                      "value": "123ABC"
                    }
                  ],
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  }
                }
              }
            }
          }
        },
        "summary": "Update the attributes of a device",
        "tags": [
          "devices",
          "configure"
        ]
      }
    },
    "/devices/{serial}/appliance/dhcp/subnets": {
      "get": {
        "description": "Return the DHCP subnet information for an appliance",
        "operationId": "getDeviceApplianceDhcpSubnets",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subnet": {
                        "type": "string",
                        "description": "Subnet"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "VLAN ID"
                      },
                      "usedCount": {
                        "type": "integer",
                        "description": "Count of used IP addresses in subnet"
                      },
                      "freeCount": {
                        "type": "integer",
                        "description": "Count of free IP addresses in subnet"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "subnet": "192.168.1.0/24",
                    "vlanId": 100,
                    "usedCount": 2,
                    "freeCount": 251
                  }
                ]
              }
            }
          }
        },
        "summary": "Return the DHCP subnet information for an appliance",
        "tags": [
          "appliance",
          "monitor",
          "dhcp",
          "subnets"
        ]
      }
    },
    "/devices/{serial}/appliance/performance": {
      "get": {
        "description": "Return the performance score for a single MX. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
        "operationId": "getDeviceAppliancePerformance",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 14 days after t0.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 30 minutes and be less than or equal to 14 days. The default is 30 minutes.",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1800,
              "maximum": 1209600
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "perfScore": {
                      "type": "number",
                      "format": "float",
                      "description": "Utilization for the MX device"
                    }
                  }
                },
                "example": {
                  "perfScore": 10.0
                }
              }
            }
          }
        },
        "summary": "Return the performance score for a single MX",
        "tags": [
          "appliance",
          "monitor",
          "performance"
        ]
      }
    },
    "/devices/{serial}/appliance/prefixes/delegated": {
      "get": {
        "description": "Return current delegated IPv6 prefixes on an appliance.",
        "operationId": "getDeviceAppliancePrefixesDelegated",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "example": [
                  {
                    "origin": {
                      "interface": "wan1"
                    },
                    "prefix": "2001:db8:3c4d:15::/64",
                    "counts": {
                      "assigned": 2,
                      "available": 253
                    },
                    "method": "auto",
                    "description": "My ISP provider",
                    "isPreferred": true,
                    "expiresAt": "2018-05-12T00:00:00Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "Return current delegated IPv6 prefixes on an appliance.",
        "tags": [
          "appliance",
          "monitor",
          "prefixes",
          "delegated"
        ]
      }
    },
    "/devices/{serial}/appliance/prefixes/delegated/vlanAssignments": {
      "get": {
        "description": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance.",
        "operationId": "getDeviceAppliancePrefixesDelegatedVlanAssignments",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "example": [
                  {
                    "vlan": {
                      "id": 100,
                      "name": "My VLAN"
                    },
                    "origin": {
                      "interface": "wan1",
                      "prefix": "2001:db8:3c4d:15::/64"
                    },
                    "status": "Active",
                    "ipv6": {
                      "prefix": "2001:db8:3c4d:15::/64",
                      "address": "2001:db8:3c4d:15::1",
                      "linkLocal": {
                        "address": "2001:db8:3c4d:15::1"
                      },
                      "solicitedNodeMulticast": {
                        "address": "2001:db8:3c4d:15::1"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance.",
        "tags": [
          "appliance",
          "monitor",
          "prefixes",
          "delegated",
          "vlanAssignments"
        ]
      }
    },
    "/devices/{serial}/appliance/radio/settings": {
      "get": {
        "description": "Return the radio settings of an appliance",
        "operationId": "getDeviceApplianceRadioSettings",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serial": {
                      "type": "string",
                      "description": "The device serial"
                    },
                    "rfProfileId": {
                      "type": "string",
                      "description": "RF Profile ID"
                    },
                    "twoFourGhzSettings": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                          ],
                          "description": "Manual channel for 2.4 GHz"
                        },
                        "targetPower": {
                          "type": "integer",
                          "description": "Manual target power for 2.4 GHz"
                        }
                      },
                      "description": "Manual radio settings for 2.4 GHz"
                    },
                    "fiveGhzSettings": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "integer",
                          "enum": [
                            36,
                            40,
                            44,
                            48,
                            52,
                            56,
                            60,
                            64,
                            100,
                            104,
                            108,
                            112,
                            116,
                            120,
                            124,
                            128,
                            132,
                            136,
                            140,
                            144,
                            149,
                            153,
                            157,
                            161,
                            165,
                            169,
                            173,
                            177
                          ],
                          "description": "Manual channel for 5 GHz"
                        },
                        "channelWidth": {
                          "type": "integer",
                          "enum": [
                            0,
                            20,
                            40,
                            80,
                            160
                          ],
                          "description": "Manual channel width for 5 GHz"
                        },
                        "targetPower": {
                          "type": "integer",
                          "description": "Manual target power for 5 GHz"
                        }
                      },
                      "description": "Manual radio settings for 5 GHz"
                    }
                  }
                },
                "example": {
                  "serial": "Q234-ABCD-5678",
                  "rfProfileId": "1234",
                  "twoFourGhzSettings": {
                    "channel": 11,
                    "targetPower": 21
                  },
                  "fiveGhzSettings": {
                    "channel": 149,
                    "channelWidth": 20,
                    "targetPower": 15
                  }
                }
              }
            }
          }
        },
        "summary": "Return the radio settings of an appliance",
        "tags": [
          "appliance",
          "configure",
          "radio",
          "settings"
        ]
      },
      "put": {
        "description": "Update the radio settings of an appliance",
        "operationId": "updateDeviceApplianceRadioSettings",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rfProfileId": {
                    "type": "string",
                    "nullable": true,
                    "description": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power)."
                  },
                  "twoFourGhzSettings": {
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          10,
                          11,
                          12,
                          13,
                          14
                        ],
                        "description": "Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel."
                      },
                      "targetPower": {
                        "type": "integer",
                        "description": "Set a manual target power for 2.4 GHz (dBm). Enter null for using auto power range."
                      }
                    },
                    "description": "Manual radio settings for 2.4 GHz."
                  },
                  "fiveGhzSettings": {
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "integer",
                        "enum": [
                          36,
                          40,
                          44,
                          48,
                          52,
                          56,
                          60,
                          64,
                          100,
                          104,
                          108,
                          112,
                          116,
                          120,
                          124,
                          128,
                          132,
                          136,
                          140,
                          144,
                          149,
                          153,
                          157,
                          161,
                          165,
                          169,
                          173,
                          177
                        ],
                        "description": "Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel."
                      },
                      "channelWidth": {
                        "type": "integer",
                        "enum": [
                          0,
                          20,
                          40,
                          80,
                          160
                        ],
                        "description": "Sets a manual channel width for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width."
                      },
                      "targetPower": {
                        "type": "integer",
                        "description": "Set a manual target power for 5 GHz (dBm). Enter null for using auto power range."
                      }
                    },
                    "description": "Manual radio settings for 5 GHz."
                  }
                },
                "example": {
                  "rfProfileId": "1234",
                  "twoFourGhzSettings": {
                    "channel": 11,
                    "targetPower": 21
                  },
                  "fiveGhzSettings": {
                    "channel": 149,
                    "channelWidth": 20,
                    "targetPower": 15
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serial": {
                      "type": "string",
                      "description": "The device serial"
                    },
                    "rfProfileId": {
                      "type": "string",
                      "description": "RF Profile ID"
                    },
                    "twoFourGhzSettings": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                          ],
                          "description": "Manual channel for 2.4 GHz"
                        },
                        "targetPower": {
                          "type": "integer",
                          "description": "Manual target power for 2.4 GHz"
                        }
                      },
                      "description": "Manual radio settings for 2.4 GHz"
                    },
                    "fiveGhzSettings": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "integer",
                          "enum": [
                            36,
                            40,
                            44,
                            48,
                            52,
                            56,
                            60,
                            64,
                            100,
                            104,
                            108,
                            112,
                            116,
                            120,
                            124,
                            128,
                            132,
                            136,
                            140,
                            144,
                            149,
                            153,
                            157,
                            161,
                            165,
                            169,
                            173,
                            177
                          ],
                          "description": "Manual channel for 5 GHz"
                        },
                        "channelWidth": {
                          "type": "integer",
                          "enum": [
                            0,
                            20,
                            40,
                            80,
                            160
                          ],
                          "description": "Manual channel width for 5 GHz"
                        },
                        "targetPower": {
                          "type": "integer",
                          "description": "Manual target power for 5 GHz"
                        }
                      },
                      "description": "Manual radio settings for 5 GHz"
                    }
                  }
                },
                "example": {
                  "serial": "Q234-ABCD-5678",
                  "rfProfileId": "1234",
                  "twoFourGhzSettings": {
                    "channel": 11,
                    "targetPower": 21
                  },
                  "fiveGhzSettings": {
                    "channel": 149,
                    "channelWidth": 20,
                    "targetPower": 15
                  }
                }
              }
            }
          }
        },
        "summary": "Update the radio settings of an appliance",
        "tags": [
          "appliance",
          "configure",
          "radio",
          "settings"
        ]
      }
    },
    "/devices/{serial}/appliance/uplinks/settings": {
      "get": {
        "description": "Return the uplink settings for an MX appliance",
        "operationId": "getDeviceApplianceUplinksSettings",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interfaces": {
                      "type": "object",
                      "properties": {
                        "wan1": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Enable or disable the interface."
                            },
                            "vlanTagging": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether VLAN tagging is enabled."
                                },
                                "vlanId": {
                                  "type": "integer",
                                  "description": "The ID of the VLAN to use for VLAN tagging."
                                }
                              },
                              "description": "VLAN tagging settings."
                            },
                            "svis": {
                              "type": "object",
                              "properties": {
                                "ipv4": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "IP address and subnet mask when in static mode."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Gateway IP address when in static mode."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv4 settings for static/dynamic mode."
                                },
                                "ipv6": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Static address that will override the one(s) received by SLAAC."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Static gateway that will override the one received by autoconf."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv6 settings for static/dynamic mode."
                                }
                              },
                              "description": "SVI settings by protocol."
                            },
                            "pppoe": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether PPPoE is enabled."
                                },
                                "authentication": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether PPPoE authentication is enabled."
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "Username for PPPoE authentication."
                                    }
                                  },
                                  "description": "Settings for PPPoE Authentication."
                                }
                              },
                              "description": "Configuration options for PPPoE."
                            }
                          },
                          "description": "WAN 1 settings."
                        },
                        "wan2": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Enable or disable the interface."
                            },
                            "vlanTagging": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether VLAN tagging is enabled."
                                },
                                "vlanId": {
                                  "type": "integer",
                                  "description": "The ID of the VLAN to use for VLAN tagging."
                                }
                              },
                              "description": "VLAN tagging settings."
                            },
                            "svis": {
                              "type": "object",
                              "properties": {
                                "ipv4": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "IP address and subnet mask when in static mode."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Gateway IP address when in static mode."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv4 settings for static/dynamic mode."
                                },
                                "ipv6": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Static address that will override the one(s) received by SLAAC."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Static gateway that will override the one received by autoconf."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv6 settings for static/dynamic mode."
                                }
                              },
                              "description": "SVI settings by protocol."
                            },
                            "pppoe": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether PPPoE is enabled."
                                },
                                "authentication": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether PPPoE authentication is enabled."
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "Username for PPPoE authentication."
                                    }
                                  },
                                  "description": "Settings for PPPoE Authentication."
                                }
                              },
                              "description": "Configuration options for PPPoE."
                            }
                          },
                          "description": "WAN 2 settings."
                        }
                      },
                      "description": "Interface settings."
                    }
                  }
                },
                "example": {
                  "interfaces": {
                    "wan1": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username"
                        }
                      }
                    },
                    "wan2": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return the uplink settings for an MX appliance",
        "tags": [
          "appliance",
          "configure",
          "uplinks",
          "settings"
        ]
      },
      "put": {
        "description": "Update the uplink settings for an MX appliance",
        "operationId": "updateDeviceApplianceUplinksSettings",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interfaces": {
                    "type": "object",
                    "properties": {
                      "wan1": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable or disable the interface."
                          },
                          "vlanTagging": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether VLAN tagging is enabled."
                              },
                              "vlanId": {
                                "type": "integer",
                                "description": "The ID of the VLAN to use for VLAN tagging."
                              }
                            },
                            "description": "VLAN tagging settings."
                          },
                          "svis": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "properties": {
                                  "assignmentMode": {
                                    "type": "string",
                                    "enum": [
                                      "dynamic",
                                      "static"
                                    ],
                                    "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "IP address and subnet mask when in static mode."
                                  },
                                  "gateway": {
                                    "type": "string",
                                    "description": "Gateway IP address when in static mode."
                                  },
                                  "nameservers": {
                                    "type": "object",
                                    "properties": {
                                      "addresses": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                      }
                                    },
                                    "description": "The nameserver settings for this SVI."
                                  }
                                },
                                "description": "IPv4 settings for static/dynamic mode."
                              },
                              "ipv6": {
                                "type": "object",
                                "properties": {
                                  "assignmentMode": {
                                    "type": "string",
                                    "enum": [
                                      "dynamic",
                                      "static"
                                    ],
                                    "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "Static address that will override the one(s) received by SLAAC."
                                  },
                                  "gateway": {
                                    "type": "string",
                                    "description": "Static gateway that will override the one received by autoconf."
                                  },
                                  "nameservers": {
                                    "type": "object",
                                    "properties": {
                                      "addresses": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                      }
                                    },
                                    "description": "The nameserver settings for this SVI."
                                  }
                                },
                                "description": "IPv6 settings for static/dynamic mode."
                              }
                            },
                            "description": "SVI settings by protocol."
                          },
                          "pppoe": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether PPPoE is enabled."
                              },
                              "authentication": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Whether PPPoE authentication is enabled."
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "Username for PPPoE authentication."
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "Password for PPPoE authentication. This parameter is not returned."
                                  }
                                },
                                "description": "Settings for PPPoE Authentication."
                              }
                            },
                            "description": "Configuration options for PPPoE."
                          }
                        },
                        "description": "WAN 1 settings."
                      },
                      "wan2": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable or disable the interface."
                          },
                          "vlanTagging": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether VLAN tagging is enabled."
                              },
                              "vlanId": {
                                "type": "integer",
                                "description": "The ID of the VLAN to use for VLAN tagging."
                              }
                            },
                            "description": "VLAN tagging settings."
                          },
                          "svis": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "properties": {
                                  "assignmentMode": {
                                    "type": "string",
                                    "enum": [
                                      "dynamic",
                                      "static"
                                    ],
                                    "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "IP address and subnet mask when in static mode."
                                  },
                                  "gateway": {
                                    "type": "string",
                                    "description": "Gateway IP address when in static mode."
                                  },
                                  "nameservers": {
                                    "type": "object",
                                    "properties": {
                                      "addresses": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                      }
                                    },
                                    "description": "The nameserver settings for this SVI."
                                  }
                                },
                                "description": "IPv4 settings for static/dynamic mode."
                              },
                              "ipv6": {
                                "type": "object",
                                "properties": {
                                  "assignmentMode": {
                                    "type": "string",
                                    "enum": [
                                      "dynamic",
                                      "static"
                                    ],
                                    "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "Static address that will override the one(s) received by SLAAC."
                                  },
                                  "gateway": {
                                    "type": "string",
                                    "description": "Static gateway that will override the one received by autoconf."
                                  },
                                  "nameservers": {
                                    "type": "object",
                                    "properties": {
                                      "addresses": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                      }
                                    },
                                    "description": "The nameserver settings for this SVI."
                                  }
                                },
                                "description": "IPv6 settings for static/dynamic mode."
                              }
                            },
                            "description": "SVI settings by protocol."
                          },
                          "pppoe": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether PPPoE is enabled."
                              },
                              "authentication": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Whether PPPoE authentication is enabled."
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "Username for PPPoE authentication."
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "Password for PPPoE authentication. This parameter is not returned."
                                  }
                                },
                                "description": "Settings for PPPoE Authentication."
                              }
                            },
                            "description": "Configuration options for PPPoE."
                          }
                        },
                        "description": "WAN 2 settings."
                      }
                    },
                    "description": "Interface settings."
                  }
                },
                "example": {
                  "interfaces": {
                    "wan1": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username",
                          "password": "password"
                        }
                      }
                    },
                    "wan2": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username",
                          "password": "password"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "interfaces"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interfaces": {
                      "type": "object",
                      "properties": {
                        "wan1": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Enable or disable the interface."
                            },
                            "vlanTagging": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether VLAN tagging is enabled."
                                },
                                "vlanId": {
                                  "type": "integer",
                                  "description": "The ID of the VLAN to use for VLAN tagging."
                                }
                              },
                              "description": "VLAN tagging settings."
                            },
                            "svis": {
                              "type": "object",
                              "properties": {
                                "ipv4": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "IP address and subnet mask when in static mode."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Gateway IP address when in static mode."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv4 settings for static/dynamic mode."
                                },
                                "ipv6": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Static address that will override the one(s) received by SLAAC."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Static gateway that will override the one received by autoconf."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv6 settings for static/dynamic mode."
                                }
                              },
                              "description": "SVI settings by protocol."
                            },
                            "pppoe": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether PPPoE is enabled."
                                },
                                "authentication": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether PPPoE authentication is enabled."
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "Username for PPPoE authentication."
                                    }
                                  },
                                  "description": "Settings for PPPoE Authentication."
                                }
                              },
                              "description": "Configuration options for PPPoE."
                            }
                          },
                          "description": "WAN 1 settings."
                        },
                        "wan2": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Enable or disable the interface."
                            },
                            "vlanTagging": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether VLAN tagging is enabled."
                                },
                                "vlanId": {
                                  "type": "integer",
                                  "description": "The ID of the VLAN to use for VLAN tagging."
                                }
                              },
                              "description": "VLAN tagging settings."
                            },
                            "svis": {
                              "type": "object",
                              "properties": {
                                "ipv4": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "IP address and subnet mask when in static mode."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Gateway IP address when in static mode."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv4 settings for static/dynamic mode."
                                },
                                "ipv6": {
                                  "type": "object",
                                  "properties": {
                                    "assignmentMode": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic",
                                        "static"
                                      ],
                                      "description": "The assignment mode for this SVI. Applies only when PPPoE is disabled."
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Static address that will override the one(s) received by SLAAC."
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "description": "Static gateway that will override the one received by autoconf."
                                    },
                                    "nameservers": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority."
                                        }
                                      },
                                      "description": "The nameserver settings for this SVI."
                                    }
                                  },
                                  "description": "IPv6 settings for static/dynamic mode."
                                }
                              },
                              "description": "SVI settings by protocol."
                            },
                            "pppoe": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Whether PPPoE is enabled."
                                },
                                "authentication": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether PPPoE authentication is enabled."
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "Username for PPPoE authentication."
                                    }
                                  },
                                  "description": "Settings for PPPoE Authentication."
                                }
                              },
                              "description": "Configuration options for PPPoE."
                            }
                          },
                          "description": "WAN 2 settings."
                        }
                      },
                      "description": "Interface settings."
                    }
                  }
                },
                "example": {
                  "interfaces": {
                    "wan1": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username"
                        }
                      }
                    },
                    "wan2": {
                      "enabled": true,
                      "vlanTagging": {
                        "enabled": true,
                        "vlanId": 1
                      },
                      "svis": {
                        "ipv4": {
                          "assignmentMode": "static",
                          "address": "9.10.11.10/16",
                          "gateway": "13.14.15.16",
                          "nameservers": {
                            "addresses": [
                              "1.2.3.4"
                            ]
                          }
                        },
                        "ipv6": {
                          "assignmentMode": "static",
                          "address": "1:2:3::4",
                          "gateway": "1:2:3::5",
                          "nameservers": {
                            "addresses": [
                              "1001:4860:4860::8888",
                              "1001:4860:4860::8844"
                            ]
                          }
                        }
                      },
                      "pppoe": {
                        "enabled": true,
                        "authentication": {
                          "enabled": true,
                          "username": "username"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update the uplink settings for an MX appliance",
        "tags": [
          "appliance",
          "configure",
          "uplinks",
          "settings"
        ]
      }
    },
    "/devices/{serial}/appliance/vmx/authenticationToken": {
      "post": {
        "description": "Generate a new vMX authentication token",
        "operationId": "createDeviceApplianceVmxAuthenticationToken",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The newly generated authentication token for the vMX instance"
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "The expiration time for the token, in ISO 8601 format"
                    }
                  }
                },
                "example": {
                  "token": "ffc0b7b578b61be5bd1d172132c78044/9af03bd84d474",
                  "expiresAt": "2021-06-18T12:40:10Z"
                }
              }
            }
          }
        },
        "summary": "Generate a new vMX authentication token",
        "tags": [
          "appliance",
          "configure",
          "vmx",
          "authenticationToken"
        ]
      }
    },
    "/devices/{serial}/blinkLeds": {
      "post": {
        "deprecated": true,
        "description": "Blink the LEDs on a device.  This endpoint is deprecrated in favor of \"/devices/{serial}/liveTools/leds/blink\".",
        "operationId": "blinkDeviceLeds",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "integer",
                    "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                  },
                  "period": {
                    "type": "integer",
                    "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                  },
                  "duty": {
                    "type": "integer",
                    "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                  }
                },
                "example": {
                  "duration": 20,
                  "period": 160,
                  "duty": 50
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "duration": {
                      "type": "integer",
                      "description": "The duration in seconds. Will be between 5 and 120. Default is 20 seconds"
                    },
                    "period": {
                      "type": "integer",
                      "description": "The period in milliseconds. Will be between 100 and 1000. Default is 160 milliseconds"
                    },
                    "duty": {
                      "type": "integer",
                      "description": "The duty cycle as the percent active. Will be between 10 and 90. Default is 50"
                    }
                  }
                },
                "example": {
                  "duration": 20,
                  "period": 160,
                  "duty": 50
                }
              }
            }
          }
        },
        "summary": "Blink the LEDs on a device",
        "tags": [
          "devices",
          "liveTools"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/live": {
      "get": {
        "deprecated": true,
        "description": "Returns live state from camera analytics zones",
        "operationId": "getDeviceCameraAnalyticsLive",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ts": {
                      "type": "string",
                      "description": "The current time"
                    },
                    "zones": {
                      "type": "object",
                      "properties": {
                        "zoneId": {
                          "type": "object",
                          "properties": {
                            "person": {
                              "type": "integer",
                              "description": "The count per type, dynamic"
                            }
                          },
                          "description": "The zone state, dynamic"
                        }
                      },
                      "description": "The zones state"
                    }
                  }
                },
                "example": {
                  "ts": "2018-08-15T18:32:38.123Z",
                  "zones": {
                    "zoneId": {
                      "person": 0
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Returns live state from camera analytics zones",
        "tags": [
          "camera",
          "monitor",
          "analytics",
          "live"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/overview": {
      "get": {
        "deprecated": true,
        "description": "Returns an overview of aggregate analytics data for a timespan",
        "operationId": "getDeviceCameraAnalyticsOverview",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.",
            "schema": {
              "type": "number",
              "format": "float",
              "maximum": 604800
            }
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
            "schema": {
              "type": "string",
              "enum": [
                "person",
                "vehicle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time"
                      },
                      "endTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time"
                      },
                      "zoneId": {
                        "type": "integer",
                        "description": "The zone id"
                      },
                      "entrances": {
                        "type": "integer",
                        "description": "The number of sentrances"
                      },
                      "averageCount": {
                        "type": "number",
                        "format": "float",
                        "description": "The average count"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "startTs": "2018-08-15T18:32:38.123Z",
                    "endTs": "2018-08-15T18:33:38.123Z",
                    "zoneId": 0,
                    "entrances": 254,
                    "averageCount": 5.0
                  }
                ]
              }
            }
          }
        },
        "summary": "Returns an overview of aggregate analytics data for a timespan",
        "tags": [
          "camera",
          "monitor",
          "analytics",
          "overview"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/recent": {
      "get": {
        "deprecated": true,
        "description": "Returns most recent record for analytics zones",
        "operationId": "getDeviceCameraAnalyticsRecent",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
            "schema": {
              "type": "string",
              "enum": [
                "person",
                "vehicle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time"
                      },
                      "endTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time"
                      },
                      "zoneId": {
                        "type": "integer",
                        "description": "The zone id"
                      },
                      "entrances": {
                        "type": "integer",
                        "description": "The number of entrances"
                      },
                      "averageCount": {
                        "type": "number",
                        "format": "float",
                        "description": "The average count"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "startTs": "2018-08-15T18:32:38.123Z",
                    "endTs": "2018-08-15T18:33:38.123Z",
                    "zoneId": 0,
                    "entrances": 10,
                    "averageCount": 2.54
                  }
                ]
              }
            }
          }
        },
        "summary": "Returns most recent record for analytics zones",
        "tags": [
          "camera",
          "monitor",
          "analytics",
          "recent"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/zones": {
      "get": {
        "deprecated": true,
        "description": "Returns all configured analytic zones for this camera",
        "operationId": "getDeviceCameraAnalyticsZones",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The zone ID"
                      },
                      "type": {
                        "type": "string",
                        "description": "The zone type"
                      },
                      "label": {
                        "type": "string",
                        "description": "The zone label"
                      },
                      "regionOfInterest": {
                        "type": "object",
                        "properties": {
                          "x0": {
                            "type": "string",
                            "description": "The x0 coordinate"
                          },
                          "y0": {
                            "type": "string",
                            "description": "The y0 coordinate"
                          },
                          "x1": {
                            "type": "string",
                            "description": "The x1 coordinate"
                          },
                          "y1": {
                            "type": "string",
                            "description": "The y1 coordinate"
                          }
                        },
                        "description": "The region of interest"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "0",
                    "type": "occupancy",
                    "label": "Full Frame",
                    "regionOfInterest": {
                      "x0": "0.00",
                      "y0": "0.00",
                      "x1": "1.00",
                      "y1": "1.00"
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "Returns all configured analytic zones for this camera",
        "tags": [
          "camera",
          "monitor",
          "analytics",
          "zones"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/zones/{zoneId}/history": {
      "get": {
        "deprecated": true,
        "description": "Return historical records for analytic zones",
        "operationId": "getDeviceCameraAnalyticsZoneHistory",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "zoneId",
            "in": "path",
            "description": "Zone ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.",
            "schema": {
              "type": "number",
              "format": "float",
              "maximum": 50400
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
            "schema": {
              "type": "string",
              "enum": [
                "person",
                "vehicle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time"
                      },
                      "endTs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time"
                      },
                      "entrances": {
                        "type": "integer",
                        "description": "The number of entrances"
                      },
                      "averageCount": {
                        "type": "number",
                        "format": "float",
                        "description": "The average count"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "startTs": "2018-08-15T18:32:38.123Z",
                    "endTs": "2018-08-15T18:33:38.123Z",
                    "entrances": 5,
                    "averageCount": 1.5
                  }
                ]
              }
            }
          }
        },
        "summary": "Return historical records for analytic zones",
        "tags": [
          "camera",
          "monitor",
          "analytics",
          "zones",
          "history"
        ]
      }
    },
    "/devices/{serial}/camera/customAnalytics": {
      "get": {
        "description": "Return custom analytics settings for a camera",
        "operationId": "getDeviceCameraCustomAnalytics",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether custom analytics is enabled"
                    },
                    "artifactId": {
                      "type": "string",
                      "description": "Custom analytics artifact ID"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter"
                          },
                          "value": {
                            "type": "number",
                            "format": "float",
                            "description": "Value of the parameter"
                          }
                        }
                      },
                      "description": "Parameters for the custom analytics workload"
                    }
                  }
                },
                "example": {
                  "enabled": true,
                  "artifactId": "1",
                  "parameters": [
                    {
                      "name": "detection_threshold",
                      "value": 0.5
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return custom analytics settings for a camera",
        "tags": [
          "camera",
          "configure",
          "customAnalytics"
        ]
      },
      "put": {
        "description": "Update custom analytics settings for a camera",
        "operationId": "updateDeviceCameraCustomAnalytics",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable custom analytics"
                  },
                  "artifactId": {
                    "type": "string",
                    "description": "The ID of the custom analytics artifact"
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the parameter"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the parameter"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    },
                    "description": "Parameters for the custom analytics workload"
                  }
                },
                "example": {
                  "enabled": true,
                  "artifactId": "1",
                  "parameters": [
                    {
                      "name": "detection_threshold",
                      "value": "0.5"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether custom analytics is enabled"
                    },
                    "artifactId": {
                      "type": "string",
                      "description": "Custom analytics artifact ID"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter"
                          },
                          "value": {
                            "type": "number",
                            "format": "float",
                            "description": "Value of the parameter"
                          }
                        }
                      },
                      "description": "Parameters for the custom analytics workload"
                    }
                  }
                },
                "example": {
                  "enabled": true,
                  "artifactId": "1",
                  "parameters": [
                    {
                      "name": "detection_threshold",
                      "value": 0.5
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update custom analytics settings for a camera",
        "tags": [
          "camera",
          "configure",
          "customAnalytics"
        ]
      }
    },
    "/networks/{networkId}": {
      "get": {
        "description": "Return a network",
        "operationId": "getNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Network ID"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Network name"
                    },
                    "productTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of the product types that the network supports"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone of the network"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Network tags"
                    },
                    "enrollmentString": {
                      "type": "string",
                      "description": "Enrollment string for the network"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to the network Dashboard UI"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes for the network"
                    },
                    "isBoundToConfigTemplate": {
                      "type": "boolean",
                      "description": "If the network is bound to a config template"
                    }
                  }
                },
                "example": {
                  "id": "N_24329156",
                  "organizationId": "2930418",
                  "name": "Main Office",
                  "productTypes": [
                    "appliance",
                    "switch",
                    "wireless"
                  ],
                  "timeZone": "America/Los_Angeles",
                  "tags": [
                    "tag1",
                    "tag2"
                  ],
                  "enrollmentString": "my-enrollment-string",
                  "url": "https://n1.meraki.com//n//manage/nodes/list",
                  "notes": "Additional description of the network",
                  "isBoundToConfigTemplate": false
                }
              }
            }
          }
        },
        "summary": "Return a network",
        "tags": [
          "networks",
          "configure"
        ]
      },
      "put": {
        "description": "Update a network",
        "operationId": "updateNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the network"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of tags to be applied to the network"
                  },
                  "enrollmentString": {
                    "type": "string",
                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "description": "Add any notes or additional information about this network here."
                  }
                },
                "example": {
                  "name": "Main Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": [
                    "tag1",
                    "tag2"
                  ],
                  "enrollmentString": "my-enrollment-string",
                  "notes": "Additional description of the network"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Network ID"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Network name"
                    },
                    "productTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of the product types that the network supports"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone of the network"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Network tags"
                    },
                    "enrollmentString": {
                      "type": "string",
                      "description": "Enrollment string for the network"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to the network Dashboard UI"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes for the network"
                    },
                    "isBoundToConfigTemplate": {
                      "type": "boolean",
                      "description": "If the network is bound to a config template"
                    }
                  }
                },
                "example": {
                  "id": "N_24329156",
                  "organizationId": "2930418",
                  "name": "Main Office",
                  "productTypes": [
                    "appliance",
                    "switch",
                    "wireless"
                  ],
                  "timeZone": "America/Los_Angeles",
                  "tags": [
                    "tag1",
                    "tag2"
                  ],
                  "enrollmentString": "my-enrollment-string",
                  "url": "https://n1.meraki.com//n//manage/nodes/list",
                  "notes": "Additional description of the network",
                  "isBoundToConfigTemplate": false
                }
              }
            }
          }
        },
        "summary": "Update a network",
        "tags": [
          "networks",
          "configure"
        ]
      },
      "delete": {
        "description": "Delete a network",
        "operationId": "deleteNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Delete a network",
        "tags": [
          "networks",
          "configure"
        ]
      }
    },
    "/networks/{networkId}/alerts/history": {
      "get": {
        "description": "Return the alert history for this network",
        "operationId": "getNetworkAlertsHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "occurredAt": {
                        "type": "string",
                        "description": "time when the event occurred"
                      },
                      "alertTypeId": {
                        "type": "string",
                        "description": "type of alert"
                      },
                      "alertType": {
                        "type": "string",
                        "description": "user friendly alert type"
                      },
                      "device": {
                        "type": "object",
                        "properties": {
                          "serial": {
                            "type": "string",
                            "description": "device serial"
                          }
                        },
                        "description": "info related to the device that caused the alert"
                      },
                      "destinations": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "object",
                            "properties": {
                              "sentAt": {
                                "type": "string",
                                "description": "time when the alert was sent to the user(s) for this channel"
                              }
                            },
                            "description": "email destinations for this alert"
                          },
                          "push": {
                            "type": "object",
                            "properties": {
                              "sentAt": {
                                "type": "string",
                                "description": "time when the alert was sent to the user(s) for this channel"
                              }
                            },
                            "description": "push destinations for this alert"
                          },
                          "sms": {
                            "type": "object",
                            "properties": {
                              "sentAt": {
                                "type": "string",
                                "description": "time when the alert was sent to the user(s) for this channel"
                              }
                            },
                            "description": "sms destinations for this alert"
                          },
                          "webhook": {
                            "type": "object",
                            "properties": {
                              "sentAt": {
                                "type": "string",
                                "description": "time when the alert was sent to the user(s) for this channel"
                              }
                            },
                            "description": "webhook destinations for this alert"
                          }
                        },
                        "description": "the destinations this alert is configured to be delivered to"
                      },
                      "alertData": {
                        "type": "object",
                        "description": "relevant data about the event that caused the alert"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "occurredAt": "2022-07-11T22:35:34Z",
                    "alertTypeId": "settings_changed",
                    "alertType": "Settings changed",
                    "device": {
                      "serial": "Q3CG-G6W8-BEVR"
                    },
                    "destinations": {
                      "email": {
                        "sentAt": "2022-07-11T22:40:34Z"
                      },
                      "push": {
                        "sentAt": "2022-07-11T22:40:34Z"
                      },
                      "sms": {
                        "sentAt": "2022-07-11T22:40:34Z"
                      },
                      "webhook": {
                        "sentAt": "2022-07-11T22:40:34Z"
                      }
                    }
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            }
          }
        },
        "summary": "Return the alert history for this network",
        "tags": [
          "networks",
          "monitor",
          "alerts",
          "history"
        ]
      }
    },
    "/networks/{networkId}/alerts/settings": {
      "get": {
        "description": "Return the alert configuration for this network",
        "operationId": "getNetworkAlertsSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "defaultDestinations": {
                      "type": "object",
                      "properties": {
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of emails that will receive the alert(s)."
                        },
                        "allAdmins": {
                          "type": "boolean",
                          "description": "If true, then all network admins will receive emails."
                        },
                        "snmp": {
                          "type": "boolean",
                          "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network."
                        },
                        "httpServerIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of HTTP server IDs to send a Webhook to"
                        }
                      },
                      "description": "The network-wide destinations for all alerts on the network."
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of alert"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "A boolean depicting if the alert is turned on or off"
                          },
                          "alertDestinations": {
                            "type": "object",
                            "properties": {
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of emails that will receive information about the alert"
                              },
                              "smsNumbers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of phone numbers that will receive text messages about the alert. Only available for sensors status alerts."
                              },
                              "allAdmins": {
                                "type": "boolean",
                                "description": "If true, then all network admins will receive emails for this alert"
                              },
                              "snmp": {
                                "type": "boolean",
                                "description": "If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network"
                              },
                              "httpServerIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of HTTP server IDs to send a Webhook to for this alert"
                              }
                            },
                            "description": "A hash of destinations for this specific alert"
                          },
                          "filters": {
                            "type": "object",
                            "properties": {
                              "conditions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of condition"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "Unit"
                                    },
                                    "duration": {
                                      "type": "integer",
                                      "description": "Duration"
                                    },
                                    "direction": {
                                      "type": "string",
                                      "enum": [
                                        "+",
                                        "-"
                                      ],
                                      "description": "Direction"
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "format": "float",
                                      "description": "Threshold"
                                    }
                                  }
                                },
                                "description": "Conditions"
                              },
                              "failureType": {
                                "type": "string",
                                "description": "Failure Type"
                              },
                              "lookbackWindow": {
                                "type": "integer",
                                "description": "Loopback Window (in sec)"
                              },
                              "minDuration": {
                                "type": "integer",
                                "description": "Min Duration"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name"
                              },
                              "period": {
                                "type": "integer",
                                "description": "Period"
                              },
                              "priority": {
                                "type": "string",
                                "description": "Priority"
                              },
                              "regex": {
                                "type": "string",
                                "description": "Regex"
                              },
                              "selector": {
                                "type": "string",
                                "description": "Selector"
                              },
                              "serials": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Serials"
                              },
                              "ssidNum": {
                                "type": "integer",
                                "description": "SSID Number"
                              },
                              "tag": {
                                "type": "string",
                                "description": "Tag"
                              },
                              "threshold": {
                                "type": "integer",
                                "description": "Threshold"
                              },
                              "timeout": {
                                "type": "integer",
                                "description": "Timeout"
                              }
                            },
                            "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated."
                    },
                    "muting": {
                      "type": "object",
                      "properties": {
                        "byPortSchedules": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "If true, then wireless unreachable alerts will be muted when caused by a port schedule"
                            }
                          },
                          "description": "Mute wireless unreachable alerts based on switch port schedules"
                        }
                      },
                      "description": "Mute alerts under certain conditions"
                    }
                  }
                },
                "example": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true,
                    "snmp": true,
                    "httpServerIds": [
                      "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                    ]
                  },
                  "alerts": [
                    {
                      "type": "gatewayDown",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "smsNumbers": [
                          "+15555555555"
                        ],
                        "allAdmins": false,
                        "snmp": false,
                        "httpServerIds": [
                          "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                        ]
                      },
                      "filters": {
                        "conditions": [
                          {
                            "type": "temperature",
                            "unit": "celsius",
                            "duration": 0,
                            "direction": "+",
                            "threshold": 72.5
                          }
                        ],
                        "failureType": "802.1X auth fail",
                        "lookbackWindow": 360,
                        "minDuration": 60,
                        "name": "Filter",
                        "period": 1800,
                        "priority": "",
                        "regex": "[a-z]",
                        "selector": "{\"smartSensitivity\":\"medium\",\"smartEnabled\":false,\"eventReminderPeriodSecs\":10800}",
                        "serials": [
                          "Q234-ABCD-0001",
                          "Q234-ABCD-0002",
                          "Q234-ABCD-0003"
                        ],
                        "ssidNum": 1,
                        "tag": "tag1",
                        "threshold": 30,
                        "timeout": 60
                      }
                    }
                  ],
                  "muting": {
                    "byPortSchedules": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return the alert configuration for this network",
        "tags": [
          "networks",
          "configure",
          "alerts",
          "settings"
        ]
      },
      "put": {
        "description": "Update the alert configuration for this network",
        "operationId": "updateNetworkAlertsSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "defaultDestinations": {
                    "type": "object",
                    "properties": {
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of emails that will receive the alert(s)."
                      },
                      "allAdmins": {
                        "type": "boolean",
                        "description": "If true, then all network admins will receive emails."
                      },
                      "snmp": {
                        "type": "boolean",
                        "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network."
                      },
                      "httpServerIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of HTTP server IDs to send a Webhook to"
                      }
                    },
                    "description": "The network-wide destinations for all alerts on the network."
                  },
                  "alerts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of alert"
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "A boolean depicting if the alert is turned on or off"
                        },
                        "alertDestinations": {
                          "type": "object",
                          "properties": {
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of emails that will receive information about the alert"
                            },
                            "smsNumbers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of phone numbers that will receive text messages about the alert. Only available for sensors status alerts."
                            },
                            "allAdmins": {
                              "type": "boolean",
                              "description": "If true, then all network admins will receive emails for this alert"
                            },
                            "snmp": {
                              "type": "boolean",
                              "description": "If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network"
                            },
                            "httpServerIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of HTTP server IDs to send a Webhook to for this alert"
                            }
                          },
                          "description": "A hash of destinations for this specific alert"
                        },
                        "filters": {
                          "type": "object",
                          "properties": {
                            "conditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of condition"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "Unit"
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                  },
                                  "direction": {
                                    "type": "string",
                                    "enum": [
                                      "+",
                                      "-"
                                    ],
                                    "description": "Direction"
                                  },
                                  "threshold": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "Threshold"
                                  }
                                }
                              },
                              "description": "Conditions"
                            },
                            "failureType": {
                              "type": "string",
                              "description": "Failure Type"
                            },
                            "lookbackWindow": {
                              "type": "integer",
                              "description": "Loopback Window (in sec)"
                            },
                            "minDuration": {
                              "type": "integer",
                              "description": "Min Duration"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name"
                            },
                            "period": {
                              "type": "integer",
                              "description": "Period"
                            },
                            "priority": {
                              "type": "string",
                              "description": "Priority"
                            },
                            "regex": {
                              "type": "string",
                              "description": "Regex"
                            },
                            "selector": {
                              "type": "string",
                              "description": "Selector"
                            },
                            "serials": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Serials"
                            },
                            "ssidNum": {
                              "type": "integer",
                              "description": "SSID Number"
                            },
                            "tag": {
                              "type": "string",
                              "description": "Tag"
                            },
                            "threshold": {
                              "type": "integer",
                              "description": "Threshold"
                            },
                            "timeout": {
                              "type": "integer",
                              "description": "Timeout"
                            }
                          },
                          "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated."
                  },
                  "muting": {
                    "type": "object",
                    "properties": {
                      "byPortSchedules": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "If true, then wireless unreachable alerts will be muted when caused by a port schedule"
                          }
                        },
                        "description": "Mute wireless unreachable alerts based on switch port schedules"
                      }
                    },
                    "description": "Mute alerts under certain conditions"
                  }
                },
                "example": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true,
                    "snmp": true,
                    "httpServerIds": [
                      "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                    ]
                  },
                  "alerts": [
                    {
                      "type": "gatewayDown",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "smsNumbers": [
                          "+15555555555"
                        ],
                        "allAdmins": false,
                        "snmp": false,
                        "httpServerIds": [
                          "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                        ]
                      },
                      "filters": {
                        "conditions": [
                          {
                            "type": "temperature",
                            "unit": "celsius",
                            "duration": 0,
                            "direction": "+",
                            "threshold": 72.5
                          }
                        ],
                        "failureType": "802.1X auth fail",
                        "lookbackWindow": 360,
                        "minDuration": 60,
                        "name": "Filter",
                        "period": 1800,
                        "priority": "",
                        "regex": "[a-z]",
                        "selector": "{\"smartSensitivity\":\"medium\",\"smartEnabled\":false,\"eventReminderPeriodSecs\":10800}",
                        "serials": [
                          "Q234-ABCD-0001",
                          "Q234-ABCD-0002",
                          "Q234-ABCD-0003"
                        ],
                        "ssidNum": 1,
                        "tag": "tag1",
                        "threshold": 30,
                        "timeout": 60
                      }
                    }
                  ],
                  "muting": {
                    "byPortSchedules": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "defaultDestinations": {
                      "type": "object",
                      "properties": {
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of emails that will receive the alert(s)."
                        },
                        "allAdmins": {
                          "type": "boolean",
                          "description": "If true, then all network admins will receive emails."
                        },
                        "snmp": {
                          "type": "boolean",
                          "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network."
                        },
                        "httpServerIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of HTTP server IDs to send a Webhook to"
                        }
                      },
                      "description": "The network-wide destinations for all alerts on the network."
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of alert"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "A boolean depicting if the alert is turned on or off"
                          },
                          "alertDestinations": {
                            "type": "object",
                            "properties": {
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of emails that will receive information about the alert"
                              },
                              "smsNumbers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of phone numbers that will receive text messages about the alert. Only available for sensors status alerts."
                              },
                              "allAdmins": {
                                "type": "boolean",
                                "description": "If true, then all network admins will receive emails for this alert"
                              },
                              "snmp": {
                                "type": "boolean",
                                "description": "If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network"
                              },
                              "httpServerIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of HTTP server IDs to send a Webhook to for this alert"
                              }
                            },
                            "description": "A hash of destinations for this specific alert"
                          },
                          "filters": {
                            "type": "object",
                            "properties": {
                              "conditions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of condition"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "Unit"
                                    },
                                    "duration": {
                                      "type": "integer",
                                      "description": "Duration"
                                    },
                                    "direction": {
                                      "type": "string",
                                      "enum": [
                                        "+",
                                        "-"
                                      ],
                                      "description": "Direction"
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "format": "float",
                                      "description": "Threshold"
                                    }
                                  }
                                },
                                "description": "Conditions"
                              },
                              "failureType": {
                                "type": "string",
                                "description": "Failure Type"
                              },
                              "lookbackWindow": {
                                "type": "integer",
                                "description": "Loopback Window (in sec)"
                              },
                              "minDuration": {
                                "type": "integer",
                                "description": "Min Duration"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name"
                              },
                              "period": {
                                "type": "integer",
                                "description": "Period"
                              },
                              "priority": {
                                "type": "string",
                                "description": "Priority"
                              },
                              "regex": {
                                "type": "string",
                                "description": "Regex"
                              },
                              "selector": {
                                "type": "string",
                                "description": "Selector"
                              },
                              "serials": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Serials"
                              },
                              "ssidNum": {
                                "type": "integer",
                                "description": "SSID Number"
                              },
                              "tag": {
                                "type": "string",
                                "description": "Tag"
                              },
                              "threshold": {
                                "type": "integer",
                                "description": "Threshold"
                              },
                              "timeout": {
                                "type": "integer",
                                "description": "Timeout"
                              }
                            },
                            "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated."
                    },
                    "muting": {
                      "type": "object",
                      "properties": {
                        "byPortSchedules": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "If true, then wireless unreachable alerts will be muted when caused by a port schedule"
                            }
                          },
                          "description": "Mute wireless unreachable alerts based on switch port schedules"
                        }
                      },
                      "description": "Mute alerts under certain conditions"
                    }
                  }
                },
                "example": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true,
                    "snmp": true,
                    "httpServerIds": [
                      "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                    ]
                  },
                  "alerts": [
                    {
                      "type": "gatewayDown",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "smsNumbers": [
                          "+15555555555"
                        ],
                        "allAdmins": false,
                        "snmp": false,
                        "httpServerIds": [
                          "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                        ]
                      },
                      "filters": {
                        "conditions": [
                          {
                            "type": "temperature",
                            "unit": "celsius",
                            "duration": 0,
                            "direction": "+",
                            "threshold": 72.5
                          }
                        ],
                        "failureType": "802.1X auth fail",
                        "lookbackWindow": 360,
                        "minDuration": 60,
                        "name": "Filter",
                        "period": 1800,
                        "priority": "",
                        "regex": "[a-z]",
                        "selector": "{\"smartSensitivity\":\"medium\",\"smartEnabled\":false,\"eventReminderPeriodSecs\":10800}",
                        "serials": [
                          "Q234-ABCD-0001",
                          "Q234-ABCD-0002",
                          "Q234-ABCD-0003"
                        ],
                        "ssidNum": 1,
                        "tag": "tag1",
                        "threshold": 30,
                        "timeout": 60
                      }
                    }
                  ],
                  "muting": {
                    "byPortSchedules": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update the alert configuration for this network",
        "tags": [
          "networks",
          "configure",
          "alerts",
          "settings"
        ]
      }
    },
    "/networks/{networkId}/appliance/clients/{clientId}/security/events": {
      "get": {
        "description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkApplianceClientSecurityEvents",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.",
            "schema": {
              "type": "number",
              "format": "float",
              "maximum": 68342400
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
            "schema": {
              "type": "string",
              "enum": [
                "ascending",
                "descending"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "example": [
                  {
                    "ts": "2018-02-11T00:00:00.090210Z",
                    "eventType": "File Scanned",
                    "clientName": "COMPUTER-M-V78J",
                    "clientMac": "10:dd:b1:eb:88:f8",
                    "clientIp": "192.168.128.2",
                    "srcIp": "192.168.128.2",
                    "destIp": "119.192.233.48",
                    "protocol": "http",
                    "uri": "http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe",
                    "canonicalName": "PUA.Win.Dropper.Kraddare::1201",
                    "destinationPort": 80,
                    "fileHash": "3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463",
                    "fileType": "MS_EXE",
                    "fileSizeBytes": 193688,
                    "disposition": "Malicious",
                    "action": "Blocked"
                  },
                  {
                    "ts": "2018-02-11T00:00:00.090210Z",
                    "eventType": "IDS Alert",
                    "deviceMac": "00:18:0a:01:02:03",
                    "clientMac": "A1:B2:C3:D4:E5:F6",
                    "srcIp": "1.2.3.4:34195",
                    "destIp": "10.20.30.40:80",
                    "protocol": "tcp/ip",
                    "priority": "2",
                    "classification": "4",
                    "blocked": true,
                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                    "signature": "1:21516:9",
                    "sigSource": "",
                    "ruleId": "meraki:intrusion/snort/GID/1/SID/26267"
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            }
          }
        },
        "summary": "List the security events for a client",
        "tags": [
          "appliance",
          "monitor",
          "clients",
          "security",
          "events"
        ]
      }
    },
    "/networks/{networkId}/appliance/connectivityMonitoringDestinations": {
      "get": {
        "description": "Return the connectivity testing destinations for an MX network",
        "operationId": "getNetworkApplianceConnectivityMonitoringDestinations",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "destinations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ip": {
                            "type": "string",
                            "description": "The IP address to test connectivity with"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the testing destination. Optional, defaults to an empty string"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                          }
                        }
                      },
                      "description": "The list of connectivity monitoring destinations"
                    }
                  }
                },
                "example": {
                  "destinations": [
                    {
                      "ip": "1.2.3.4",
                      "description": "Google",
                      "default": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the connectivity testing destinations for an MX network",
        "tags": [
          "appliance",
          "configure",
          "connectivityMonitoringDestinations"
        ]
      },
      "put": {
        "description": "Update the connectivity testing destinations for an MX network",
        "operationId": "updateNetworkApplianceConnectivityMonitoringDestinations",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "The IP address to test connectivity with"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the testing destination. Optional, defaults to null"
                        },
                        "default": {
                          "type": "boolean",
                          "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                        }
                      },
                      "required": [
                        "ip"
                      ]
                    },
                    "description": "The list of connectivity monitoring destinations"
                  }
                },
                "example": {
                  "destinations": [
                    {
                      "ip": "1.2.3.4",
                      "description": "Google",
                      "default": false
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "destinations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ip": {
                            "type": "string",
                            "description": "The IP address to test connectivity with"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the testing destination. Optional, defaults to an empty string"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                          }
                        }
                      },
                      "description": "The list of connectivity monitoring destinations"
                    }
                  }
                },
                "example": {
                  "destinations": [
                    {
                      "ip": "1.2.3.4",
                      "description": "Google",
                      "default": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the connectivity testing destinations for an MX network",
        "tags": [
          "appliance",
          "configure",
          "connectivityMonitoringDestinations"
        ]
      }
    },
    "/networks/{networkId}/appliance/contentFiltering": {
      "get": {
        "description": "Return the content filtering settings for an MX network",
        "operationId": "getNetworkApplianceContentFiltering",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allowedUrlPatterns": [
                    "http://www.example.org",
                    "http://help.com.au"
                  ],
                  "blockedUrlPatterns": [
                    "http://www.example.com",
                    "http://www.betting.com"
                  ],
                  "blockedUrlCategories": [
                    {
                      "id": "meraki:contentFiltering/category/1",
                      "name": "Real Estate"
                    },
                    {
                      "id": "meraki:contentFiltering/category/7",
                      "name": "Shopping"
                    }
                  ],
                  "urlCategoryListSize": "topSites"
                }
              }
            }
          }
        },
        "summary": "Return the content filtering settings for an MX network",
        "tags": [
          "appliance",
          "configure",
          "contentFiltering"
        ]
      },
      "put": {
        "description": "Update the content filtering settings for an MX network",
        "operationId": "updateNetworkApplianceContentFiltering",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedUrlPatterns": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of URL patterns that are allowed"
                  },
                  "blockedUrlPatterns": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of URL patterns that are blocked"
                  },
                  "blockedUrlCategories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of URL categories to block"
                  },
                  "urlCategoryListSize": {
                    "type": "string",
                    "enum": [
                      "fullList",
                      "topSites"
                    ],
                    "description": "URL category list size which is either 'topSites' or 'fullList'"
                  }
                },
                "example": {
                  "allowedUrlPatterns": [
                    "http://www.example.org",
                    "http://help.com.au"
                  ],
                  "blockedUrlPatterns": [
                    "http://www.example.com",
                    "http://www.betting.com"
                  ],
                  "blockedUrlCategories": [
                    "meraki:contentFiltering/category/1",
                    "meraki:contentFiltering/category/7"
                  ],
                  "urlCategoryListSize": "topSites"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allowedUrlPatterns": [
                    "http://www.example.org",
                    "http://help.com.au"
                  ],
                  "blockedUrlPatterns": [
                    "http://www.example.com",
                    "http://www.betting.com"
                  ],
                  "blockedUrlCategories": [
                    {
                      "id": "meraki:contentFiltering/category/1",
                      "name": "Real Estate"
                    },
                    {
                      "id": "meraki:contentFiltering/category/7",
                      "name": "Shopping"
                    }
                  ],
                  "urlCategoryListSize": "topSites"
                }
              }
            }
          }
        },
        "summary": "Update the content filtering settings for an MX network",
        "tags": [
          "appliance",
          "configure",
          "contentFiltering"
        ]
      }
    },
    "/networks/{networkId}/appliance/contentFiltering/categories": {
      "get": {
        "description": "List all available content filtering categories for an MX network",
        "operationId": "getNetworkApplianceContentFilteringCategories",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "categories": [
                    {
                      "id": "meraki:contentFiltering/category/1",
                      "name": "Real Estate"
                    },
                    {
                      "id": "meraki:contentFiltering/category/3",
                      "name": "Financial Services"
                    },
                    "...",
                    {
                      "id": "meraki:contentFiltering/category/11",
                      "name": "Adult and Pornography"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List all available content filtering categories for an MX network",
        "tags": [
          "appliance",
          "configure",
          "contentFiltering",
          "categories"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/cellularFirewallRules": {
      "get": {
        "description": "Return the cellular firewall rules for an MX network",
        "operationId": "getNetworkApplianceFirewallCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the cellular firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "cellularFirewallRules"
        ]
      },
      "put": {
        "description": "Update the cellular firewall rules of an MX network",
        "operationId": "updateNetworkApplianceFirewallCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "Description of the rule (optional)"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "icmp6",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "srcCidr": {
                          "type": "string",
                          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                        },
                        "destPort": {
                          "type": "string",
                          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "destCidr": {
                          "type": "string",
                          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                        },
                        "syslogEnabled": {
                          "type": "boolean",
                          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol",
                        "srcCidr",
                        "destCidr"
                      ]
                    },
                    "description": "An ordered array of the firewall rules (not including the default rule)"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the cellular firewall rules of an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "cellularFirewallRules"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/firewalledServices": {
      "get": {
        "description": "List the appliance services and their accessibility rules",
        "operationId": "getNetworkApplianceFirewallFirewalledServices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Appliance service name"
                      },
                      "access": {
                        "type": "string",
                        "description": "A string indicating the rule for which IPs are allowed to use the specified service"
                      },
                      "allowedIps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of allowed IPs that can access the service"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "service": "web",
                    "access": "restricted",
                    "allowedIps": [
                      "123.123.123.1"
                    ]
                  }
                ]
              }
            }
          }
        },
        "summary": "List the appliance services and their accessibility rules",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "firewalledServices"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/firewalledServices/{service}": {
      "get": {
        "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "operationId": "getNetworkApplianceFirewallFirewalledService",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "description": "Service",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "description": "Appliance service name"
                    },
                    "access": {
                      "type": "string",
                      "description": "A string indicating the rule for which IPs are allowed to use the specified service"
                    },
                    "allowedIps": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array of allowed IPs that can access the service"
                    }
                  }
                },
                "example": {
                  "service": "web",
                  "access": "restricted",
                  "allowedIps": [
                    "123.123.123.1"
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "firewalledServices"
        ]
      },
      "put": {
        "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "operationId": "updateNetworkApplianceFirewallFirewalledService",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "description": "Service",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access": {
                    "type": "string",
                    "enum": [
                      "blocked",
                      "restricted",
                      "unrestricted"
                    ],
                    "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required"
                  },
                  "allowedIps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of allowed IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored"
                  }
                },
                "example": {
                  "access": "restricted",
                  "allowedIps": [
                    "123.123.123.1"
                  ]
                },
                "required": [
                  "access"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "description": "Appliance service name"
                    },
                    "access": {
                      "type": "string",
                      "description": "A string indicating the rule for which IPs are allowed to use the specified service"
                    },
                    "allowedIps": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array of allowed IPs that can access the service"
                    }
                  }
                },
                "example": {
                  "service": "web",
                  "access": "restricted",
                  "allowedIps": [
                    "123.123.123.1"
                  ]
                }
              }
            }
          }
        },
        "summary": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "firewalledServices"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/inboundCellularFirewallRules": {
      "get": {
        "description": "Return the inbound cellular firewall rules for an MX network",
        "operationId": "getNetworkApplianceFirewallInboundCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          },
                          "syslogEnabled": {
                            "type": "boolean",
                            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                          }
                        }
                      },
                      "description": "An ordered array of the firewall rules (not including the default rule)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the inbound cellular firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "inboundCellularFirewallRules"
        ]
      },
      "put": {
        "description": "Update the inbound cellular firewall rules of an MX network",
        "operationId": "updateNetworkApplianceFirewallInboundCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "Description of the rule (optional)"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "icmp6",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "srcCidr": {
                          "type": "string",
                          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                        },
                        "destPort": {
                          "type": "string",
                          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "destCidr": {
                          "type": "string",
                          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                        },
                        "syslogEnabled": {
                          "type": "boolean",
                          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol",
                        "srcCidr",
                        "destCidr"
                      ]
                    },
                    "description": "An ordered array of the firewall rules (not including the default rule)"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          },
                          "syslogEnabled": {
                            "type": "boolean",
                            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                          }
                        }
                      },
                      "description": "An ordered array of the firewall rules (not including the default rule)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the inbound cellular firewall rules of an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "inboundCellularFirewallRules"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/inboundFirewallRules": {
      "get": {
        "description": "Return the inbound firewall rules for an MX network",
        "operationId": "getNetworkApplianceFirewallInboundFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          },
                          "syslogEnabled": {
                            "type": "boolean",
                            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                          }
                        }
                      },
                      "description": "An ordered array of the firewall rules (not including the default rule)"
                    },
                    "syslogDefaultRule": {
                      "type": "boolean",
                      "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ],
                  "syslogDefaultRule": false
                }
              }
            }
          }
        },
        "summary": "Return the inbound firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "inboundFirewallRules"
        ]
      },
      "put": {
        "description": "Update the inbound firewall rules of an MX network",
        "operationId": "updateNetworkApplianceFirewallInboundFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "Description of the rule (optional)"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "icmp6",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "srcCidr": {
                          "type": "string",
                          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                        },
                        "destPort": {
                          "type": "string",
                          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "destCidr": {
                          "type": "string",
                          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                        },
                        "syslogEnabled": {
                          "type": "boolean",
                          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol",
                        "srcCidr",
                        "destCidr"
                      ]
                    },
                    "description": "An ordered array of the firewall rules (not including the default rule)"
                  },
                  "syslogDefaultRule": {
                    "type": "boolean",
                    "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ],
                  "syslogDefaultRule": true
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          },
                          "syslogEnabled": {
                            "type": "boolean",
                            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                          }
                        }
                      },
                      "description": "An ordered array of the firewall rules (not including the default rule)"
                    },
                    "syslogDefaultRule": {
                      "type": "boolean",
                      "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "syslogEnabled": false
                    }
                  ],
                  "syslogDefaultRule": false
                }
              }
            }
          }
        },
        "summary": "Update the inbound firewall rules of an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "inboundFirewallRules"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/l3FirewallRules": {
      "get": {
        "description": "Return the L3 firewall rules for an MX network",
        "operationId": "getNetworkApplianceFirewallL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the L3 firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "l3FirewallRules"
        ]
      },
      "put": {
        "description": "Update the L3 firewall rules of an MX network",
        "operationId": "updateNetworkApplianceFirewallL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "Description of the rule (optional)"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "icmp6",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "srcCidr": {
                          "type": "string",
                          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                        },
                        "destPort": {
                          "type": "string",
                          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "destCidr": {
                          "type": "string",
                          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                        },
                        "syslogEnabled": {
                          "type": "boolean",
                          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol",
                        "srcCidr",
                        "destCidr"
                      ]
                    },
                    "description": "An ordered array of the firewall rules (not including the default rule)"
                  },
                  "syslogDefaultRule": {
                    "type": "boolean",
                    "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24",
                      "srcPort": "Any",
                      "srcCidr": "Any",
                      "syslogEnabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the L3 firewall rules of an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "l3FirewallRules"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/l7FirewallRules": {
      "get": {
        "description": "List the MX L7 firewall rules for an MX network",
        "operationId": "getNetworkApplianceFirewallL7FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "policy": "deny",
                      "type": "host",
                      "value": "google.com"
                    },
                    {
                      "policy": "deny",
                      "type": "port",
                      "value": "23"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24:5555"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List the MX L7 firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "l7FirewallRules"
        ]
      },
      "put": {
        "description": "Update the MX L7 firewall rules for an MX network",
        "operationId": "updateNetworkApplianceFirewallL7FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy": {
                          "type": "string",
                          "enum": [
                            "deny"
                          ],
                          "description": "'Deny' traffic specified by this rule"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "application",
                            "applicationCategory",
                            "host",
                            "ipRange",
                            "port"
                          ],
                          "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                        },
                        "value": {
                          "type": "string",
                          "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format."
                        }
                      }
                    },
                    "description": "An ordered array of the MX L7 firewall rules"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "policy": "deny",
                      "type": "host",
                      "value": "google.com"
                    },
                    {
                      "policy": "deny",
                      "type": "port",
                      "value": "23"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24:5555"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rules": [
                    {
                      "policy": "deny",
                      "type": "host",
                      "value": "google.com"
                    },
                    {
                      "policy": "deny",
                      "type": "port",
                      "value": "23"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24"
                    },
                    {
                      "policy": "deny",
                      "type": "ipRange",
                      "value": "10.11.12.00/24:5555"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the MX L7 firewall rules for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "l7FirewallRules"
        ]
      }
    },
    "/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories": {
      "get": {
        "description": "Return the L7 firewall application categories and their associated applications for an MX network",
        "operationId": "getNetworkApplianceFirewallL7FirewallRulesApplicationCategories",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applicationCategories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the category"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the category"
                          },
                          "applications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the application"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the application"
                                }
                              }
                            },
                            "description": "Details of the associated applications"
                          }
                        }
                      },
                      "description": " The L7 firewall application categories and their associated applications for an MX network"
                    }
                  }
                },
                "example": {
                  "applicationCategories": [
                    {
                      "id": "meraki:layer7/category/24",
                      "name": "Advertising",
                      "applications": [
                        {
                          "id": "meraki:layer7/application/5",
                          "name": "Advertising.com"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Return the L7 firewall application categories and their associated applications for an MX network",
        "tags": [
          "appliance",
          "configure",
          "firewall",
          "l7FirewallRules",
          "applicationCategories"
        ]
      }
    },
    "/organizations": {
      "get": {
        "description": "List the organizations that the user has privileges on",
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 9000. Default is 9000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Organization ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "Organization name"
                      },
                      "url": {
                        "type": "string",
                        "description": "Organization URL"
                      },
                      "api": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable API access"
                          }
                        },
                        "description": "API related settings"
                      },
                      "licensing": {
                        "type": "object",
                        "properties": {
                          "model": {
                            "type": "string",
                            "enum": [
                              "co-term",
                              "per-device",
                              "subscription"
                            ],
                            "description": "Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'."
                          }
                        },
                        "description": "Licensing related settings"
                      },
                      "cloud": {
                        "type": "object",
                        "properties": {
                          "region": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of region"
                              },
                              "host": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of location"
                                  }
                                },
                                "description": "Where organization data is hosted"
                              }
                            },
                            "description": "Region info"
                          }
                        },
                        "description": "Data for this organization"
                      },
                      "management": {
                        "type": "object",
                        "properties": {
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of management data"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value of management data"
                                }
                              }
                            },
                            "description": "Details related to organization management, possibly empty. Details may be named 'MSP ID', 'customer number', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any."
                          }
                        },
                        "description": "Information about the organization's management system"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "2930418",
                    "name": "My organization",
                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
                    "api": {
                      "enabled": true
                    },
                    "licensing": {
                      "model": "co-term"
                    },
                    "cloud": {
                      "region": {
                        "name": "North America",
                        "host": {
                          "name": "United States"
                        }
                      }
                    },
                    "management": {
                      "details": [
                        {
                          "name": "MSP ID",
                          "value": "123456"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            }
          }
        },
        "summary": "List the organizations that the user has privileges on",
        "tags": [
          "organizations",
          "configure"
        ]
      },
      "post": {
        "description": "Create a new organization",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the organization"
                  },
                  "management": {
                    "type": "object",
                    "properties": {
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of management data"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of management data"
                            }
                          }
                        },
                        "description": "Details related to organization management, possibly empty"
                      }
                    },
                    "description": "Information about the organization's management system"
                  }
                },
                "example": {
                  "name": "My organization",
                  "management": {
                    "details": [
                      {
                        "name": "MSP ID",
                        "value": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization name"
                    },
                    "url": {
                      "type": "string",
                      "description": "Organization URL"
                    },
                    "api": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Enable API access"
                        }
                      },
                      "description": "API related settings"
                    },
                    "licensing": {
                      "type": "object",
                      "properties": {
                        "model": {
                          "type": "string",
                          "enum": [
                            "co-term",
                            "per-device",
                            "subscription"
                          ],
                          "description": "Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'."
                        }
                      },
                      "description": "Licensing related settings"
                    },
                    "cloud": {
                      "type": "object",
                      "properties": {
                        "region": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of region"
                            },
                            "host": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of location"
                                }
                              },
                              "description": "Where organization data is hosted"
                            }
                          },
                          "description": "Region info"
                        }
                      },
                      "description": "Data for this organization"
                    },
                    "management": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of management data"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of management data"
                              }
                            }
                          },
                          "description": "Details related to organization management, possibly empty. Details may be named 'MSP ID', 'customer number', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any."
                        }
                      },
                      "description": "Information about the organization's management system"
                    }
                  }
                },
                "example": {
                  "id": "2930418",
                  "name": "My organization",
                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
                  "api": {
                    "enabled": true
                  },
                  "licensing": {
                    "model": "co-term"
                  },
                  "cloud": {
                    "region": {
                      "name": "North America",
                      "host": {
                        "name": "United States"
                      }
                    }
                  },
                  "management": {
                    "details": [
                      {
                        "name": "MSP ID",
                        "value": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Create a new organization",
        "tags": [
          "organizations",
          "configure"
        ]
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "description": "Return an organization",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization name"
                    },
                    "url": {
                      "type": "string",
                      "description": "Organization URL"
                    },
                    "api": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Enable API access"
                        }
                      },
                      "description": "API related settings"
                    },
                    "licensing": {
                      "type": "object",
                      "properties": {
                        "model": {
                          "type": "string",
                          "enum": [
                            "co-term",
                            "per-device",
                            "subscription"
                          ],
                          "description": "Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'."
                        }
                      },
                      "description": "Licensing related settings"
                    },
                    "cloud": {
                      "type": "object",
                      "properties": {
                        "region": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of region"
                            },
                            "host": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of location"
                                }
                              },
                              "description": "Where organization data is hosted"
                            }
                          },
                          "description": "Region info"
                        }
                      },
                      "description": "Data for this organization"
                    },
                    "management": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of management data"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of management data"
                              }
                            }
                          },
                          "description": "Details related to organization management, possibly empty. Details may be named 'MSP ID', 'customer number', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any."
                        }
                      },
                      "description": "Information about the organization's management system"
                    }
                  }
                },
                "example": {
                  "id": "2930418",
                  "name": "My organization",
                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
                  "api": {
                    "enabled": true
                  },
                  "licensing": {
                    "model": "co-term"
                  },
                  "cloud": {
                    "region": {
                      "name": "North America",
                      "host": {
                        "name": "United States"
                      }
                    }
                  },
                  "management": {
                    "details": [
                      {
                        "name": "MSP ID",
                        "value": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return an organization",
        "tags": [
          "organizations",
          "configure"
        ]
      },
      "put": {
        "description": "Update an organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the organization"
                  },
                  "management": {
                    "type": "object",
                    "properties": {
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of management data"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of management data"
                            }
                          }
                        },
                        "description": "Details related to organization management, possibly empty"
                      }
                    },
                    "description": "Information about the organization's management system"
                  },
                  "api": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "If true, enable the access to the Cisco Meraki Dashboard API"
                      }
                    },
                    "description": "API-specific settings"
                  }
                },
                "example": {
                  "name": "My organization",
                  "management": {
                    "details": [
                      {
                        "name": "MSP ID",
                        "value": "123456"
                      }
                    ]
                  },
                  "api": {
                    "enabled": true
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization name"
                    },
                    "url": {
                      "type": "string",
                      "description": "Organization URL"
                    },
                    "api": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Enable API access"
                        }
                      },
                      "description": "API related settings"
                    },
                    "licensing": {
                      "type": "object",
                      "properties": {
                        "model": {
                          "type": "string",
                          "enum": [
                            "co-term",
                            "per-device",
                            "subscription"
                          ],
                          "description": "Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'."
                        }
                      },
                      "description": "Licensing related settings"
                    },
                    "cloud": {
                      "type": "object",
                      "properties": {
                        "region": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of region"
                            },
                            "host": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of location"
                                }
                              },
                              "description": "Where organization data is hosted"
                            }
                          },
                          "description": "Region info"
                        }
                      },
                      "description": "Data for this organization"
                    },
                    "management": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of management data"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of management data"
                              }
                            }
                          },
                          "description": "Details related to organization management, possibly empty. Details may be named 'MSP ID', 'customer number', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any."
                        }
                      },
                      "description": "Information about the organization's management system"
                    }
                  }
                },
                "example": {
                  "id": "2930418",
                  "name": "My organization",
                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
                  "api": {
                    "enabled": true
                  },
                  "licensing": {
                    "model": "co-term"
                  },
                  "cloud": {
                    "region": {
                      "name": "North America",
                      "host": {
                        "name": "United States"
                      }
                    }
                  },
                  "management": {
                    "details": [
                      {
                        "name": "MSP ID",
                        "value": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update an organization",
        "tags": [
          "organizations",
          "configure"
        ]
      },
      "delete": {
        "description": "Delete an organization",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Delete an organization",
        "tags": [
          "organizations",
          "configure"
        ]
      }
    },
    "/organizations/{organizationId}/actionBatches": {
      "post": {
        "callbacks": {
          "actionBatch": {
            "{$request.body#/callback/url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "description": "Callback payload",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "organization": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "network": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "sentAt": {
                            "type": "string"
                          },
                          "callbackId": {
                            "type": "string"
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}"
                              },
                              "organizationId": {
                                "type": "string",
                                "description": "ID of the organization this action batch belongs to"
                              },
                              "confirmed": {
                                "type": "boolean",
                                "description": "Flag describing whether the action should be previewed before executing or not"
                              },
                              "synchronous": {
                                "type": "boolean",
                                "description": "Flag describing whether actions should run synchronously or asynchronously"
                              },
                              "status": {
                                "type": "object",
                                "properties": {
                                  "completed": {
                                    "type": "boolean",
                                    "description": "Flag describing whether all actions in the action batch have completed"
                                  },
                                  "failed": {
                                    "type": "boolean",
                                    "description": "Flag describing whether any actions in the action batch failed"
                                  },
                                  "errors": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of errors encountered when running actions in the action batch"
                                  },
                                  "createdResources": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID of the created resource"
                                        },
                                        "uri": {
                                          "type": "string",
                                          "description": "URI, not including base, of the created resource"
                                        }
                                      }
                                    },
                                    "description": "Resources created as a result of this action batch"
                                  }
                                },
                                "required": [
                                  "createdResources"
                                ],
                                "description": "Status of action batch"
                              },
                              "actions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "resource": {
                                      "type": "string",
                                      "description": "Unique identifier for the resource to be acted on"
                                    },
                                    "operation": {
                                      "type": "string",
                                      "description": "The operation to be used by this action"
                                    },
                                    "body": {
                                      "type": "object",
                                      "additionalProperties": true,
                                      "description": "Data provided in the body of the Action. Contents depend on the Action type"
                                    }
                                  },
                                  "required": [
                                    "resource",
                                    "operation"
                                  ]
                                },
                                "description": "A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                              }
                            },
                            "required": [
                              "actions"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "2XX": {
                    "description": "Your server return this code if it accepts the callback"
                  }
                }
              }
            }
          }
        },
        "description": "Create an action batch",
        "operationId": "createOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmed": {
                    "type": "boolean",
                    "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false."
                  },
                  "synchronous": {
                    "type": "boolean",
                    "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "type": "string",
                          "description": "Unique identifier for the resource to be acted on"
                        },
                        "operation": {
                          "type": "string",
                          "description": "The operation to be used"
                        },
                        "body": {
                          "type": "object",
                          "description": "The body of the action",
                          "default": {

                          }
                        }
                      },
                      "required": [
                        "resource",
                        "operation"
                      ]
                    },
                    "description": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                  },
                  "callback": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The callback URL for the webhook target. If using this field, please also specify a sharedSecret."
                      },
                      "sharedSecret": {
                        "type": "string",
                        "description": "A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url."
                      },
                      "httpServer": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank."
                          }
                        },
                        "description": "The webhook receiver used for the callback webhook."
                      },
                      "payloadTemplate": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template."
                          }
                        },
                        "description": "The payload template of the webhook used for the callback"
                      }
                    },
                    "x-release-stage": "general_availability",
                    "description": "Details for the callback. Please include either an httpServerId OR url and sharedSecret"
                  }
                },
                "example": {
                  "confirmed": true,
                  "synchronous": true,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switch/ports/3",
                      "operation": "create"
                    }
                  ],
                  "callback": {
                    "url": "https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031",
                    "sharedSecret": "secret",
                    "httpServer": {
                      "id": "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M="
                    },
                    "payloadTemplate": {
                      "id": "wpt_2100"
                    }
                  }
                },
                "required": [
                  "actions"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "ID of the organization this action batch belongs to"
                    },
                    "confirmed": {
                      "type": "boolean",
                      "description": "Flag describing whether the action should be previewed before executing or not"
                    },
                    "synchronous": {
                      "type": "boolean",
                      "description": "Flag describing whether actions should run synchronously or asynchronously"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "completed": {
                          "type": "boolean",
                          "description": "Flag describing whether all actions in the action batch have completed"
                        },
                        "failed": {
                          "type": "boolean",
                          "description": "Flag describing whether any actions in the action batch failed"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of errors encountered when running actions in the action batch"
                        },
                        "createdResources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the created resource"
                              },
                              "uri": {
                                "type": "string",
                                "description": "URI, not including base, of the created resource"
                              }
                            }
                          },
                          "description": "Resources created as a result of this action batch"
                        }
                      },
                      "required": [
                        "createdResources"
                      ],
                      "description": "Status of action batch"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "string",
                            "description": "Unique identifier for the resource to be acted on"
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation to be used by this action"
                          },
                          "body": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Data provided in the body of the Action. Contents depend on the Action type"
                          }
                        },
                        "required": [
                          "resource",
                          "operation"
                        ]
                      },
                      "description": "A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                    },
                    "callback": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}"
                        },
                        "url": {
                          "type": "string",
                          "description": "The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the callback"
                        }
                      },
                      "description": "Information for callback used to send back results",
                      "x-release-stage": "general_availability"
                    }
                  },
                  "required": [
                    "actions"
                  ]
                },
                "example": {
                  "id": "1234",
                  "organizationId": "2930418",
                  "confirmed": true,
                  "synchronous": false,
                  "status": {
                    "completed": true,
                    "failed": false,
                    "errors": [

                    ],
                    "createdResources": [
                      {
                        "id": "1284392014819",
                        "uri": "/networks/L_XXXXX/groupPolicies/100"
                      }
                    ]
                  },
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switch/ports/3",
                      "operation": "update"
                    }
                  ],
                  "callback": {
                    "id": "1284392014819",
                    "url": "https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031",
                    "status": "new"
                  }
                }
              }
            }
          }
        },
        "summary": "Create an action batch",
        "tags": [
          "organizations",
          "configure",
          "actionBatches"
        ]
      },
      "get": {
        "description": "Return the list of action batches in the organization",
        "operationId": "getOrganizationActionBatches",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter batches by status. Valid types are pending, completed, and failed.",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "failed",
                "pending"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}"
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "ID of the organization this action batch belongs to"
                      },
                      "confirmed": {
                        "type": "boolean",
                        "description": "Flag describing whether the action should be previewed before executing or not"
                      },
                      "synchronous": {
                        "type": "boolean",
                        "description": "Flag describing whether actions should run synchronously or asynchronously"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "completed": {
                            "type": "boolean",
                            "description": "Flag describing whether all actions in the action batch have completed"
                          },
                          "failed": {
                            "type": "boolean",
                            "description": "Flag describing whether any actions in the action batch failed"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of errors encountered when running actions in the action batch"
                          },
                          "createdResources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the created resource"
                                },
                                "uri": {
                                  "type": "string",
                                  "description": "URI, not including base, of the created resource"
                                }
                              }
                            },
                            "description": "Resources created as a result of this action batch"
                          }
                        },
                        "required": [
                          "createdResources"
                        ],
                        "description": "Status of action batch"
                      },
                      "actions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "resource": {
                              "type": "string",
                              "description": "Unique identifier for the resource to be acted on"
                            },
                            "operation": {
                              "type": "string",
                              "description": "The operation to be used by this action"
                            },
                            "body": {
                              "type": "object",
                              "additionalProperties": true,
                              "description": "Data provided in the body of the Action. Contents depend on the Action type"
                            }
                          },
                          "required": [
                            "resource",
                            "operation"
                          ]
                        },
                        "description": "A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                      }
                    },
                    "required": [
                      "actions"
                    ]
                  }
                },
                "example": [
                  {
                    "id": "1234",
                    "organizationId": "2930418",
                    "confirmed": true,
                    "synchronous": false,
                    "status": {
                      "completed": true,
                      "failed": false,
                      "errors": [

                      ],
                      "createdResources": [
                        {
                          "id": "1284392014819",
                          "uri": "/networks/L_XXXXX/groupPolicies/100"
                        }
                      ]
                    },
                    "actions": [
                      {
                        "resource": "/devices/QXXX-XXXX-XXXX/switch/ports/3",
                        "operation": "update"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "summary": "Return the list of action batches in the organization",
        "tags": [
          "organizations",
          "configure",
          "actionBatches"
        ]
      }
    },
    "/organizations/{organizationId}/actionBatches/{actionBatchId}": {
      "get": {
        "description": "Return an action batch",
        "operationId": "getOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "actionBatchId",
            "in": "path",
            "description": "Action batch ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "ID of the organization this action batch belongs to"
                    },
                    "confirmed": {
                      "type": "boolean",
                      "description": "Flag describing whether the action should be previewed before executing or not"
                    },
                    "synchronous": {
                      "type": "boolean",
                      "description": "Flag describing whether actions should run synchronously or asynchronously"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "completed": {
                          "type": "boolean",
                          "description": "Flag describing whether all actions in the action batch have completed"
                        },
                        "failed": {
                          "type": "boolean",
                          "description": "Flag describing whether any actions in the action batch failed"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of errors encountered when running actions in the action batch"
                        },
                        "createdResources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the created resource"
                              },
                              "uri": {
                                "type": "string",
                                "description": "URI, not including base, of the created resource"
                              }
                            }
                          },
                          "description": "Resources created as a result of this action batch"
                        }
                      },
                      "required": [
                        "createdResources"
                      ],
                      "description": "Status of action batch"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "string",
                            "description": "Unique identifier for the resource to be acted on"
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation to be used by this action"
                          },
                          "body": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Data provided in the body of the Action. Contents depend on the Action type"
                          }
                        },
                        "required": [
                          "resource",
                          "operation"
                        ]
                      },
                      "description": "A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                    },
                    "callback": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}"
                        },
                        "url": {
                          "type": "string",
                          "description": "The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the callback"
                        }
                      },
                      "description": "Information for callback used to send back results",
                      "x-release-stage": "general_availability"
                    }
                  },
                  "required": [
                    "actions"
                  ]
                },
                "example": {
                  "id": "1234",
                  "organizationId": "2930418",
                  "confirmed": true,
                  "synchronous": false,
                  "status": {
                    "completed": true,
                    "failed": false,
                    "errors": [

                    ],
                    "createdResources": [
                      {
                        "id": "1284392014819",
                        "uri": "/networks/L_XXXXX/groupPolicies/100"
                      }
                    ]
                  },
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switch/ports/3",
                      "operation": "update"
                    }
                  ],
                  "callback": {
                    "id": "1284392014819",
                    "url": "https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031",
                    "status": "new"
                  }
                }
              }
            }
          }
        },
        "summary": "Return an action batch",
        "tags": [
          "organizations",
          "configure",
          "actionBatches"
        ]
      },
      "delete": {
        "description": "Delete an action batch",
        "operationId": "deleteOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "actionBatchId",
            "in": "path",
            "description": "Action batch ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Delete an action batch",
        "tags": [
          "organizations",
          "configure",
          "actionBatches"
        ]
      },
      "put": {
        "description": "Update an action batch",
        "operationId": "updateOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "actionBatchId",
            "in": "path",
            "description": "Action batch ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmed": {
                    "type": "boolean",
                    "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true."
                  },
                  "synchronous": {
                    "type": "boolean",
                    "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch."
                  }
                },
                "example": {
                  "confirmed": true,
                  "synchronous": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "ID of the organization this action batch belongs to"
                    },
                    "confirmed": {
                      "type": "boolean",
                      "description": "Flag describing whether the action should be previewed before executing or not"
                    },
                    "synchronous": {
                      "type": "boolean",
                      "description": "Flag describing whether actions should run synchronously or asynchronously"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "completed": {
                          "type": "boolean",
                          "description": "Flag describing whether all actions in the action batch have completed"
                        },
                        "failed": {
                          "type": "boolean",
                          "description": "Flag describing whether any actions in the action batch failed"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of errors encountered when running actions in the action batch"
                        },
                        "createdResources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the created resource"
                              },
                              "uri": {
                                "type": "string",
                                "description": "URI, not including base, of the created resource"
                              }
                            }
                          },
                          "description": "Resources created as a result of this action batch"
                        }
                      },
                      "required": [
                        "createdResources"
                      ],
                      "description": "Status of action batch"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "string",
                            "description": "Unique identifier for the resource to be acted on"
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation to be used by this action"
                          },
                          "body": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Data provided in the body of the Action. Contents depend on the Action type"
                          }
                        },
                        "required": [
                          "resource",
                          "operation"
                        ]
                      },
                      "description": "A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                    }
                  },
                  "required": [
                    "actions"
                  ]
                },
                "example": {
                  "id": "1234",
                  "organizationId": "2930418",
                  "confirmed": true,
                  "synchronous": false,
                  "status": {
                    "completed": true,
                    "failed": false,
                    "errors": [

                    ],
                    "createdResources": [
                      {
                        "id": "1284392014819",
                        "uri": "/networks/L_XXXXX/groupPolicies/100"
                      }
                    ]
                  },
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switch/ports/3",
                      "operation": "update"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update an action batch",
        "tags": [
          "organizations",
          "configure",
          "actionBatches"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/acls": {
      "get": {
        "description": "List adaptive policy ACLs in a organization",
        "operationId": "getOrganizationAdaptivePolicyAcls",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "aclId": {
                        "type": "string",
                        "description": "ID of the adaptive policy ACL"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the adaptive policy ACL"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the adaptive policy ACL"
                      },
                      "ipVersion": {
                        "type": "string",
                        "description": "IP version of adpative policy ACL"
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "string",
                              "description": "'allow' or 'deny' traffic specified by this rule"
                            },
                            "protocol": {
                              "type": "string",
                              "description": "The type of protocol"
                            },
                            "srcPort": {
                              "type": "string",
                              "description": "Source port"
                            },
                            "dstPort": {
                              "type": "string",
                              "description": "Destination port"
                            },
                            "log": {
                              "type": "boolean",
                              "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                            },
                            "tcpEstablished": {
                              "type": "boolean",
                              "description": "If enabled, means TCP connection with this node must be established.\n"
                            }
                          }
                        },
                        "description": "An ordered array of the adaptive policy ACL rules"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the adaptive policy ACL was created"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the adaptive policy ACL was last updated"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "aclId": "12345678",
                    "name": "Block sensitive web traffic",
                    "description": "Blocks sensitive web traffic",
                    "ipVersion": "ipv6",
                    "rules": [
                      {
                        "policy": "deny",
                        "protocol": "tcp",
                        "srcPort": "1,33",
                        "dstPort": "22-30",
                        "log": true,
                        "tcpEstablished": true
                      }
                    ],
                    "createdAt": "2021-05-19T17:08:25Z",
                    "updatedAt": "2021-05-19T17:11:54Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "List adaptive policy ACLs in a organization",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "acls"
        ]
      },
      "post": {
        "description": "Creates new adaptive policy ACL",
        "operationId": "createOrganizationAdaptivePolicyAcl",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the adaptive policy ACL"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the adaptive policy ACL",
                    "default": ""
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule."
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')."
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        },
                        "dstPort": {
                          "type": "string",
                          "description": "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        },
                        "log": {
                          "type": "boolean",
                          "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                        },
                        "tcpEstablished": {
                          "type": "boolean",
                          "description": "If enabled, means TCP connection with this node must be established.\n"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol"
                      ]
                    },
                    "description": "An ordered array of the adaptive policy ACL rules."
                  },
                  "ipVersion": {
                    "type": "string",
                    "enum": [
                      "any",
                      "ipv4",
                      "ipv6"
                    ],
                    "description": "IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'"
                  }
                },
                "example": {
                  "name": "Block sensitive web traffic",
                  "description": "Blocks sensitive web traffic",
                  "rules": [
                    {
                      "policy": "deny",
                      "protocol": "tcp",
                      "srcPort": "1,33",
                      "dstPort": "22-30",
                      "log": true,
                      "tcpEstablished": true
                    }
                  ],
                  "ipVersion": "ipv6"
                },
                "required": [
                  "name",
                  "rules",
                  "ipVersion"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aclId": {
                      "type": "string",
                      "description": "ID of the adaptive policy ACL"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the adaptive policy ACL"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the adaptive policy ACL"
                    },
                    "ipVersion": {
                      "type": "string",
                      "description": "IP version of adpative policy ACL"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Source port"
                          },
                          "dstPort": {
                            "type": "string",
                            "description": "Destination port"
                          },
                          "log": {
                            "type": "boolean",
                            "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                          },
                          "tcpEstablished": {
                            "type": "boolean",
                            "description": "If enabled, means TCP connection with this node must be established.\n"
                          }
                        }
                      },
                      "description": "An ordered array of the adaptive policy ACL rules"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was last updated"
                    }
                  }
                },
                "example": {
                  "aclId": "12345678",
                  "name": "Block sensitive web traffic",
                  "description": "Blocks sensitive web traffic",
                  "ipVersion": "ipv6",
                  "rules": [
                    {
                      "policy": "deny",
                      "protocol": "tcp",
                      "srcPort": "1,33",
                      "dstPort": "22-30",
                      "log": true,
                      "tcpEstablished": true
                    }
                  ],
                  "createdAt": "2021-05-19T17:08:25Z",
                  "updatedAt": "2021-05-19T17:11:54Z"
                }
              }
            }
          }
        },
        "summary": "Creates new adaptive policy ACL",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "acls"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}": {
      "get": {
        "description": "Returns the adaptive policy ACL information",
        "operationId": "getOrganizationAdaptivePolicyAcl",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "aclId",
            "in": "path",
            "description": "Acl ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aclId": {
                      "type": "string",
                      "description": "ID of the adaptive policy ACL"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the adaptive policy ACL"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the adaptive policy ACL"
                    },
                    "ipVersion": {
                      "type": "string",
                      "description": "IP version of adpative policy ACL"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Source port"
                          },
                          "dstPort": {
                            "type": "string",
                            "description": "Destination port"
                          },
                          "log": {
                            "type": "boolean",
                            "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                          },
                          "tcpEstablished": {
                            "type": "boolean",
                            "description": "If enabled, means TCP connection with this node must be established.\n"
                          }
                        }
                      },
                      "description": "An ordered array of the adaptive policy ACL rules"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was last updated"
                    }
                  }
                },
                "example": {
                  "aclId": "12345678",
                  "name": "Block sensitive web traffic",
                  "description": "Blocks sensitive web traffic",
                  "ipVersion": "ipv6",
                  "rules": [
                    {
                      "policy": "deny",
                      "protocol": "tcp",
                      "srcPort": "1,33",
                      "dstPort": "22-30",
                      "log": true,
                      "tcpEstablished": true
                    }
                  ],
                  "createdAt": "2021-05-19T17:08:25Z",
                  "updatedAt": "2021-05-19T17:11:54Z"
                }
              }
            }
          }
        },
        "summary": "Returns the adaptive policy ACL information",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "acls"
        ]
      },
      "put": {
        "description": "Updates an adaptive policy ACL",
        "operationId": "updateOrganizationAdaptivePolicyAcl",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "aclId",
            "in": "path",
            "description": "Acl ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the adaptive policy ACL"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the adaptive policy ACL"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule."
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')."
                        },
                        "srcPort": {
                          "type": "string",
                          "description": "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        },
                        "dstPort": {
                          "type": "string",
                          "description": "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        },
                        "log": {
                          "type": "boolean",
                          "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                        },
                        "tcpEstablished": {
                          "type": "boolean",
                          "description": "If enabled, means TCP connection with this node must be established.\n"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol"
                      ]
                    },
                    "description": "An ordered array of the adaptive policy ACL rules. An empty array will clear the rules."
                  },
                  "ipVersion": {
                    "type": "string",
                    "enum": [
                      "any",
                      "ipv4",
                      "ipv6"
                    ],
                    "description": "IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'"
                  }
                },
                "example": {
                  "name": "Block sensitive web traffic",
                  "description": "Blocks sensitive web traffic",
                  "rules": [
                    {
                      "policy": "deny",
                      "protocol": "tcp",
                      "srcPort": "1,33",
                      "dstPort": "22-30",
                      "log": true,
                      "tcpEstablished": true
                    }
                  ],
                  "ipVersion": "ipv6"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aclId": {
                      "type": "string",
                      "description": "ID of the adaptive policy ACL"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the adaptive policy ACL"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the adaptive policy ACL"
                    },
                    "ipVersion": {
                      "type": "string",
                      "description": "IP version of adpative policy ACL"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol"
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Source port"
                          },
                          "dstPort": {
                            "type": "string",
                            "description": "Destination port"
                          },
                          "log": {
                            "type": "boolean",
                            "description": "If enabled, when this rule is hit an entry will be logged to the event log\n"
                          },
                          "tcpEstablished": {
                            "type": "boolean",
                            "description": "If enabled, means TCP connection with this node must be established.\n"
                          }
                        }
                      },
                      "description": "An ordered array of the adaptive policy ACL rules"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the adaptive policy ACL was last updated"
                    }
                  }
                },
                "example": {
                  "aclId": "12345678",
                  "name": "Block sensitive web traffic",
                  "description": "Blocks sensitive web traffic",
                  "ipVersion": "ipv6",
                  "rules": [
                    {
                      "policy": "deny",
                      "protocol": "tcp",
                      "srcPort": "1,33",
                      "dstPort": "22-30",
                      "log": true,
                      "tcpEstablished": true
                    }
                  ],
                  "createdAt": "2021-05-19T17:08:25Z",
                  "updatedAt": "2021-05-19T17:11:54Z"
                }
              }
            }
          }
        },
        "summary": "Updates an adaptive policy ACL",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "acls"
        ]
      },
      "delete": {
        "description": "Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.",
        "operationId": "deleteOrganizationAdaptivePolicyAcl",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "aclId",
            "in": "path",
            "description": "Acl ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Deletes the specified adaptive policy ACL",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "acls"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/groups": {
      "get": {
        "description": "List adaptive policy groups in a organization",
        "operationId": "getOrganizationAdaptivePolicyGroups",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "groupId": {
                        "type": "string",
                        "description": "The ID of the adaptive policy group"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the adaptive policy group"
                      },
                      "sgt": {
                        "type": "integer",
                        "description": "The security group tag for the adaptive policy group"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description for the adaptive policy group"
                      },
                      "policyObjects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the policy object"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the policy object"
                            }
                          }
                        },
                        "description": "The policy objects for the adaptive policy group"
                      },
                      "isDefaultGroup": {
                        "type": "boolean",
                        "description": "Whether the adaptive policy group is the default group"
                      },
                      "requiredIpMappings": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of required IP mappings for the adaptive policy group"
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "Created at timestamp for the adaptive policy group"
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "Updated at timestamp for the adaptive policy group"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "groupId": "1234",
                    "name": "Employee Group",
                    "sgt": 1000,
                    "description": "Group of XYZ Corp Employees",
                    "policyObjects": [
                      {
                        "id": "2345",
                        "name": "Example Policy Object"
                      }
                    ],
                    "isDefaultGroup": false,
                    "requiredIpMappings": [

                    ],
                    "createdAt": "2019-06-27T21:34:25.253480Z",
                    "updatedAt": "2019-06-27T21:34:25.253480Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "List adaptive policy groups in a organization",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "groups"
        ]
      },
      "post": {
        "description": "Creates a new adaptive policy group",
        "operationId": "createOrganizationAdaptivePolicyGroup",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the group"
                  },
                  "sgt": {
                    "type": "integer",
                    "description": "SGT value of the group"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the group (default: \"\")"
                  },
                  "policyObjects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the policy object"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the policy object"
                        }
                      }
                    },
                    "description": "The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group's SGT value if no other tagging scheme is being used (each requires one unique attribute) (default: [])"
                  }
                },
                "example": {
                  "name": "Employee Group",
                  "sgt": 1000,
                  "description": "Group of XYZ Corp Employees",
                  "policyObjects": [
                    {
                      "id": "2345",
                      "name": "Example Policy Object"
                    }
                  ]
                },
                "required": [
                  "name",
                  "sgt"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The ID of the adaptive policy group"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the adaptive policy group"
                    },
                    "sgt": {
                      "type": "integer",
                      "description": "The security group tag for the adaptive policy group"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the adaptive policy group"
                    },
                    "policyObjects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the policy object"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the policy object"
                          }
                        }
                      },
                      "description": "The policy objects for the adaptive policy group"
                    },
                    "isDefaultGroup": {
                      "type": "boolean",
                      "description": "Whether the adaptive policy group is the default group"
                    },
                    "requiredIpMappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of required IP mappings for the adaptive policy group"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Created at timestamp for the adaptive policy group"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Updated at timestamp for the adaptive policy group"
                    }
                  }
                },
                "example": {
                  "groupId": "1234",
                  "name": "Employee Group",
                  "sgt": 1000,
                  "description": "Group of XYZ Corp Employees",
                  "policyObjects": [
                    {
                      "id": "2345",
                      "name": "Example Policy Object"
                    }
                  ],
                  "isDefaultGroup": false,
                  "requiredIpMappings": [

                  ],
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Creates a new adaptive policy group",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "groups"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/groups/{id}": {
      "get": {
        "description": "Returns an adaptive policy group",
        "operationId": "getOrganizationAdaptivePolicyGroup",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The ID of the adaptive policy group"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the adaptive policy group"
                    },
                    "sgt": {
                      "type": "integer",
                      "description": "The security group tag for the adaptive policy group"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the adaptive policy group"
                    },
                    "policyObjects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the policy object"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the policy object"
                          }
                        }
                      },
                      "description": "The policy objects for the adaptive policy group"
                    },
                    "isDefaultGroup": {
                      "type": "boolean",
                      "description": "Whether the adaptive policy group is the default group"
                    },
                    "requiredIpMappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of required IP mappings for the adaptive policy group"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Created at timestamp for the adaptive policy group"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Updated at timestamp for the adaptive policy group"
                    }
                  }
                },
                "example": {
                  "groupId": "1234",
                  "name": "Employee Group",
                  "sgt": 1000,
                  "description": "Group of XYZ Corp Employees",
                  "policyObjects": [
                    {
                      "id": "2345",
                      "name": "Example Policy Object"
                    }
                  ],
                  "isDefaultGroup": false,
                  "requiredIpMappings": [

                  ],
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Returns an adaptive policy group",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "groups"
        ]
      },
      "put": {
        "description": "Updates an adaptive policy group. If updating \"Infrastructure\", only the SGT is allowed. Cannot update \"Unknown\".",
        "operationId": "updateOrganizationAdaptivePolicyGroup",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the group"
                  },
                  "sgt": {
                    "type": "integer",
                    "description": "SGT value of the group"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the group"
                  },
                  "policyObjects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the policy object"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the policy object"
                        }
                      }
                    },
                    "description": "The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group's SGT value if no other tagging scheme is being used (each requires one unique attribute)"
                  }
                },
                "example": {
                  "name": "Employee Group",
                  "sgt": 1000,
                  "description": "Group of XYZ Corp Employees",
                  "policyObjects": [
                    {
                      "id": "2345",
                      "name": "Example Policy Object"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The ID of the adaptive policy group"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the adaptive policy group"
                    },
                    "sgt": {
                      "type": "integer",
                      "description": "The security group tag for the adaptive policy group"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the adaptive policy group"
                    },
                    "policyObjects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the policy object"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the policy object"
                          }
                        }
                      },
                      "description": "The policy objects for the adaptive policy group"
                    },
                    "isDefaultGroup": {
                      "type": "boolean",
                      "description": "Whether the adaptive policy group is the default group"
                    },
                    "requiredIpMappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of required IP mappings for the adaptive policy group"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Created at timestamp for the adaptive policy group"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Updated at timestamp for the adaptive policy group"
                    }
                  }
                },
                "example": {
                  "groupId": "1234",
                  "name": "Employee Group",
                  "sgt": 1000,
                  "description": "Group of XYZ Corp Employees",
                  "policyObjects": [
                    {
                      "id": "2345",
                      "name": "Example Policy Object"
                    }
                  ],
                  "isDefaultGroup": false,
                  "requiredIpMappings": [

                  ],
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Updates an adaptive policy group",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "groups"
        ]
      },
      "delete": {
        "description": "Deletes the specified adaptive policy group and any associated policies and references",
        "operationId": "deleteOrganizationAdaptivePolicyGroup",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Deletes the specified adaptive policy group and any associated policies and references",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "groups"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/overview": {
      "get": {
        "description": "Returns adaptive policy aggregate statistics for an organization",
        "operationId": "getOrganizationAdaptivePolicyOverview",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "counts": {
                      "type": "object",
                      "properties": {
                        "groups": {
                          "type": "integer",
                          "description": "Number of adaptive policy groups currently in the organization."
                        },
                        "customGroups": {
                          "type": "integer",
                          "description": "Number of user-created adaptive policy groups currently in the organization."
                        },
                        "customAcls": {
                          "type": "integer",
                          "description": "Number of user-created adaptive policy ACLs currently in the organization."
                        },
                        "policies": {
                          "type": "integer",
                          "description": "Number of adaptive policies currently in the organization."
                        },
                        "denyPolicies": {
                          "type": "integer",
                          "description": "Number of adaptive policies currently in the organization that deny all traffic."
                        },
                        "allowPolicies": {
                          "type": "integer",
                          "description": "Number of adaptive policies currently in the organization that allow all traffic."
                        },
                        "policyObjects": {
                          "type": "integer",
                          "description": "Number of policy objects (with the adaptive policy type) currently in the organization."
                        }
                      },
                      "description": "The current amount of various adaptive policy objects."
                    },
                    "limits": {
                      "type": "object",
                      "properties": {
                        "customGroups": {
                          "type": "integer",
                          "description": "Maximum number of user-created adaptive policy groups allowed in the organization."
                        },
                        "rulesInAnAcl": {
                          "type": "integer",
                          "description": "Maximum number of rules allowed in an adaptive policy ACL in the organization."
                        },
                        "aclsInAPolicy": {
                          "type": "integer",
                          "description": "Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization."
                        },
                        "policyObjects": {
                          "type": "integer",
                          "description": "Maximum number of policy objects (with the adaptive policy type) allowed in the organization."
                        }
                      },
                      "description": "The current limits of various adaptive policy objects."
                    }
                  }
                },
                "example": {
                  "counts": {
                    "groups": 10,
                    "customGroups": 8,
                    "customAcls": 12,
                    "policies": 100,
                    "denyPolicies": 30,
                    "allowPolicies": 70,
                    "policyObjects": 13
                  },
                  "limits": {
                    "customGroups": 60,
                    "rulesInAnAcl": 16,
                    "aclsInAPolicy": 7,
                    "policyObjects": 8000
                  }
                }
              }
            }
          }
        },
        "summary": "Returns adaptive policy aggregate statistics for an organization",
        "tags": [
          "organizations",
          "monitor",
          "adaptivePolicy",
          "overview"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/policies": {
      "get": {
        "description": "List adaptive policies in an organization",
        "operationId": "getOrganizationAdaptivePolicyPolicies",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "adaptivePolicyId": {
                        "type": "string",
                        "description": "The ID for the adaptive policy"
                      },
                      "sourceGroup": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID for the source group"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for the source group"
                          },
                          "sgt": {
                            "type": "integer",
                            "description": "The security group tag for the source group"
                          }
                        },
                        "description": "The source group for the given adaptive policy"
                      },
                      "destinationGroup": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID for the destination group"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for the destination group"
                          },
                          "sgt": {
                            "type": "integer",
                            "description": "The security group tag for the destination group"
                          }
                        },
                        "description": "The destination group for the given adaptive policy"
                      },
                      "acls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID for the access control list"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name for the access control list"
                            }
                          }
                        },
                        "description": "The access control lists for the adaptive policy"
                      },
                      "lastEntryRule": {
                        "type": "string",
                        "enum": [
                          "allow",
                          "default",
                          "deny"
                        ],
                        "description": "The rule to apply if there is no matching ACL"
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "The created at timestamp for the adaptive policy"
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The updated at timestamp for the adaptive policy"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "adaptivePolicyId": "111",
                    "sourceGroup": {
                      "id": "222",
                      "name": "IoT Devices",
                      "sgt": 50
                    },
                    "destinationGroup": {
                      "id": "333",
                      "name": "IoT Servers",
                      "sgt": 51
                    },
                    "acls": [
                      {
                        "id": "444",
                        "name": "Block web"
                      }
                    ],
                    "lastEntryRule": "allow",
                    "createdAt": "2019-06-27T21:34:25.253480Z",
                    "updatedAt": "2019-06-27T21:34:25.253480Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "List adaptive policies in an organization",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "policies"
        ]
      },
      "post": {
        "description": "Add an Adaptive Policy",
        "operationId": "createOrganizationAdaptivePolicyPolicy",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceGroup": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the source adaptive policy group"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the source adaptive policy group"
                      },
                      "sgt": {
                        "type": "integer",
                        "description": "The SGT of the source adaptive policy group"
                      }
                    },
                    "description": "The source adaptive policy group (requires one unique attribute)"
                  },
                  "destinationGroup": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the destination adaptive policy group"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the destination adaptive policy group"
                      },
                      "sgt": {
                        "type": "integer",
                        "description": "The SGT of the destination adaptive policy group"
                      }
                    },
                    "description": "The destination adaptive policy group (requires one unique attribute)"
                  },
                  "acls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the adaptive policy ACL"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the adaptive policy ACL"
                        }
                      }
                    },
                    "description": "An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])"
                  },
                  "lastEntryRule": {
                    "type": "string",
                    "enum": [
                      "allow",
                      "default",
                      "deny"
                    ],
                    "description": "The rule to apply if there is no matching ACL (default: \"default\")"
                  }
                },
                "example": {
                  "sourceGroup": {
                    "id": "222",
                    "name": "IoT Devices",
                    "sgt": 50
                  },
                  "destinationGroup": {
                    "id": "333",
                    "name": "IoT Servers",
                    "sgt": 51
                  },
                  "acls": [
                    {
                      "id": "444",
                      "name": "Block web"
                    }
                  ],
                  "lastEntryRule": "allow"
                },
                "required": [
                  "sourceGroup",
                  "destinationGroup"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adaptivePolicyId": {
                      "type": "string",
                      "description": "The ID for the adaptive policy"
                    },
                    "sourceGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the source group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the source group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the source group"
                        }
                      },
                      "description": "The source group for the given adaptive policy"
                    },
                    "destinationGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the destination group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the destination group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the destination group"
                        }
                      },
                      "description": "The destination group for the given adaptive policy"
                    },
                    "acls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID for the access control list"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for the access control list"
                          }
                        }
                      },
                      "description": "The access control lists for the adaptive policy"
                    },
                    "lastEntryRule": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "default",
                        "deny"
                      ],
                      "description": "The rule to apply if there is no matching ACL"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The created at timestamp for the adaptive policy"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The updated at timestamp for the adaptive policy"
                    }
                  }
                },
                "example": {
                  "adaptivePolicyId": "111",
                  "sourceGroup": {
                    "id": "222",
                    "name": "IoT Devices",
                    "sgt": 50
                  },
                  "destinationGroup": {
                    "id": "333",
                    "name": "IoT Servers",
                    "sgt": 51
                  },
                  "acls": [
                    {
                      "id": "444",
                      "name": "Block web"
                    }
                  ],
                  "lastEntryRule": "allow",
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Add an Adaptive Policy",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "policies"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/policies/{id}": {
      "get": {
        "description": "Return an adaptive policy",
        "operationId": "getOrganizationAdaptivePolicyPolicy",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adaptivePolicyId": {
                      "type": "string",
                      "description": "The ID for the adaptive policy"
                    },
                    "sourceGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the source group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the source group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the source group"
                        }
                      },
                      "description": "The source group for the given adaptive policy"
                    },
                    "destinationGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the destination group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the destination group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the destination group"
                        }
                      },
                      "description": "The destination group for the given adaptive policy"
                    },
                    "acls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID for the access control list"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for the access control list"
                          }
                        }
                      },
                      "description": "The access control lists for the adaptive policy"
                    },
                    "lastEntryRule": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "default",
                        "deny"
                      ],
                      "description": "The rule to apply if there is no matching ACL"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The created at timestamp for the adaptive policy"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The updated at timestamp for the adaptive policy"
                    }
                  }
                },
                "example": {
                  "adaptivePolicyId": "111",
                  "sourceGroup": {
                    "id": "222",
                    "name": "IoT Devices",
                    "sgt": 50
                  },
                  "destinationGroup": {
                    "id": "333",
                    "name": "IoT Servers",
                    "sgt": 51
                  },
                  "acls": [
                    {
                      "id": "444",
                      "name": "Block web"
                    }
                  ],
                  "lastEntryRule": "allow",
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Return an adaptive policy",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "policies"
        ]
      },
      "put": {
        "description": "Update an Adaptive Policy",
        "operationId": "updateOrganizationAdaptivePolicyPolicy",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceGroup": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the source adaptive policy group"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the source adaptive policy group"
                      },
                      "sgt": {
                        "type": "integer",
                        "description": "The SGT of the source adaptive policy group"
                      }
                    },
                    "description": "The source adaptive policy group (requires one unique attribute)"
                  },
                  "destinationGroup": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the destination adaptive policy group"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the destination adaptive policy group"
                      },
                      "sgt": {
                        "type": "integer",
                        "description": "The SGT of the destination adaptive policy group"
                      }
                    },
                    "description": "The destination adaptive policy group (requires one unique attribute)"
                  },
                  "acls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the adaptive policy ACL"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the adaptive policy ACL"
                        }
                      }
                    },
                    "description": "An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy"
                  },
                  "lastEntryRule": {
                    "type": "string",
                    "enum": [
                      "allow",
                      "default",
                      "deny"
                    ],
                    "description": "The rule to apply if there is no matching ACL"
                  }
                },
                "example": {
                  "sourceGroup": {
                    "id": "222",
                    "name": "IoT Devices",
                    "sgt": 50
                  },
                  "destinationGroup": {
                    "id": "333",
                    "name": "IoT Servers",
                    "sgt": 51
                  },
                  "acls": [
                    {
                      "id": "444",
                      "name": "Block web"
                    }
                  ],
                  "lastEntryRule": "allow"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adaptivePolicyId": {
                      "type": "string",
                      "description": "The ID for the adaptive policy"
                    },
                    "sourceGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the source group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the source group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the source group"
                        }
                      },
                      "description": "The source group for the given adaptive policy"
                    },
                    "destinationGroup": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID for the destination group"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the destination group"
                        },
                        "sgt": {
                          "type": "integer",
                          "description": "The security group tag for the destination group"
                        }
                      },
                      "description": "The destination group for the given adaptive policy"
                    },
                    "acls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID for the access control list"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for the access control list"
                          }
                        }
                      },
                      "description": "The access control lists for the adaptive policy"
                    },
                    "lastEntryRule": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "default",
                        "deny"
                      ],
                      "description": "The rule to apply if there is no matching ACL"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The created at timestamp for the adaptive policy"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The updated at timestamp for the adaptive policy"
                    }
                  }
                },
                "example": {
                  "adaptivePolicyId": "111",
                  "sourceGroup": {
                    "id": "222",
                    "name": "IoT Devices",
                    "sgt": 50
                  },
                  "destinationGroup": {
                    "id": "333",
                    "name": "IoT Servers",
                    "sgt": 51
                  },
                  "acls": [
                    {
                      "id": "444",
                      "name": "Block web"
                    }
                  ],
                  "lastEntryRule": "allow",
                  "createdAt": "2019-06-27T21:34:25.253480Z",
                  "updatedAt": "2019-06-27T21:34:25.253480Z"
                }
              }
            }
          }
        },
        "summary": "Update an Adaptive Policy",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "policies"
        ]
      },
      "delete": {
        "description": "Delete an Adaptive Policy",
        "operationId": "deleteOrganizationAdaptivePolicyPolicy",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Delete an Adaptive Policy",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "policies"
        ]
      }
    },
    "/organizations/{organizationId}/adaptivePolicy/settings": {
      "get": {
        "description": "Returns global adaptive policy settings in an organization",
        "operationId": "getOrganizationAdaptivePolicySettings",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabledNetworks": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of network IDs with adaptive policy enabled"
                    }
                  }
                },
                "example": {
                  "enabledNetworks": [
                    "L_11111111",
                    "L_22222222",
                    "N_33333333",
                    "L_44444444"
                  ]
                }
              }
            }
          }
        },
        "summary": "Returns global adaptive policy settings in an organization",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "settings"
        ]
      },
      "put": {
        "description": "Update global adaptive policy settings",
        "operationId": "updateOrganizationAdaptivePolicySettings",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabledNetworks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of network IDs with adaptive policy enabled"
                  }
                },
                "example": {
                  "enabledNetworks": [
                    "L_11111111",
                    "L_22222222",
                    "N_33333333",
                    "L_44444444"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabledNetworks": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of network IDs with adaptive policy enabled"
                    }
                  }
                },
                "example": {
                  "enabledNetworks": [
                    "L_11111111",
                    "L_22222222",
                    "N_33333333",
                    "L_44444444"
                  ]
                }
              }
            }
          }
        },
        "summary": "Update global adaptive policy settings",
        "tags": [
          "organizations",
          "configure",
          "adaptivePolicy",
          "settings"
        ]
      }
    },
    "/organizations/{organizationId}/admins": {
      "get": {
        "description": "List the dashboard administrators in this organization",
        "operationId": "getOrganizationAdmins",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "networkIds",
            "in": "query",
            "description": "Optional parameter to filter the result set by the included set of network IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Admin's ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "Admin's username"
                      },
                      "email": {
                        "type": "string",
                        "description": "Admin's email address"
                      },
                      "orgAccess": {
                        "type": "string",
                        "enum": [
                          "enterprise",
                          "full",
                          "none",
                          "read-only"
                        ],
                        "description": "Admin's level of access to the organization"
                      },
                      "accountStatus": {
                        "type": "string",
                        "enum": [
                          "locked",
                          "ok",
                          "pending",
                          "unverified"
                        ],
                        "description": "Status of the admin's account"
                      },
                      "twoFactorAuthEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether two-factor authentication is enabled"
                      },
                      "hasApiKey": {
                        "type": "boolean",
                        "description": "Indicates whether the admin has an API key"
                      },
                      "lastActive": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the admin was last active"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Tag value"
                            },
                            "access": {
                              "type": "string",
                              "description": "Access level for the tag"
                            }
                          }
                        },
                        "description": "Admin tag information"
                      },
                      "networks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Network ID"
                            },
                            "access": {
                              "type": "string",
                              "description": "Admin's level of access to the network"
                            }
                          }
                        },
                        "description": "Admin network access information"
                      },
                      "authenticationMethod": {
                        "type": "string",
                        "enum": [
                          "Cisco SecureX Sign-On",
                          "Email"
                        ],
                        "description": "Admin's authentication method"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "212406",
                    "name": "Miles Meraki",
                    "email": "miles@meraki.com",
                    "orgAccess": "none",
                    "accountStatus": "ok",
                    "twoFactorAuthEnabled": false,
                    "hasApiKey": true,
                    "lastActive": "2018-02-11T00:00:00Z",
                    "tags": [
                      {
                        "tag": "west",
                        "access": "read-only"
                      }
                    ],
                    "networks": [
                      {
                        "id": "N_24329156",
                        "access": "full"
                      }
                    ],
                    "authenticationMethod": "Email"
                  }
                ]
              }
            }
          }
        },
        "summary": "List the dashboard administrators in this organization",
        "tags": [
          "organizations",
          "configure",
          "admins"
        ]
      },
      "post": {
        "description": "Create a new dashboard administrator",
        "operationId": "createOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the dashboard administrator. This attribute can not be updated."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the dashboard administrator"
                  },
                  "orgAccess": {
                    "type": "string",
                    "enum": [
                      "enterprise",
                      "full",
                      "none",
                      "read-only"
                    ],
                    "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "description": "The name of the tag"
                        },
                        "access": {
                          "type": "string",
                          "enum": [
                            "full",
                            "guest-ambassador",
                            "monitor-only",
                            "read-only"
                          ],
                          "description": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                        }
                      },
                      "required": [
                        "tag",
                        "access"
                      ]
                    },
                    "description": "The list of tags that the dashboard administrator has privileges on"
                  },
                  "networks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The network ID"
                        },
                        "access": {
                          "type": "string",
                          "description": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                        }
                      },
                      "required": [
                        "id",
                        "access"
                      ]
                    },
                    "description": "The list of networks that the dashboard administrator has privileges on"
                  },
                  "authenticationMethod": {
                    "type": "string",
                    "enum": [
                      "Email"
                    ],
                    "description": "No longer used as of Cisco SecureX end-of-life. Can be one of 'Email'. The default is Email authentication."
                  }
                },
                "example": {
                  "email": "miles@meraki.com",
                  "name": "Miles Meraki",
                  "orgAccess": "none",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ],
                  "authenticationMethod": "Email"
                },
                "required": [
                  "email",
                  "name",
                  "orgAccess"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Admin's ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Admin's username"
                    },
                    "email": {
                      "type": "string",
                      "description": "Admin's email address"
                    },
                    "orgAccess": {
                      "type": "string",
                      "enum": [
                        "enterprise",
                        "full",
                        "none",
                        "read-only"
                      ],
                      "description": "Admin's level of access to the organization"
                    },
                    "accountStatus": {
                      "type": "string",
                      "enum": [
                        "locked",
                        "ok",
                        "pending",
                        "unverified"
                      ],
                      "description": "Status of the admin's account"
                    },
                    "twoFactorAuthEnabled": {
                      "type": "boolean",
                      "description": "Indicates whether two-factor authentication is enabled"
                    },
                    "hasApiKey": {
                      "type": "boolean",
                      "description": "Indicates whether the admin has an API key"
                    },
                    "lastActive": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time when the admin was last active"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag": {
                            "type": "string",
                            "description": "Tag value"
                          },
                          "access": {
                            "type": "string",
                            "description": "Access level for the tag"
                          }
                        }
                      },
                      "description": "Admin tag information"
                    },
                    "networks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Network ID"
                          },
                          "access": {
                            "type": "string",
                            "description": "Admin's level of access to the network"
                          }
                        }
                      },
                      "description": "Admin network access information"
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "enum": [
                        "Cisco SecureX Sign-On",
                        "Email"
                      ],
                      "description": "Admin's authentication method"
                    }
                  }
                },
                "example": {
                  "id": "212406",
                  "name": "Miles Meraki",
                  "email": "miles@meraki.com",
                  "orgAccess": "none",
                  "accountStatus": "ok",
                  "twoFactorAuthEnabled": false,
                  "hasApiKey": true,
                  "lastActive": "2018-02-11T00:00:00Z",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ],
                  "authenticationMethod": "Email"
                }
              }
            }
          }
        },
        "summary": "Create a new dashboard administrator",
        "tags": [
          "organizations",
          "configure",
          "admins"
        ]
      }
    },
    "/organizations/{organizationId}/admins/{adminId}": {
      "put": {
        "description": "Update an administrator",
        "operationId": "updateOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the dashboard administrator"
                  },
                  "orgAccess": {
                    "type": "string",
                    "enum": [
                      "enterprise",
                      "full",
                      "none",
                      "read-only"
                    ],
                    "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "description": "The name of the tag"
                        },
                        "access": {
                          "type": "string",
                          "enum": [
                            "full",
                            "guest-ambassador",
                            "monitor-only",
                            "read-only"
                          ],
                          "description": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                        }
                      },
                      "required": [
                        "tag",
                        "access"
                      ]
                    },
                    "description": "The list of tags that the dashboard administrator has privileges on"
                  },
                  "networks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The network ID"
                        },
                        "access": {
                          "type": "string",
                          "description": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                        }
                      },
                      "required": [
                        "id",
                        "access"
                      ]
                    },
                    "description": "The list of networks that the dashboard administrator has privileges on"
                  }
                },
                "example": {
                  "name": "Miles Meraki",
                  "orgAccess": "none",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Admin's ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Admin's username"
                    },
                    "email": {
                      "type": "string",
                      "description": "Admin's email address"
                    },
                    "orgAccess": {
                      "type": "string",
                      "enum": [
                        "enterprise",
                        "full",
                        "none",
                        "read-only"
                      ],
                      "description": "Admin's level of access to the organization"
                    },
                    "accountStatus": {
                      "type": "string",
                      "enum": [
                        "locked",
                        "ok",
                        "pending",
                        "unverified"
                      ],
                      "description": "Status of the admin's account"
                    },
                    "twoFactorAuthEnabled": {
                      "type": "boolean",
                      "description": "Indicates whether two-factor authentication is enabled"
                    },
                    "hasApiKey": {
                      "type": "boolean",
                      "description": "Indicates whether the admin has an API key"
                    },
                    "lastActive": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time when the admin was last active"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag": {
                            "type": "string",
                            "description": "Tag value"
                          },
                          "access": {
                            "type": "string",
                            "description": "Access level for the tag"
                          }
                        }
                      },
                      "description": "Admin tag information"
                    },
                    "networks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Network ID"
                          },
                          "access": {
                            "type": "string",
                            "description": "Admin's level of access to the network"
                          }
                        }
                      },
                      "description": "Admin network access information"
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "enum": [
                        "Cisco SecureX Sign-On",
                        "Email"
                      ],
                      "description": "Admin's authentication method"
                    }
                  }
                },
                "example": {
                  "id": "212406",
                  "name": "Miles Meraki",
                  "email": "miles@meraki.com",
                  "orgAccess": "none",
                  "accountStatus": "ok",
                  "twoFactorAuthEnabled": false,
                  "hasApiKey": true,
                  "lastActive": "2018-02-11T00:00:00Z",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ],
                  "authenticationMethod": "Email"
                }
              }
            }
          }
        },
        "summary": "Update an administrator",
        "tags": [
          "organizations",
          "configure",
          "admins"
        ]
      },
      "delete": {
        "description": "Revoke all access for a dashboard administrator within this organization",
        "operationId": "deleteOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Revoke all access for a dashboard administrator within this organization",
        "tags": [
          "organizations",
          "configure",
          "admins"
        ]
      }
    },
    "/organizations/{organizationId}/alerts/profiles": {
      "get": {
        "description": "List all organization-wide alert configurations",
        "operationId": "getOrganizationAlertsProfiles",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The alert config ID"
                      },
                      "type": {
                        "type": "string",
                        "description": "The alert type"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Is the alert config enabled"
                      },
                      "alertCondition": {
                        "type": "object",
                        "properties": {
                          "duration": {
                            "type": "integer",
                            "description": "The total duration in seconds that the threshold should be crossed before alerting"
                          },
                          "window": {
                            "type": "integer",
                            "description": "The look back period in seconds for sensing the alert"
                          },
                          "bit_rate_bps": {
                            "type": "integer",
                            "description": "The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts."
                          },
                          "interface": {
                            "type": "string",
                            "description": "The uplink observed for the alert"
                          }
                        },
                        "description": "The conditions that determine if the alert triggers"
                      },
                      "recipients": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of emails that will receive information about the alert"
                          },
                          "httpServerIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list base64 encoded urls of webhook endpoints that will receive information about the alert"
                          }
                        },
                        "description": "List of recipients that will recieve the alert."
                      },
                      "networkTags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Networks with these tags will be monitored for the alert"
                      },
                      "description": {
                        "type": "string",
                        "description": "User supplied description of the alert"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "1284392014819",
                    "type": "wanUtilization",
                    "enabled": true,
                    "alertCondition": {
                      "duration": 60,
                      "window": 600,
                      "bit_rate_bps": 10000,
                      "interface": "wan1"
                    },
                    "recipients": {
                      "emails": [
                        "admin@example.org"
                      ],
                      "httpServerIds": [
                        "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA=="
                      ]
                    },
                    "networkTags": [
                      "tag1",
                      "tag2"
                    ],
                    "description": "WAN 1 high utilization"
                  }
                ]
              }
            }
          }
        },
        "summary": "List all organization-wide alert configurations",
        "tags": [
          "organizations",
          "configure",
          "alerts",
          "profiles"
        ]
      },
      "post": {
        "description": "Create an organization-wide alert configuration",
        "operationId": "createOrganizationAlertsProfile",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "appOutage",
                      "voipJitter",
                      "voipMos",
                      "voipPacketLoss",
                      "wanLatency",
                      "wanPacketLoss",
                      "wanStatus",
                      "wanUtilization"
                    ],
                    "description": "The alert type"
                  },
                  "alertCondition": {
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "integer",
                        "description": "The total duration in seconds that the threshold should be crossed before alerting"
                      },
                      "window": {
                        "type": "integer",
                        "description": "The look back period in seconds for sensing the alert"
                      },
                      "bit_rate_bps": {
                        "type": "integer",
                        "description": "The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts."
                      },
                      "loss_ratio": {
                        "type": "number",
                        "format": "float",
                        "description": "The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts."
                      },
                      "latency_ms": {
                        "type": "integer",
                        "description": "The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts."
                      },
                      "jitter_ms": {
                        "type": "integer",
                        "description": "The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts."
                      },
                      "mos": {
                        "type": "number",
                        "format": "float",
                        "description": "The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts."
                      },
                      "interface": {
                        "type": "string",
                        "enum": [
                          "cellular",
                          "wan1",
                          "wan2",
                          "wan3"
                        ],
                        "description": "The uplink observed for the alert.  interface must be one of the following: wan1, wan2, wan3, cellular"
                      }
                    },
                    "description": "The conditions that determine if the alert triggers"
                  },
                  "recipients": {
                    "type": "object",
                    "properties": {
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of emails that will receive information about the alert"
                      },
                      "httpServerIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list base64 encoded urls of webhook endpoints that will receive information about the alert"
                      }
                    },
                    "description": "List of recipients that will recieve the alert."
                  },
                  "networkTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Networks with these tags will be monitored for the alert"
                  },
                  "description": {
                    "type": "string",
                    "description": "User supplied description of the alert"
                  }
                },
                "example": {
                  "type": "wanUtilization",
                  "alertCondition": {
                    "duration": 60,
                    "window": 600,
                    "bit_rate_bps": 10000,
                    "loss_ratio": 0.1,
                    "latency_ms": 100,
                    "jitter_ms": 100,
                    "mos": 3.5,
                    "interface": "wan1"
                  },
                  "recipients": {
                    "emails": [
                      "admin@example.org"
                    ],
                    "httpServerIds": [
                      "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA=="
                    ]
                  },
                  "networkTags": [
                    "tag1",
                    "tag2"
                  ],
                  "description": "WAN 1 high utilization"
                },
                "required": [
                  "type",
                  "alertCondition",
                  "recipients",
                  "networkTags"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The alert config ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "The alert type"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Is the alert config enabled"
                    },
                    "alertCondition": {
                      "type": "object",
                      "properties": {
                        "duration": {
                          "type": "integer",
                          "description": "The total duration in seconds that the threshold should be crossed before alerting"
                        },
                        "window": {
                          "type": "integer",
                          "description": "The look back period in seconds for sensing the alert"
                        },
                        "bit_rate_bps": {
                          "type": "integer",
                          "description": "The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts."
                        },
                        "interface": {
                          "type": "string",
                          "description": "The uplink observed for the alert"
                        }
                      },
                      "description": "The conditions that determine if the alert triggers"
                    },
                    "recipients": {
                      "type": "object",
                      "properties": {
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of emails that will receive information about the alert"
                        },
                        "httpServerIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list base64 encoded urls of webhook endpoints that will receive information about the alert"
                        }
                      },
                      "description": "List of recipients that will recieve the alert."
                    },
                    "networkTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Networks with these tags will be monitored for the alert"
                    },
                    "description": {
                      "type": "string",
                      "description": "User supplied description of the alert"
                    }
                  }
                },
                "example": {
                  "id": "1284392014819",
                  "type": "wanUtilization",
                  "enabled": true,
                  "alertCondition": {
                    "duration": 60,
                    "window": 600,
                    "bit_rate_bps": 10000,
                    "interface": "wan1"
                  },
                  "recipients": {
                    "emails": [
                      "admin@example.org"
                    ],
                    "httpServerIds": [
                      "aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA=="
                    ]
                  },
                  "networkTags": [
                    "tag1",
                    "tag2"
                  ],
                  "description": "WAN 1 high utilization"
                }
              }
            }
          }
        },
        "summary": "Create an organization-wide alert configuration",
        "tags": [
          "organizations",
          "configure",
          "alerts",
          "profiles"
        ]
      }
    },
     "/networks/{networkId}/appliance/ssids": {
      "get": {
        "description": "List the MX SSIDs in a network",
        "operationId": "getNetworkApplianceSsids",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "integer",
                        "description": "The number of the SSID."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the SSID."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether or not the SSID is enabled."
                      },
                      "defaultVlanId": {
                        "type": "integer",
                        "description": "The VLAN ID of the VLAN associated to this SSID."
                      },
                      "authMode": {
                        "type": "string",
                        "description": "The association control method for the SSID."
                      },
                      "radiusServers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "The IP address of your RADIUS server."
                            },
                            "port": {
                              "type": "integer",
                              "description": "The UDP port your RADIUS servers listens on for Access-requests."
                            }
                          }
                        },
                        "description": "The RADIUS 802.1x servers to be used for authentication."
                      },
                      "encryptionMode": {
                        "type": "string",
                        "description": "The psk encryption mode for the SSID."
                      },
                      "wpaEncryptionMode": {
                        "type": "string",
                        "description": "WPA encryption mode for the SSID."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Boolean indicating whether the MX should advertise or hide this SSID."
                      }
                    }
                  }
                },
                "example": [
                  {
                    "number": 1,
                    "name": "My SSID",
                    "enabled": true,
                    "defaultVlanId": 1,
                    "authMode": "8021x-radius",
                    "radiusServers": [
                      {
                        "host": "0.0.0.0",
                        "port": 1000
                      }
                    ],
                    "encryptionMode": "wpa",
                    "wpaEncryptionMode": "WPA2 only",
                    "visible": true
                  }
                ]
              }
            }
          }
        },
        "summary": "List the MX SSIDs in a network",
        "tags": [
          "appliance",
          "configure",
          "ssids"
        ]
      }
    },
    "/networks/{networkId}/appliance/ssids/{number}": {
      "get": {
        "description": "Return a single MX SSID",
        "operationId": "getNetworkApplianceSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "The number of the SSID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the SSID."
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether or not the SSID is enabled."
                    },
                    "defaultVlanId": {
                      "type": "integer",
                      "description": "The VLAN ID of the VLAN associated to this SSID."
                    },
                    "authMode": {
                      "type": "string",
                      "description": "The association control method for the SSID."
                    },
                    "radiusServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "The IP address of your RADIUS server."
                          },
                          "port": {
                            "type": "integer",
                            "description": "The UDP port your RADIUS servers listens on for Access-requests."
                          }
                        }
                      },
                      "description": "The RADIUS 802.1x servers to be used for authentication."
                    },
                    "encryptionMode": {
                      "type": "string",
                      "description": "The psk encryption mode for the SSID."
                    },
                    "wpaEncryptionMode": {
                      "type": "string",
                      "description": "WPA encryption mode for the SSID."
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Boolean indicating whether the MX should advertise or hide this SSID."
                    }
                  }
                },
                "example": {
                  "number": 1,
                  "name": "My SSID",
                  "enabled": true,
                  "defaultVlanId": 1,
                  "authMode": "8021x-radius",
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 1000
                    }
                  ],
                  "encryptionMode": "wpa",
                  "wpaEncryptionMode": "WPA2 only",
                  "visible": true
                }
              }
            }
          }
        },
        "summary": "Return a single MX SSID",
        "tags": [
          "appliance",
          "configure",
          "ssids"
        ]
      },
      "put": {
        "description": "Update the attributes of an MX SSID",
        "operationId": "updateNetworkApplianceSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SSID."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the SSID is enabled."
                  },
                  "defaultVlanId": {
                    "type": "integer",
                    "description": "The VLAN ID of the VLAN associated to this SSID. This parameter is only valid if the network is in routed mode."
                  },
                  "authMode": {
                    "type": "string",
                    "enum": [
                      "8021x-meraki",
                      "8021x-radius",
                      "open",
                      "psk"
                    ],
                    "description": "The association control method for the SSID ('open', 'psk', '8021x-meraki' or '8021x-radius')."
                  },
                  "psk": {
                    "type": "string",
                    "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'."
                  },
                  "radiusServers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "The IP address of your RADIUS server."
                        },
                        "port": {
                          "type": "integer",
                          "description": "The UDP port your RADIUS servers listens on for Access-requests."
                        },
                        "secret": {
                          "type": "string",
                          "description": "The RADIUS client shared secret."
                        }
                      }
                    },
                    "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is '8021x-radius'."
                  },
                  "encryptionMode": {
                    "type": "string",
                    "enum": [
                      "wep",
                      "wpa"
                    ],
                    "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'."
                  },
                  "wpaEncryptionMode": {
                    "type": "string",
                    "enum": [
                      "WPA1 and WPA2",
                      "WPA2 only",
                      "WPA3 Transition Mode",
                      "WPA3 only"
                    ],
                    "description": "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only'). This param is only valid if (1) the authMode is 'psk' & the encryptionMode is 'wpa' OR (2) the authMode is '8021x-meraki' OR (3) the authMode is '8021x-radius'"
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the MX should advertise or hide this SSID."
                  },
                  "dhcpEnforcedDeauthentication": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Enable DCHP Enforced Deauthentication on the SSID."
                      }
                    },
                    "description": "DHCP Enforced Deauthentication enables the disassociation of wireless clients in addition to Mandatory DHCP. This param is only valid on firmware versions >= MX 17.0 where the associated LAN has Mandatory DHCP Enabled "
                  },
                  "dot11w": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether 802.11w is enabled or not."
                      },
                      "required": {
                        "type": "boolean",
                        "description": "(Optional) Whether 802.11w is required or not."
                      }
                    },
                    "description": "The current setting for Protected Management Frames (802.11w)."
                  }
                },
                "example": {
                  "name": "My SSID",
                  "enabled": true,
                  "defaultVlanId": 1,
                  "authMode": "8021x-radius",
                  "psk": "psk",
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 1000,
                      "secret": "secret"
                    }
                  ],
                  "encryptionMode": "wpa",
                  "wpaEncryptionMode": "WPA2 only",
                  "visible": true,
                  "dhcpEnforcedDeauthentication": {
                    "enabled": true
                  },
                  "dot11w": {
                    "enabled": true,
                    "required": true
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "The number of the SSID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the SSID."
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether or not the SSID is enabled."
                    },
                    "defaultVlanId": {
                      "type": "integer",
                      "description": "The VLAN ID of the VLAN associated to this SSID."
                    },
                    "authMode": {
                      "type": "string",
                      "description": "The association control method for the SSID."
                    },
                    "radiusServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "The IP address of your RADIUS server."
                          },
                          "port": {
                            "type": "integer",
                            "description": "The UDP port your RADIUS servers listens on for Access-requests."
                          }
                        }
                      },
                      "description": "The RADIUS 802.1x servers to be used for authentication."
                    },
                    "encryptionMode": {
                      "type": "string",
                      "description": "The psk encryption mode for the SSID."
                    },
                    "wpaEncryptionMode": {
                      "type": "string",
                      "description": "WPA encryption mode for the SSID."
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Boolean indicating whether the MX should advertise or hide this SSID."
                    }
                  }
                },
                "example": {
                  "number": 1,
                  "name": "My SSID",
                  "enabled": true,
                  "defaultVlanId": 1,
                  "authMode": "8021x-radius",
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 1000
                    }
                  ],
                  "encryptionMode": "wpa",
                  "wpaEncryptionMode": "WPA2 only",
                  "visible": true
                }
              }
            }
          }
        },
        "summary": "Update the attributes of an MX SSID",
        "tags": [
          "appliance",
          "configure",
          "ssids"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids": {
      "get": {
        "description": "List the MR SSIDs in a network",
        "operationId": "getNetworkWirelessSsids",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "integer",
                        "description": "Unique identifier of the SSID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the SSID"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether or not the SSID is enabled"
                      },
                      "splashPage": {
                        "type": "string",
                        "enum": [
                          "Billing",
                          "Cisco ISE",
                          "Click-through splash page",
                          "Facebook Wi-Fi",
                          "Google Apps domain",
                          "Google OAuth",
                          "Microsoft Entra ID",
                          "None",
                          "Password-protected with Active Directory",
                          "Password-protected with LDAP",
                          "Password-protected with Meraki RADIUS",
                          "Password-protected with custom RADIUS",
                          "SMS authentication",
                          "Sponsored guest",
                          "Systems Manager Sentry"
                        ],
                        "description": "The type of splash page for the SSID"
                      },
                      "ssidAdminAccessible": {
                        "type": "boolean",
                        "description": "SSID Administrator access status"
                      },
                      "localAuth": {
                        "type": "boolean",
                        "description": "Extended local auth flag for Enterprise NAC"
                      },
                      "authMode": {
                        "type": "string",
                        "enum": [
                          "8021x-entra",
                          "8021x-google",
                          "8021x-localradius",
                          "8021x-meraki",
                          "8021x-nac",
                          "8021x-radius",
                          "ipsk-with-nac",
                          "ipsk-with-radius",
                          "ipsk-with-radius-easy-psk",
                          "ipsk-without-radius",
                          "open",
                          "open-enhanced",
                          "open-with-nac",
                          "open-with-radius",
                          "psk"
                        ],
                        "description": "The association control method for the SSID"
                      },
                      "encryptionMode": {
                        "type": "string",
                        "enum": [
                          "wep",
                          "wpa"
                        ],
                        "description": "The psk encryption mode for the SSID"
                      },
                      "wpaEncryptionMode": {
                        "type": "string",
                        "enum": [
                          "WPA1 and WPA2",
                          "WPA1 only",
                          "WPA2 only",
                          "WPA3 192-bit Security",
                          "WPA3 Transition Mode",
                          "WPA3 only"
                        ],
                        "description": "The types of WPA encryption"
                      },
                      "radiusServers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "IP address (or FQDN) of your RADIUS server"
                            },
                            "port": {
                              "type": "integer",
                              "description": "UDP port the RADIUS server listens on for Access-requests"
                            },
                            "openRoamingCertificateId": {
                              "type": "integer",
                              "description": "The ID of the Openroaming Certificate attached to radius server"
                            },
                            "caCertificate": {
                              "type": "string",
                              "description": "Certificate used for authorization for the RADSEC Server"
                            }
                          }
                        },
                        "description": "List of RADIUS 802.1X servers to be used for authentication"
                      },
                      "radiusAccountingServers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "IP address (or FQDN) to which the APs will send RADIUS accounting messages"
                            },
                            "port": {
                              "type": "integer",
                              "description": "Port on the RADIUS server that is listening for accounting messages"
                            },
                            "openRoamingCertificateId": {
                              "type": "integer",
                              "description": "The ID of the Openroaming Certificate attached to radius server"
                            },
                            "caCertificate": {
                              "type": "string",
                              "description": "Certificate used for authorization for the RADSEC Server"
                            }
                          }
                        },
                        "description": "List of RADIUS accounting 802.1X servers to be used for authentication"
                      },
                      "radiusAccountingEnabled": {
                        "type": "boolean",
                        "description": "Whether or not RADIUS accounting is enabled"
                      },
                      "radiusEnabled": {
                        "type": "boolean",
                        "description": "Whether RADIUS authentication is enabled"
                      },
                      "radiusAttributeForGroupPolicies": {
                        "type": "string",
                        "enum": [
                          "Airespace-ACL-Name",
                          "Aruba-User-Role",
                          "Filter-Id",
                          "Reply-Message"
                        ],
                        "description": "RADIUS attribute used to look up group policies"
                      },
                      "radiusFailoverPolicy": {
                        "type": "string",
                        "enum": [
                          "Allow access",
                          "Deny access"
                        ],
                        "description": "Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable"
                      },
                      "radiusLoadBalancingPolicy": {
                        "type": "string",
                        "enum": [
                          "Round robin",
                          "Strict priority order"
                        ],
                        "description": "Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts"
                      },
                      "ipAssignmentMode": {
                        "type": "string",
                        "enum": [
                          "Bridge mode",
                          "Ethernet over GRE",
                          "Layer 3 roaming",
                          "Layer 3 roaming with a concentrator",
                          "NAT mode",
                          "VPN"
                        ],
                        "description": "The client IP assignment mode"
                      },
                      "adminSplashUrl": {
                        "type": "string",
                        "description": "URL for the admin splash page"
                      },
                      "splashTimeout": {
                        "type": "string",
                        "description": "Splash page timeout"
                      },
                      "walledGardenEnabled": {
                        "type": "boolean",
                        "description": "Allow users to access a configurable list of IP ranges prior to sign-on"
                      },
                      "walledGardenRanges": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Domain names and IP address ranges available in Walled Garden mode"
                      },
                      "minBitrate": {
                        "type": "integer",
                        "description": "The minimum bitrate in Mbps of this SSID in the default indoor RF profile"
                      },
                      "bandSelection": {
                        "type": "string",
                        "enum": [
                          "5 GHz band only",
                          "Dual band operation",
                          "Dual band operation with Band Steering"
                        ],
                        "description": "The client-serving radio frequencies of this SSID in the default indoor RF profile"
                      },
                      "perClientBandwidthLimitUp": {
                        "type": "integer",
                        "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                      },
                      "perClientBandwidthLimitDown": {
                        "type": "integer",
                        "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether the SSID is advertised or hidden by the AP"
                      },
                      "availableOnAllAps": {
                        "type": "boolean",
                        "description": "Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags"
                      },
                      "availabilityTags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list"
                      },
                      "perSsidBandwidthLimitUp": {
                        "type": "integer",
                        "description": "The total upload bandwidth limit in Kbps (0 represents no limit)"
                      },
                      "perSsidBandwidthLimitDown": {
                        "type": "integer",
                        "description": "The total download bandwidth limit in Kbps (0 represents no limit)"
                      },
                      "mandatoryDhcpEnabled": {
                        "type": "boolean",
                        "description": "Whether clients connecting to this SSID must use the IP address assigned by the DHCP server"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "number": 0,
                    "name": "My SSID",
                    "enabled": true,
                    "splashPage": "Click-through splash page",
                    "ssidAdminAccessible": false,
                    "localAuth": false,
                    "authMode": "8021x-radius",
                    "encryptionMode": "wpa",
                    "wpaEncryptionMode": "WPA2 only",
                    "radiusServers": [
                      {
                        "host": "0.0.0.0",
                        "port": 3000,
                        "openRoamingCertificateId": 2,
                        "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                      }
                    ],
                    "radiusAccountingServers": [
                      {
                        "host": "0.0.0.0",
                        "port": 3000,
                        "openRoamingCertificateId": 2,
                        "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                      }
                    ],
                    "radiusAccountingEnabled": false,
                    "radiusEnabled": true,
                    "radiusAttributeForGroupPolicies": "Filter-Id",
                    "radiusFailoverPolicy": "Deny access",
                    "radiusLoadBalancingPolicy": "Round robin",
                    "ipAssignmentMode": "NAT mode",
                    "adminSplashUrl": "http://example.com",
                    "splashTimeout": "30 minutes",
                    "walledGardenEnabled": true,
                    "walledGardenRanges": [
                      "example.com",
                      "1.1.1.1/32"
                    ],
                    "minBitrate": 11,
                    "bandSelection": "5 GHz band only",
                    "perClientBandwidthLimitUp": 0,
                    "perClientBandwidthLimitDown": 0,
                    "visible": true,
                    "availableOnAllAps": false,
                    "availabilityTags": [
                      "tag1",
                      "tag2"
                    ],
                    "perSsidBandwidthLimitUp": 0,
                    "perSsidBandwidthLimitDown": 0,
                    "mandatoryDhcpEnabled": false
                  }
                ]
              }
            }
          }
        },
        "summary": "List the MR SSIDs in a network",
        "tags": [
          "wireless",
          "configure",
          "ssids"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids/{number}": {
      "get": {
        "description": "Return a single MR SSID",
        "operationId": "getNetworkWirelessSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Unique identifier of the SSID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the SSID"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether or not the SSID is enabled"
                    },
                    "splashPage": {
                      "type": "string",
                      "enum": [
                        "Billing",
                        "Cisco ISE",
                        "Click-through splash page",
                        "Facebook Wi-Fi",
                        "Google Apps domain",
                        "Google OAuth",
                        "Microsoft Entra ID",
                        "None",
                        "Password-protected with Active Directory",
                        "Password-protected with LDAP",
                        "Password-protected with Meraki RADIUS",
                        "Password-protected with custom RADIUS",
                        "SMS authentication",
                        "Sponsored guest",
                        "Systems Manager Sentry"
                      ],
                      "description": "The type of splash page for the SSID"
                    },
                    "ssidAdminAccessible": {
                      "type": "boolean",
                      "description": "SSID Administrator access status"
                    },
                    "localAuth": {
                      "type": "boolean",
                      "description": "Extended local auth flag for Enterprise NAC"
                    },
                    "authMode": {
                      "type": "string",
                      "enum": [
                        "8021x-entra",
                        "8021x-google",
                        "8021x-localradius",
                        "8021x-meraki",
                        "8021x-nac",
                        "8021x-radius",
                        "ipsk-with-nac",
                        "ipsk-with-radius",
                        "ipsk-with-radius-easy-psk",
                        "ipsk-without-radius",
                        "open",
                        "open-enhanced",
                        "open-with-nac",
                        "open-with-radius",
                        "psk"
                      ],
                      "description": "The association control method for the SSID"
                    },
                    "encryptionMode": {
                      "type": "string",
                      "enum": [
                        "wep",
                        "wpa"
                      ],
                      "description": "The psk encryption mode for the SSID"
                    },
                    "wpaEncryptionMode": {
                      "type": "string",
                      "enum": [
                        "WPA1 and WPA2",
                        "WPA1 only",
                        "WPA2 only",
                        "WPA3 192-bit Security",
                        "WPA3 Transition Mode",
                        "WPA3 only"
                      ],
                      "description": "The types of WPA encryption"
                    },
                    "radiusServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "IP address (or FQDN) of your RADIUS server"
                          },
                          "port": {
                            "type": "integer",
                            "description": "UDP port the RADIUS server listens on for Access-requests"
                          },
                          "openRoamingCertificateId": {
                            "type": "integer",
                            "description": "The ID of the Openroaming Certificate attached to radius server"
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Certificate used for authorization for the RADSEC Server"
                          }
                        }
                      },
                      "description": "List of RADIUS 802.1X servers to be used for authentication"
                    },
                    "radiusAccountingServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "IP address (or FQDN) to which the APs will send RADIUS accounting messages"
                          },
                          "port": {
                            "type": "integer",
                            "description": "Port on the RADIUS server that is listening for accounting messages"
                          },
                          "openRoamingCertificateId": {
                            "type": "integer",
                            "description": "The ID of the Openroaming Certificate attached to radius server"
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Certificate used for authorization for the RADSEC Server"
                          }
                        }
                      },
                      "description": "List of RADIUS accounting 802.1X servers to be used for authentication"
                    },
                    "radiusAccountingEnabled": {
                      "type": "boolean",
                      "description": "Whether or not RADIUS accounting is enabled"
                    },
                    "radiusEnabled": {
                      "type": "boolean",
                      "description": "Whether RADIUS authentication is enabled"
                    },
                    "radiusAttributeForGroupPolicies": {
                      "type": "string",
                      "enum": [
                        "Airespace-ACL-Name",
                        "Aruba-User-Role",
                        "Filter-Id",
                        "Reply-Message"
                      ],
                      "description": "RADIUS attribute used to look up group policies"
                    },
                    "radiusFailoverPolicy": {
                      "type": "string",
                      "enum": [
                        "Allow access",
                        "Deny access"
                      ],
                      "description": "Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable"
                    },
                    "radiusLoadBalancingPolicy": {
                      "type": "string",
                      "enum": [
                        "Round robin",
                        "Strict priority order"
                      ],
                      "description": "Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts"
                    },
                    "ipAssignmentMode": {
                      "type": "string",
                      "enum": [
                        "Bridge mode",
                        "Ethernet over GRE",
                        "Layer 3 roaming",
                        "Layer 3 roaming with a concentrator",
                        "NAT mode",
                        "VPN"
                      ],
                      "description": "The client IP assignment mode"
                    },
                    "adminSplashUrl": {
                      "type": "string",
                      "description": "URL for the admin splash page"
                    },
                    "splashTimeout": {
                      "type": "string",
                      "description": "Splash page timeout"
                    },
                    "walledGardenEnabled": {
                      "type": "boolean",
                      "description": "Allow users to access a configurable list of IP ranges prior to sign-on"
                    },
                    "walledGardenRanges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Domain names and IP address ranges available in Walled Garden mode"
                    },
                    "minBitrate": {
                      "type": "integer",
                      "description": "The minimum bitrate in Mbps of this SSID in the default indoor RF profile"
                    },
                    "bandSelection": {
                      "type": "string",
                      "enum": [
                        "5 GHz band only",
                        "Dual band operation",
                        "Dual band operation with Band Steering"
                      ],
                      "description": "The client-serving radio frequencies of this SSID in the default indoor RF profile"
                    },
                    "perClientBandwidthLimitUp": {
                      "type": "integer",
                      "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "perClientBandwidthLimitDown": {
                      "type": "integer",
                      "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Whether the SSID is advertised or hidden by the AP"
                    },
                    "availableOnAllAps": {
                      "type": "boolean",
                      "description": "Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags"
                    },
                    "availabilityTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list"
                    },
                    "perSsidBandwidthLimitUp": {
                      "type": "integer",
                      "description": "The total upload bandwidth limit in Kbps (0 represents no limit)"
                    },
                    "perSsidBandwidthLimitDown": {
                      "type": "integer",
                      "description": "The total download bandwidth limit in Kbps (0 represents no limit)"
                    },
                    "mandatoryDhcpEnabled": {
                      "type": "boolean",
                      "description": "Whether clients connecting to this SSID must use the IP address assigned by the DHCP server"
                    }
                  }
                },
                "example": {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "localAuth": false,
                  "authMode": "8021x-radius",
                  "encryptionMode": "wpa",
                  "wpaEncryptionMode": "WPA2 only",
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "openRoamingCertificateId": 2,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusAccountingServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "openRoamingCertificateId": 2,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusAccountingEnabled": false,
                  "radiusEnabled": true,
                  "radiusAttributeForGroupPolicies": "Filter-Id",
                  "radiusFailoverPolicy": "Deny access",
                  "radiusLoadBalancingPolicy": "Round robin",
                  "ipAssignmentMode": "NAT mode",
                  "adminSplashUrl": "http://example.com",
                  "splashTimeout": "30 minutes",
                  "walledGardenEnabled": true,
                  "walledGardenRanges": [
                    "example.com",
                    "1.1.1.1/32"
                  ],
                  "minBitrate": 11,
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0,
                  "visible": true,
                  "availableOnAllAps": false,
                  "availabilityTags": [
                    "tag1",
                    "tag2"
                  ],
                  "perSsidBandwidthLimitUp": 0,
                  "perSsidBandwidthLimitDown": 0,
                  "mandatoryDhcpEnabled": false
                }
              }
            }
          }
        },
        "summary": "Return a single MR SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids"
        ]
      },
      "put": {
        "description": "Update the attributes of an MR SSID",
        "operationId": "updateNetworkWirelessSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SSID"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the SSID is enabled"
                  },
                  "authMode": {
                    "type": "string",
                    "enum": [
                      "8021x-entra",
                      "8021x-google",
                      "8021x-localradius",
                      "8021x-meraki",
                      "8021x-nac",
                      "8021x-radius",
                      "ipsk-with-nac",
                      "ipsk-with-radius",
                      "ipsk-with-radius-easy-psk",
                      "ipsk-without-radius",
                      "open",
                      "open-enhanced",
                      "open-with-nac",
                      "open-with-radius",
                      "psk"
                    ],
                    "description": "The association control method for the SSID ('open', 'open-enhanced', 'psk', 'open-with-radius', 'open-with-nac', '8021x-meraki', '8021x-nac', '8021x-radius', '8021x-google', '8021x-entra', '8021x-localradius', 'ipsk-with-radius', 'ipsk-without-radius', 'ipsk-with-nac' or 'ipsk-with-radius-easy-psk')"
                  },
                  "enterpriseAdminAccess": {
                    "type": "string",
                    "enum": [
                      "access disabled",
                      "access enabled"
                    ],
                    "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                  },
                  "encryptionMode": {
                    "type": "string",
                    "enum": [
                      "open",
                      "wep",
                      "wpa",
                      "wpa-eap"
                    ],
                    "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                  },
                  "psk": {
                    "type": "string",
                    "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                  },
                  "wpaEncryptionMode": {
                    "type": "string",
                    "enum": [
                      "WPA1 and WPA2",
                      "WPA1 only",
                      "WPA2 only",
                      "WPA3 192-bit Security",
                      "WPA3 Transition Mode",
                      "WPA3 only"
                    ],
                    "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode', 'WPA3 only' or 'WPA3 192-bit Security')"
                  },
                  "dot11w": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether 802.11w is enabled or not."
                      },
                      "required": {
                        "type": "boolean",
                        "description": "(Optional) Whether 802.11w is required or not."
                      }
                    },
                    "description": "The current setting for Protected Management Frames (802.11w)."
                  },
                  "dot11r": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether 802.11r is enabled or not."
                      },
                      "adaptive": {
                        "type": "boolean",
                        "description": "(Optional) Whether 802.11r is adaptive or not."
                      }
                    },
                    "description": "The current setting for 802.11r"
                  },
                  "splashPage": {
                    "type": "string",
                    "enum": [
                      "Billing",
                      "Cisco ISE",
                      "Click-through splash page",
                      "Facebook Wi-Fi",
                      "Google Apps domain",
                      "Google OAuth",
                      "Microsoft Entra ID",
                      "None",
                      "Password-protected with Active Directory",
                      "Password-protected with LDAP",
                      "Password-protected with Meraki RADIUS",
                      "Password-protected with custom RADIUS",
                      "SMS authentication",
                      "Sponsored guest",
                      "Systems Manager Sentry"
                    ],
                    "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Microsoft Entra ID', 'Sponsored guest', 'Cisco ISE' or 'Google Apps domain'). This attribute is not supported for template children."
                  },
                  "splashGuestSponsorDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of valid sponsor email domains for sponsored guest splash type."
                  },
                  "oauth": {
                    "type": "object",
                    "properties": {
                      "allowedDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "(Optional) The list of domains allowed access to the network."
                      }
                    },
                    "description": "The OAuth settings of this SSID. Only valid if splashPage is 'Google OAuth'."
                  },
                  "localRadius": {
                    "type": "object",
                    "properties": {
                      "cacheTimeout": {
                        "type": "integer",
                        "description": "The duration (in seconds) for which LDAP and OCSP lookups are cached."
                      },
                      "passwordAuthentication": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Whether or not to use EAP-TTLS/PAP or PEAP-GTC password-based authentication via LDAP lookup."
                          }
                        },
                        "description": "The current setting for password-based authentication."
                      },
                      "certificateAuthentication": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Whether or not to use EAP-TLS certificate-based authentication to validate wireless clients."
                          },
                          "useLdap": {
                            "type": "boolean",
                            "description": "Whether or not to verify the certificate with LDAP."
                          },
                          "useOcsp": {
                            "type": "boolean",
                            "description": "Whether or not to verify the certificate with OCSP."
                          },
                          "ocspResponderUrl": {
                            "type": "string",
                            "description": "(Optional) The URL of the OCSP responder to verify client certificate status."
                          },
                          "clientRootCaCertificate": {
                            "type": "object",
                            "properties": {
                              "contents": {
                                "type": "string",
                                "description": "The contents of the Client CA Certificate. Must be in PEM or DER format."
                              }
                            },
                            "description": "The Client CA Certificate used to sign the client certificate."
                          }
                        },
                        "description": "The current setting for certificate verification."
                      }
                    },
                    "description": "The current setting for Local Authentication, a built-in RADIUS server on the access point. Only valid if authMode is '8021x-localradius'."
                  },
                  "ldap": {
                    "type": "object",
                    "properties": {
                      "servers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "IP address (or FQDN) of your LDAP server."
                            },
                            "port": {
                              "type": "integer",
                              "description": "UDP port the LDAP server listens on."
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ]
                        },
                        "description": "The LDAP servers to be used for authentication."
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "distinguishedName": {
                            "type": "string",
                            "description": "The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com)."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password of the LDAP user account."
                          }
                        },
                        "description": "(Optional) The credentials of the user account to be used by the AP to bind to your LDAP server. The LDAP account should have permissions on all your LDAP servers."
                      },
                      "baseDistinguishedName": {
                        "type": "string",
                        "description": "The base distinguished name of users on the LDAP server."
                      },
                      "serverCaCertificate": {
                        "type": "object",
                        "properties": {
                          "contents": {
                            "type": "string",
                            "description": "The contents of the CA certificate. Must be in PEM or DER format."
                          }
                        },
                        "description": "The CA certificate used to sign the LDAP server's key."
                      }
                    },
                    "description": "The current setting for LDAP. Only valid if splashPage is 'Password-protected with LDAP'."
                  },
                  "activeDirectory": {
                    "type": "object",
                    "properties": {
                      "servers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "IP address (or FQDN) of your Active Directory server."
                            },
                            "port": {
                              "type": "integer",
                              "description": "(Optional) UDP port the Active Directory server listens on. By default, uses port 3268."
                            }
                          },
                          "required": [
                            "host"
                          ]
                        },
                        "description": "The Active Directory servers to be used for authentication."
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "logonName": {
                            "type": "string",
                            "description": "The logon name of the Active Directory account."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password to the Active Directory user account."
                          }
                        },
                        "description": "(Optional) The credentials of the user account to be used by the AP to bind to your Active Directory server. The Active Directory account should have permissions on all your Active Directory servers. Only valid if the splashPage is 'Password-protected with Active Directory'."
                      }
                    },
                    "description": "The current setting for Active Directory. Only valid if splashPage is 'Password-protected with Active Directory'"
                  },
                  "radiusServers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "IP address (or FQDN) of your RADIUS server"
                        },
                        "port": {
                          "type": "integer",
                          "description": "UDP port the RADIUS server listens on for Access-requests"
                        },
                        "secret": {
                          "type": "string",
                          "description": "RADIUS client shared secret"
                        },
                        "radsecEnabled": {
                          "type": "boolean",
                          "description": "Use RADSEC (TLS over TCP) to connect to this RADIUS server. Requires radiusProxyEnabled."
                        },
                        "openRoamingCertificateId": {
                          "type": "integer",
                          "description": "The ID of the Openroaming Certificate attached to radius server."
                        },
                        "caCertificate": {
                          "type": "string",
                          "description": "Certificate used for authorization for the RADSEC Server"
                        }
                      },
                      "required": [
                        "host"
                      ]
                    },
                    "description": "The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                  },
                  "radiusProxyEnabled": {
                    "type": "boolean",
                    "description": "If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers."
                  },
                  "radiusTestingEnabled": {
                    "type": "boolean",
                    "description": "If true, Meraki devices will periodically send Access-Request messages to configured RADIUS servers using identity 'meraki_8021x_test' to ensure that the RADIUS servers are reachable."
                  },
                  "radiusCalledStationId": {
                    "type": "string",
                    "description": "The template of the called station identifier to be used for RADIUS (ex. $NODE_MAC$:$VAP_NUM$)."
                  },
                  "radiusAuthenticationNasId": {
                    "type": "string",
                    "description": "The template of the NAS identifier to be used for RADIUS authentication (ex. $NODE_MAC$:$VAP_NUM$)."
                  },
                  "radiusServerTimeout": {
                    "type": "integer",
                    "description": "The amount of time for which a RADIUS client waits for a reply from the RADIUS server (must be between 1-10 seconds)."
                  },
                  "radiusServerAttemptsLimit": {
                    "type": "integer",
                    "description": "The maximum number of transmit attempts after which a RADIUS server is failed over (must be between 1-5)."
                  },
                  "radiusFallbackEnabled": {
                    "type": "boolean",
                    "description": "Whether or not higher priority RADIUS servers should be retried after 60 seconds."
                  },
                  "radiusRadsec": {
                    "type": "object",
                    "properties": {
                      "tlsTunnel": {
                        "type": "object",
                        "properties": {
                          "timeout": {
                            "type": "integer",
                            "description": "The interval (in seconds) to determines how long a TLS session can remain idle for a RADSec server before it is automatically terminated"
                          }
                        },
                        "description": "RADSec TLS tunnel settings"
                      }
                    },
                    "x-release-stage": "general_availability",
                    "description": "The current settings for RADIUS RADSec"
                  },
                  "radiusCoaEnabled": {
                    "type": "boolean",
                    "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                  },
                  "radiusFailoverPolicy": {
                    "type": "string",
                    "enum": [
                      "Allow access",
                      "Deny access"
                    ],
                    "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                  },
                  "radiusLoadBalancingPolicy": {
                    "type": "string",
                    "enum": [
                      "Round robin",
                      "Strict priority order"
                    ],
                    "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                  },
                  "radiusAccountingEnabled": {
                    "type": "boolean",
                    "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                  },
                  "radiusAccountingServers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "IP address (or FQDN) to which the APs will send RADIUS accounting messages"
                        },
                        "port": {
                          "type": "integer",
                          "description": "Port on the RADIUS server that is listening for accounting messages"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Shared key used to authenticate messages between the APs and RADIUS server"
                        },
                        "radsecEnabled": {
                          "type": "boolean",
                          "description": "Use RADSEC (TLS over TCP) to connect to this RADIUS accounting server. Requires radiusProxyEnabled."
                        },
                        "caCertificate": {
                          "type": "string",
                          "description": "Certificate used for authorization for the RADSEC Server"
                        }
                      },
                      "required": [
                        "host"
                      ]
                    },
                    "description": "The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                  },
                  "radiusAccountingInterimInterval": {
                    "type": "integer",
                    "description": "The interval (in seconds) in which accounting information is updated and sent to the RADIUS accounting server."
                  },
                  "radiusAttributeForGroupPolicies": {
                    "type": "string",
                    "enum": [
                      "Airespace-ACL-Name",
                      "Aruba-User-Role",
                      "Filter-Id",
                      "Reply-Message"
                    ],
                    "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                  },
                  "ipAssignmentMode": {
                    "type": "string",
                    "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Ethernet over GRE', 'Layer 3 roaming with a concentrator' or 'VPN')"
                  },
                  "useVlanTagging": {
                    "type": "boolean",
                    "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                  },
                  "concentratorNetworkId": {
                    "type": "string",
                    "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                  },
                  "secondaryConcentratorNetworkId": {
                    "type": "string",
                    "description": "The secondary concentrator to use when the ipAssignmentMode is 'VPN'. If configured, the APs will switch to using this concentrator if the primary concentrator is unreachable. This param is optional. ('disabled' represents no secondary concentrator.)"
                  },
                  "disassociateClientsOnVpnFailover": {
                    "type": "boolean",
                    "description": "Disassociate clients when 'VPN' concentrator failover occurs in order to trigger clients to re-associate and generate new DHCP requests. This param is only valid if ipAssignmentMode is 'VPN'."
                  },
                  "vlanId": {
                    "type": "integer",
                    "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                  },
                  "defaultVlanId": {
                    "type": "integer",
                    "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                  },
                  "apTagsAndVlanIds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of AP tags"
                        },
                        "vlanId": {
                          "type": "integer",
                          "description": "Numerical identifier that is assigned to the VLAN"
                        }
                      }
                    },
                    "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                  },
                  "walledGardenEnabled": {
                    "type": "boolean",
                    "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                  },
                  "walledGardenRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                  },
                  "gre": {
                    "type": "object",
                    "properties": {
                      "concentrator": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "The EoGRE concentrator's IP or FQDN. This param is required when ipAssignmentMode is 'Ethernet over GRE'."
                          }
                        },
                        "required": [
                          "host"
                        ],
                        "description": "The EoGRE concentrator's settings"
                      },
                      "key": {
                        "type": "integer",
                        "description": "Optional numerical identifier that will add the GRE key field to the GRE header. Used to identify an individual traffic flow within a tunnel."
                      }
                    },
                    "description": "Ethernet over GRE settings"
                  },
                  "radiusOverride": {
                    "type": "boolean",
                    "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                  },
                  "radiusGuestVlanEnabled": {
                    "type": "boolean",
                    "description": "Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                  },
                  "radiusGuestVlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                  },
                  "minBitrate": {
                    "type": "number",
                    "format": "float",
                    "description": "The minimum bitrate in Mbps of this SSID in the default indoor RF profile. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                  },
                  "bandSelection": {
                    "type": "string",
                    "description": "The client-serving radio frequencies of this SSID in the default indoor RF profile. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                  },
                  "perClientBandwidthLimitUp": {
                    "type": "integer",
                    "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                  },
                  "perClientBandwidthLimitDown": {
                    "type": "integer",
                    "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                  },
                  "perSsidBandwidthLimitUp": {
                    "type": "integer",
                    "description": "The total upload bandwidth limit in Kbps. (0 represents no limit.)"
                  },
                  "perSsidBandwidthLimitDown": {
                    "type": "integer",
                    "description": "The total download bandwidth limit in Kbps. (0 represents no limit.)"
                  },
                  "lanIsolationEnabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true"
                  },
                  "availableOnAllAps": {
                    "type": "boolean",
                    "description": "Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags."
                  },
                  "availabilityTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list."
                  },
                  "adaptivePolicyGroupId": {
                    "type": "string",
                    "description": "Adaptive policy group ID this SSID is assigned to."
                  },
                  "mandatoryDhcpEnabled": {
                    "type": "boolean",
                    "description": "If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate."
                  },
                  "adultContentFilteringEnabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether or not adult content will be blocked"
                  },
                  "dnsRewrite": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether or not DNS server rewrite is enabled. If disabled, upstream DNS will be used"
                      },
                      "dnsCustomNameservers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "User specified DNS servers (up to two servers)"
                      }
                    },
                    "description": "DNS servers rewrite settings"
                  },
                  "speedBurst": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether or not to allow users to temporarily exceed the bandwidth limit for short periods while still keeping them under the bandwidth limit over time."
                      }
                    },
                    "description": "The SpeedBurst setting for this SSID'"
                  },
                  "namedVlans": {
                    "type": "object",
                    "properties": {
                      "tagging": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Whether or not traffic should be directed to use specific VLAN names."
                          },
                          "defaultVlanName": {
                            "type": "string",
                            "description": "The default VLAN name used to tag traffic in the absence of a matching AP tag."
                          },
                          "byApTags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of AP tags."
                                },
                                "vlanName": {
                                  "type": "string",
                                  "description": "VLAN name that will be used to tag traffic."
                                }
                              }
                            },
                            "description": "The list of AP tags and VLAN names used for named VLAN tagging. If an AP has a tag matching one in the list, then traffic on this SSID will be directed to use the VLAN name associated to the tag."
                          }
                        },
                        "description": "VLAN tagging settings. This param is only valid when ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'."
                      },
                      "radius": {
                        "type": "object",
                        "properties": {
                          "guestVlan": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether or not RADIUS guest named VLAN is enabled."
                              },
                              "name": {
                                "type": "string",
                                "description": "RADIUS guest VLAN name."
                              }
                            },
                            "description": "Guest VLAN settings. Used to direct traffic to a guest VLAN when none of the RADIUS servers are reachable or a client receives access-reject from the RADIUS server."
                          }
                        },
                        "description": "RADIUS settings. This param is only valid when authMode is 'open-with-radius' and ipAssignmentMode is not 'NAT mode'."
                      }
                    },
                    "description": "Named VLAN settings."
                  }
                },
                "example": {
                  "name": "My SSID",
                  "enabled": true,
                  "authMode": "8021x-radius",
                  "enterpriseAdminAccess": "access enabled",
                  "encryptionMode": "wpa",
                  "psk": "deadbeef",
                  "wpaEncryptionMode": "WPA2 only",
                  "dot11w": {
                    "enabled": true,
                    "required": false
                  },
                  "dot11r": {
                    "enabled": true,
                    "adaptive": true
                  },
                  "splashPage": "Click-through splash page",
                  "splashGuestSponsorDomains": [
                    "example.com"
                  ],
                  "oauth": {
                    "allowedDomains": [
                      "example.com"
                    ]
                  },
                  "localRadius": {
                    "cacheTimeout": 60,
                    "passwordAuthentication": {
                      "enabled": false
                    },
                    "certificateAuthentication": {
                      "enabled": true,
                      "useLdap": false,
                      "useOcsp": true,
                      "ocspResponderUrl": "http://ocsp-server.example.com",
                      "clientRootCaCertificate": {
                        "contents": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                      }
                    }
                  },
                  "ldap": {
                    "servers": [
                      {
                        "host": "127.0.0.1",
                        "port": 389
                      }
                    ],
                    "credentials": {
                      "distinguishedName": "cn=user,dc=example,dc=com",
                      "password": "password"
                    },
                    "baseDistinguishedName": "dc=example,dc=com",
                    "serverCaCertificate": {
                      "contents": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  },
                  "activeDirectory": {
                    "servers": [
                      {
                        "host": "127.0.0.1",
                        "port": 3268
                      }
                    ],
                    "credentials": {
                      "logonName": "user",
                      "password": "password"
                    }
                  },
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "secret": "secret-string",
                      "radsecEnabled": true,
                      "openRoamingCertificateId": 2,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusProxyEnabled": false,
                  "radiusTestingEnabled": true,
                  "radiusCalledStationId": "00-11-22-33-44-55:AP1",
                  "radiusAuthenticationNasId": "00-11-22-33-44-55:AP1",
                  "radiusServerTimeout": 5,
                  "radiusServerAttemptsLimit": 5,
                  "radiusFallbackEnabled": true,
                  "radiusRadsec": {
                    "tlsTunnel": {
                      "timeout": 600
                    }
                  },
                  "radiusCoaEnabled": true,
                  "radiusFailoverPolicy": "Deny access",
                  "radiusLoadBalancingPolicy": "Round robin",
                  "radiusAccountingEnabled": true,
                  "radiusAccountingServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "secret": "secret-string",
                      "radsecEnabled": true,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusAccountingInterimInterval": 5,
                  "radiusAttributeForGroupPolicies": "Filter-Id",
                  "ipAssignmentMode": "NAT mode",
                  "useVlanTagging": false,
                  "concentratorNetworkId": "N_24329156",
                  "secondaryConcentratorNetworkId": "disabled",
                  "disassociateClientsOnVpnFailover": false,
                  "vlanId": 10,
                  "defaultVlanId": 1,
                  "apTagsAndVlanIds": [
                    {
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "vlanId": 100
                    }
                  ],
                  "walledGardenEnabled": true,
                  "walledGardenRanges": [
                    "example.com",
                    "1.1.1.1/32"
                  ],
                  "gre": {
                    "concentrator": {
                      "host": "192.168.1.1"
                    },
                    "key": 5
                  },
                  "radiusOverride": false,
                  "radiusGuestVlanEnabled": true,
                  "radiusGuestVlanId": 1,
                  "minBitrate": 5.5,
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0,
                  "perSsidBandwidthLimitUp": 0,
                  "perSsidBandwidthLimitDown": 0,
                  "lanIsolationEnabled": true,
                  "visible": true,
                  "availableOnAllAps": false,
                  "availabilityTags": [
                    "tag1",
                    "tag2"
                  ],
                  "adaptivePolicyGroupId": "1234",
                  "mandatoryDhcpEnabled": false,
                  "adultContentFilteringEnabled": false,
                  "dnsRewrite": {
                    "enabled": true,
                    "dnsCustomNameservers": [
                      "8.8.8.8",
                      "8.8.4.4"
                    ]
                  },
                  "speedBurst": {
                    "enabled": true
                  },
                  "namedVlans": {
                    "tagging": {
                      "enabled": true,
                      "defaultVlanName": "My VLAN",
                      "byApTags": [
                        {
                          "tags": [
                            "tag1",
                            "tag2"
                          ],
                          "vlanName": "My VLAN"
                        }
                      ]
                    },
                    "radius": {
                      "guestVlan": {
                        "enabled": true,
                        "name": "Guest VLAN"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Unique identifier of the SSID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the SSID"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether or not the SSID is enabled"
                    },
                    "splashPage": {
                      "type": "string",
                      "enum": [
                        "Billing",
                        "Cisco ISE",
                        "Click-through splash page",
                        "Facebook Wi-Fi",
                        "Google Apps domain",
                        "Google OAuth",
                        "Microsoft Entra ID",
                        "None",
                        "Password-protected with Active Directory",
                        "Password-protected with LDAP",
                        "Password-protected with Meraki RADIUS",
                        "Password-protected with custom RADIUS",
                        "SMS authentication",
                        "Sponsored guest",
                        "Systems Manager Sentry"
                      ],
                      "description": "The type of splash page for the SSID"
                    },
                    "ssidAdminAccessible": {
                      "type": "boolean",
                      "description": "SSID Administrator access status"
                    },
                    "localAuth": {
                      "type": "boolean",
                      "description": "Extended local auth flag for Enterprise NAC"
                    },
                    "authMode": {
                      "type": "string",
                      "enum": [
                        "8021x-entra",
                        "8021x-google",
                        "8021x-localradius",
                        "8021x-meraki",
                        "8021x-nac",
                        "8021x-radius",
                        "ipsk-with-nac",
                        "ipsk-with-radius",
                        "ipsk-with-radius-easy-psk",
                        "ipsk-without-radius",
                        "open",
                        "open-enhanced",
                        "open-with-nac",
                        "open-with-radius",
                        "psk"
                      ],
                      "description": "The association control method for the SSID"
                    },
                    "encryptionMode": {
                      "type": "string",
                      "enum": [
                        "wep",
                        "wpa"
                      ],
                      "description": "The psk encryption mode for the SSID"
                    },
                    "wpaEncryptionMode": {
                      "type": "string",
                      "enum": [
                        "WPA1 and WPA2",
                        "WPA1 only",
                        "WPA2 only",
                        "WPA3 192-bit Security",
                        "WPA3 Transition Mode",
                        "WPA3 only"
                      ],
                      "description": "The types of WPA encryption"
                    },
                    "radiusServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "IP address (or FQDN) of your RADIUS server"
                          },
                          "port": {
                            "type": "integer",
                            "description": "UDP port the RADIUS server listens on for Access-requests"
                          },
                          "openRoamingCertificateId": {
                            "type": "integer",
                            "description": "The ID of the Openroaming Certificate attached to radius server"
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Certificate used for authorization for the RADSEC Server"
                          }
                        }
                      },
                      "description": "List of RADIUS 802.1X servers to be used for authentication"
                    },
                    "radiusAccountingServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "IP address (or FQDN) to which the APs will send RADIUS accounting messages"
                          },
                          "port": {
                            "type": "integer",
                            "description": "Port on the RADIUS server that is listening for accounting messages"
                          },
                          "openRoamingCertificateId": {
                            "type": "integer",
                            "description": "The ID of the Openroaming Certificate attached to radius server"
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Certificate used for authorization for the RADSEC Server"
                          }
                        }
                      },
                      "description": "List of RADIUS accounting 802.1X servers to be used for authentication"
                    },
                    "radiusAccountingEnabled": {
                      "type": "boolean",
                      "description": "Whether or not RADIUS accounting is enabled"
                    },
                    "radiusEnabled": {
                      "type": "boolean",
                      "description": "Whether RADIUS authentication is enabled"
                    },
                    "radiusAttributeForGroupPolicies": {
                      "type": "string",
                      "enum": [
                        "Airespace-ACL-Name",
                        "Aruba-User-Role",
                        "Filter-Id",
                        "Reply-Message"
                      ],
                      "description": "RADIUS attribute used to look up group policies"
                    },
                    "radiusFailoverPolicy": {
                      "type": "string",
                      "enum": [
                        "Allow access",
                        "Deny access"
                      ],
                      "description": "Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable"
                    },
                    "radiusLoadBalancingPolicy": {
                      "type": "string",
                      "enum": [
                        "Round robin",
                        "Strict priority order"
                      ],
                      "description": "Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts"
                    },
                    "ipAssignmentMode": {
                      "type": "string",
                      "enum": [
                        "Bridge mode",
                        "Ethernet over GRE",
                        "Layer 3 roaming",
                        "Layer 3 roaming with a concentrator",
                        "NAT mode",
                        "VPN"
                      ],
                      "description": "The client IP assignment mode"
                    },
                    "adminSplashUrl": {
                      "type": "string",
                      "description": "URL for the admin splash page"
                    },
                    "splashTimeout": {
                      "type": "string",
                      "description": "Splash page timeout"
                    },
                    "walledGardenEnabled": {
                      "type": "boolean",
                      "description": "Allow users to access a configurable list of IP ranges prior to sign-on"
                    },
                    "walledGardenRanges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Domain names and IP address ranges available in Walled Garden mode"
                    },
                    "minBitrate": {
                      "type": "integer",
                      "description": "The minimum bitrate in Mbps of this SSID in the default indoor RF profile"
                    },
                    "bandSelection": {
                      "type": "string",
                      "enum": [
                        "5 GHz band only",
                        "Dual band operation",
                        "Dual band operation with Band Steering"
                      ],
                      "description": "The client-serving radio frequencies of this SSID in the default indoor RF profile"
                    },
                    "perClientBandwidthLimitUp": {
                      "type": "integer",
                      "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "perClientBandwidthLimitDown": {
                      "type": "integer",
                      "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Whether the SSID is advertised or hidden by the AP"
                    },
                    "availableOnAllAps": {
                      "type": "boolean",
                      "description": "Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags"
                    },
                    "availabilityTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list"
                    },
                    "perSsidBandwidthLimitUp": {
                      "type": "integer",
                      "description": "The total upload bandwidth limit in Kbps (0 represents no limit)"
                    },
                    "perSsidBandwidthLimitDown": {
                      "type": "integer",
                      "description": "The total download bandwidth limit in Kbps (0 represents no limit)"
                    },
                    "mandatoryDhcpEnabled": {
                      "type": "boolean",
                      "description": "Whether clients connecting to this SSID must use the IP address assigned by the DHCP server"
                    }
                  }
                },
                "example": {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "localAuth": false,
                  "authMode": "8021x-radius",
                  "encryptionMode": "wpa",
                  "wpaEncryptionMode": "WPA2 only",
                  "radiusServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "openRoamingCertificateId": 2,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusAccountingServers": [
                    {
                      "host": "0.0.0.0",
                      "port": 3000,
                      "openRoamingCertificateId": 2,
                      "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\nwTw70BVktzJnb0VLeDg=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "radiusAccountingEnabled": false,
                  "radiusEnabled": true,
                  "radiusAttributeForGroupPolicies": "Filter-Id",
                  "radiusFailoverPolicy": "Deny access",
                  "radiusLoadBalancingPolicy": "Round robin",
                  "ipAssignmentMode": "NAT mode",
                  "adminSplashUrl": "http://example.com",
                  "splashTimeout": "30 minutes",
                  "walledGardenEnabled": true,
                  "walledGardenRanges": [
                    "example.com",
                    "1.1.1.1/32"
                  ],
                  "minBitrate": 11,
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0,
                  "visible": true,
                  "availableOnAllAps": false,
                  "availabilityTags": [
                    "tag1",
                    "tag2"
                  ],
                  "perSsidBandwidthLimitUp": 0,
                  "perSsidBandwidthLimitDown": 0,
                  "mandatoryDhcpEnabled": false
                }
              }
            }
          }
        },
        "summary": "Update the attributes of an MR SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding": {
      "get": {
        "description": "List the Bonjour forwarding setting and rules for the SSID",
        "operationId": "getNetworkWirelessSsidBonjourForwarding",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If true, Bonjour forwarding is enabled on the SSID."
                    },
                    "exception": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together."
                        }
                      },
                      "description": "Bonjour forwarding exception"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Desctiption of the bonjour forwarding rule"
                          },
                          "vlanId": {
                            "type": "string",
                            "description": "The ID of the service VLAN. Required"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "AFP",
                                "AirPlay",
                                "All Services",
                                "Apple screen share",
                                "BitTorrent",
                                "Chromecast",
                                "FTP",
                                "Printers",
                                "SSH",
                                "Samba",
                                "Scanners",
                                "Spotify",
                                "iChat",
                                "iTunes"
                              ]
                            },
                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AFP', 'AirPlay', 'Apple screen share', 'BitTorrent', 'Chromecast', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners', 'Spotify' and 'SSH'"
                          }
                        }
                      },
                      "description": "Bonjour forwarding rules"
                    }
                  }
                },
                "example": {
                  "enabled": true,
                  "exception": {
                    "enabled": true
                  },
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List the Bonjour forwarding setting and rules for the SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "bonjourForwarding"
        ]
      },
      "put": {
        "description": "Update the bonjour forwarding setting and rules for the SSID",
        "operationId": "updateNetworkWirelessSsidBonjourForwarding",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "If true, Bonjour forwarding is enabled on this SSID."
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "A description for your Bonjour forwarding rule. Optional."
                        },
                        "vlanId": {
                          "type": "string",
                          "description": "The ID of the service VLAN. Required."
                        },
                        "services": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "AFP",
                              "AirPlay",
                              "All Services",
                              "Apple screen share",
                              "BitTorrent",
                              "Chromecast",
                              "FTP",
                              "Printers",
                              "SSH",
                              "Samba",
                              "Scanners",
                              "Spotify",
                              "iChat",
                              "iTunes"
                            ]
                          },
                          "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AFP', 'AirPlay', 'Apple screen share', 'BitTorrent', 'Chromecast', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners', 'Spotify' and 'SSH'"
                        }
                      },
                      "required": [
                        "vlanId",
                        "services"
                      ]
                    },
                    "description": "List of bonjour forwarding rules."
                  },
                  "exception": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together."
                      }
                    },
                    "description": "Bonjour forwarding exception"
                  }
                },
                "example": {
                  "enabled": true,
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ],
                  "exception": {
                    "enabled": true
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If true, Bonjour forwarding is enabled on the SSID."
                    },
                    "exception": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together."
                        }
                      },
                      "description": "Bonjour forwarding exception"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Desctiption of the bonjour forwarding rule"
                          },
                          "vlanId": {
                            "type": "string",
                            "description": "The ID of the service VLAN. Required"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "AFP",
                                "AirPlay",
                                "All Services",
                                "Apple screen share",
                                "BitTorrent",
                                "Chromecast",
                                "FTP",
                                "Printers",
                                "SSH",
                                "Samba",
                                "Scanners",
                                "Spotify",
                                "iChat",
                                "iTunes"
                              ]
                            },
                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AFP', 'AirPlay', 'Apple screen share', 'BitTorrent', 'Chromecast', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners', 'Spotify' and 'SSH'"
                          }
                        }
                      },
                      "description": "Bonjour forwarding rules"
                    }
                  }
                },
                "example": {
                  "enabled": true,
                  "exception": {
                    "enabled": true
                  },
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the bonjour forwarding setting and rules for the SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "bonjourForwarding"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies": {
      "get": {
        "description": "List the device type group policies for the SSID",
        "operationId": "getNetworkWirelessSsidDeviceTypeGroupPolicies",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": true,
                  "deviceTypePolicies": [
                    {
                      "deviceType": "Android",
                      "devicePolicy": "Allowed"
                    },
                    {
                      "deviceType": "iPhone",
                      "devicePolicy": "Group policy",
                      "groupPolicyId": 101
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List the device type group policies for the SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "deviceTypeGroupPolicies"
        ]
      },
      "put": {
        "description": "Update the device type group policies for the SSID",
        "operationId": "updateNetworkWirelessSsidDeviceTypeGroupPolicies",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "If true, the SSID device type group policies are enabled."
                  },
                  "deviceTypePolicies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deviceType": {
                          "type": "string",
                          "enum": [
                            "Android",
                            "B&N Nook",
                            "BlackBerry",
                            "Chrome OS",
                            "Mac OS X",
                            "Other OS",
                            "Windows",
                            "Windows Phone",
                            "iPad",
                            "iPhone",
                            "iPod"
                          ],
                          "description": "The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'"
                        },
                        "devicePolicy": {
                          "type": "string",
                          "enum": [
                            "Allowed",
                            "Blocked",
                            "Group policy"
                          ],
                          "description": "The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'"
                        },
                        "groupPolicyId": {
                          "type": "integer",
                          "description": "ID of the group policy object."
                        }
                      },
                      "required": [
                        "deviceType",
                        "devicePolicy"
                      ]
                    },
                    "description": "List of device type policies."
                  }
                },
                "example": {
                  "enabled": true,
                  "deviceTypePolicies": [
                    {
                      "deviceType": "Android",
                      "devicePolicy": "Allowed"
                    },
                    {
                      "deviceType": "iPhone",
                      "devicePolicy": "Group policy",
                      "groupPolicyId": 101
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": true,
                  "deviceTypePolicies": [
                    {
                      "deviceType": "Android",
                      "devicePolicy": "Allowed"
                    },
                    {
                      "deviceType": "iPhone",
                      "devicePolicy": "Group policy",
                      "groupPolicyId": 101
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update the device type group policies for the SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "deviceTypeGroupPolicies"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids/{number}/eapOverride": {
      "get": {
        "description": "Return the EAP overridden parameters for an SSID",
        "operationId": "getNetworkWirelessSsidEapOverride",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timeout": {
                      "type": "integer",
                      "description": "General EAP timeout in seconds."
                    },
                    "maxRetries": {
                      "type": "integer",
                      "description": "Maximum number of general EAP retries."
                    },
                    "identity": {
                      "type": "object",
                      "properties": {
                        "retries": {
                          "type": "integer",
                          "description": "Maximum number of EAP retries."
                        },
                        "timeout": {
                          "type": "integer",
                          "description": "EAP timeout in seconds."
                        }
                      },
                      "description": "EAP settings for identity requests."
                    },
                    "eapolKey": {
                      "type": "object",
                      "properties": {
                        "retries": {
                          "type": "integer",
                          "description": "Maximum number of EAPOL key retries."
                        },
                        "timeoutInMs": {
                          "type": "integer",
                          "description": "EAPOL Key timeout in milliseconds."
                        }
                      },
                      "description": "EAPOL Key settings."
                    }
                  }
                },
                "example": {
                  "timeout": 50,
                  "maxRetries": 5,
                  "identity": {
                    "retries": 5,
                    "timeout": 50
                  },
                  "eapolKey": {
                    "retries": 50,
                    "timeoutInMs": 5000
                  }
                }
              }
            }
          }
        },
        "summary": "Return the EAP overridden parameters for an SSID",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "eapOverride"
        ]
      },
      "put": {
        "description": "Update the EAP overridden parameters for an SSID.",
        "operationId": "updateNetworkWirelessSsidEapOverride",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "description": "General EAP timeout in seconds."
                  },
                  "identity": {
                    "type": "object",
                    "properties": {
                      "retries": {
                        "type": "integer",
                        "description": "Maximum number of EAP retries."
                      },
                      "timeout": {
                        "type": "integer",
                        "description": "EAP timeout in seconds."
                      }
                    },
                    "description": "EAP settings for identity requests."
                  },
                  "maxRetries": {
                    "type": "integer",
                    "description": "Maximum number of general EAP retries."
                  },
                  "eapolKey": {
                    "type": "object",
                    "properties": {
                      "retries": {
                        "type": "integer",
                        "description": "Maximum number of EAPOL key retries."
                      },
                      "timeoutInMs": {
                        "type": "integer",
                        "description": "EAPOL Key timeout in milliseconds."
                      }
                    },
                    "description": "EAPOL Key settings."
                  }
                },
                "example": {
                  "timeout": 5,
                  "identity": {
                    "retries": 5,
                    "timeout": 5
                  },
                  "maxRetries": 5,
                  "eapolKey": {
                    "retries": 5,
                    "timeoutInMs": 5000
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timeout": {
                      "type": "integer",
                      "description": "General EAP timeout in seconds."
                    },
                    "maxRetries": {
                      "type": "integer",
                      "description": "Maximum number of general EAP retries."
                    },
                    "identity": {
                      "type": "object",
                      "properties": {
                        "retries": {
                          "type": "integer",
                          "description": "Maximum number of EAP retries."
                        },
                        "timeout": {
                          "type": "integer",
                          "description": "EAP timeout in seconds."
                        }
                      },
                      "description": "EAP settings for identity requests."
                    },
                    "eapolKey": {
                      "type": "object",
                      "properties": {
                        "retries": {
                          "type": "integer",
                          "description": "Maximum number of EAPOL key retries."
                        },
                        "timeoutInMs": {
                          "type": "integer",
                          "description": "EAPOL Key timeout in milliseconds."
                        }
                      },
                      "description": "EAPOL Key settings."
                    }
                  }
                },
                "example": {
                  "timeout": 50,
                  "maxRetries": 5,
                  "identity": {
                    "retries": 5,
                    "timeout": 50
                  },
                  "eapolKey": {
                    "retries": 50,
                    "timeoutInMs": 5000
                  }
                }
              }
            }
          }
        },
        "summary": "Update the EAP overridden parameters for an SSID.",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "eapOverride"
        ]
      }
    },
    "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules": {
      "get": {
        "description": "Return the L3 firewall rules for an SSID on an MR network",
        "operationId": "getNetworkWirelessSsidFirewallL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "any",
                              "icmp",
                              "icmp6",
                              "tcp",
                              "udp"
                            ],
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          }
                        },
                        "required": [
                          "policy",
                          "protocol",
                          "destCidr"
                        ]
                      },
                      "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)."
                    },
                    "allowLanAccess": {
                      "type": "boolean",
                      "description": "Allows wireless client access to local LAN (boolean value - true allows access and false denies access)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "allowLanAccess": false
                }
              }
            }
          }
        },
        "summary": "Return the L3 firewall rules for an SSID on an MR network",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "l3FirewallRules"
        ]
      },
      "put": {
        "description": "Update the L3 firewall rules of an SSID on an MR network",
        "operationId": "updateNetworkWirelessSsidFirewallL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Network ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "description": "Number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "Description of the rule (optional)"
                        },
                        "policy": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "description": "'allow' or 'deny' traffic specified by this rule"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "any",
                            "icmp",
                            "icmp6",
                            "tcp",
                            "udp"
                          ],
                          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                        },
                        "destPort": {
                          "type": "string",
                          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                        },
                        "destCidr": {
                          "type": "string",
                          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                        }
                      },
                      "required": [
                        "policy",
                        "protocol",
                        "destCidr"
                      ]
                    },
                    "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)."
                  },
                  "allowLanAccess": {
                    "type": "boolean",
                    "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)"
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "allowLanAccess": true
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "any",
                              "icmp",
                              "icmp6",
                              "tcp",
                              "udp"
                            ],
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                          }
                        },
                        "required": [
                          "policy",
                          "protocol",
                          "destCidr"
                        ]
                      },
                      "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)."
                    },
                    "allowLanAccess": {
                      "type": "boolean",
                      "description": "Allows wireless client access to local LAN (boolean value - true allows access and false denies access)"
                    }
                  }
                },
                "example": {
                  "rules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": "443",
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "allowLanAccess": false
                }
              }
            }
          }
        },
        "summary": "Update the L3 firewall rules of an SSID on an MR network",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "l3FirewallRules"
        ]
      }
    },
    "/organizations/{organizationId}/summary/top/ssids/byUsage": {
      "get": {
        "description": "Return metrics for organization's top 10 ssids by data usage over given time range. Default unit is megabytes.",
        "operationId": "getOrganizationSummaryTopSsidsByUsage",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "networkTag",
            "in": "query",
            "description": "Match result to an exact network tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceTag",
            "in": "query",
            "description": "Match result to an exact device tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Set number of desired results to return. Default is 10.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ssidName",
            "in": "query",
            "description": "Filter results by ssid name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usageUplink",
            "in": "query",
            "description": "Filter results by usage uplink",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 186 days. The default is 1 day.",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 28800,
              "maximum": 16070400
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the SSID"
                      },
                      "usage": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "number",
                            "format": "float",
                            "description": "Total usage of the SSID"
                          },
                          "downstream": {
                            "type": "number",
                            "format": "float",
                            "description": "Downstream usage of the SSID"
                          },
                          "upstream": {
                            "type": "number",
                            "format": "float",
                            "description": "Upstream usage of the SSID"
                          },
                          "percentage": {
                            "type": "number",
                            "format": "float",
                            "description": "Percentage usage of the SSID"
                          }
                        },
                        "description": "Date usage of the SSID, in megabytes"
                      },
                      "clients": {
                        "type": "object",
                        "properties": {
                          "counts": {
                            "type": "object",
                            "properties": {
                              "total": {
                                "type": "integer",
                                "description": "Total counts of the clients"
                              }
                            },
                            "description": "Counts of the clients"
                          }
                        },
                        "description": "Clients info of the SSID"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "My SSID",
                    "usage": {
                      "total": 18000.0,
                      "downstream": 10000.0,
                      "upstream": 8000.0,
                      "percentage": 80.223456789
                    },
                    "clients": {
                      "counts": {
                        "total": 4
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "Return metrics for organization's top 10 ssids by data usage over given time range",
        "tags": [
          "organizations",
          "monitor",
          "summary",
          "top",
          "ssids",
          "byUsage"
        ]
      }
    },
    "/organizations/{organizationId}/wireless/ssids/firewall/isolation/allowlist/entries": {
      "get": {
        "description": "List the L2 isolation allow list MAC entry in an organization",
        "operationId": "getOrganizationWirelessSsidsFirewallIsolationAllowlistEntries",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkIds",
            "in": "query",
            "description": "networkIds array to filter out results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ssids",
            "in": "query",
            "description": "ssids number array to filter out results",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entryId": {
                            "type": "string",
                            "description": "The id of entry"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Created at timestamp for the adaptive policy group"
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "description": "Updated at timestamp for the adaptive policy group"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of mac address"
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "mac": {
                                "type": "string",
                                "description": "L2 Isolation mac address"
                              }
                            },
                            "required": [
                              "mac"
                            ],
                            "description": "The client of allowlist"
                          },
                          "ssid": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The index of SSID"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of SSID"
                              },
                              "number": {
                                "type": "integer",
                                "description": "The number of SSID"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "description": "The SSID that allowlist belongs to"
                          },
                          "network": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The index of network"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of network"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "description": "The network that allowlist SSID belongs to"
                          }
                        },
                        "required": [
                          "entryId"
                        ]
                      },
                      "description": "L2 isolation allowlist items"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "counts": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "description": "The total number of items in the dataset"
                                },
                                "remaining": {
                                  "type": "integer",
                                  "description": "The number of items in the dataset that are available on subsequent pages"
                                }
                              },
                              "description": "Counts relating to the paginated items"
                            }
                          },
                          "description": "Counts relating to the paginated dataset"
                        }
                      },
                      "description": "Metadata relevant to the paginated dataset"
                    }
                  }
                },
                "example": {
                  "items": [
                    {
                      "entryId": "1",
                      "createdAt": "2024-11-11T07:16:38Z",
                      "lastUpdatedAt": "2024-11-11T07:16:38Z",
                      "description": "Example mac address",
                      "client": {
                        "mac": "A1:B2:C3:D4:E5:F6"
                      },
                      "ssid": {
                        "id": "5",
                        "name": "Test SSID",
                        "number": 2
                      },
                      "network": {
                        "id": "N_123",
                        "name": "Test network"
                      }
                    }
                  ],
                  "meta": {
                    "counts": {
                      "items": {
                        "total": 1,
                        "remaining": 0
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            }
          }
        },
        "summary": "List the L2 isolation allow list MAC entry in an organization",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "isolation",
          "allowlist",
          "entries"
        ]
      },
      "post": {
        "description": "Create isolation allow list MAC entry for this organization",
        "operationId": "createOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of mac address"
                  },
                  "client": {
                    "type": "object",
                    "properties": {
                      "mac": {
                        "type": "string",
                        "description": "L2 Isolation mac address"
                      }
                    },
                    "description": "The client of allowlist"
                  },
                  "ssid": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "integer",
                        "description": "The number of SSID"
                      }
                    },
                    "description": "The SSID that allowlist belongs to"
                  },
                  "network": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of network"
                      }
                    },
                    "description": "The Network that allowlist belongs to"
                  }
                },
                "example": {
                  "description": "Example mac address",
                  "client": {
                    "mac": "A1:B2:C3:D4:E5:F6"
                  },
                  "ssid": {
                    "number": 2
                  },
                  "network": {
                    "id": "N_123"
                  }
                },
                "required": [
                  "client",
                  "ssid",
                  "network"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entryId": {
                      "type": "string",
                      "description": "The id of entry"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Created at timestamp for the adaptive policy group"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "description": "Updated at timestamp for the adaptive policy group"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of mac address"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "mac": {
                          "type": "string",
                          "description": "L2 Isolation mac address"
                        }
                      },
                      "required": [
                        "mac"
                      ],
                      "description": "The client of allowlist"
                    },
                    "ssid": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The index of SSID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of SSID"
                        },
                        "number": {
                          "type": "integer",
                          "description": "The number of SSID"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "The SSID that allowlist belongs to"
                    },
                    "network": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The index of network"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of network"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "The network that allowlist SSID belongs to"
                    }
                  },
                  "required": [
                    "entryId"
                  ]
                },
                "example": {
                  "entryId": "1",
                  "createdAt": "2024-11-11T07:16:38Z",
                  "lastUpdatedAt": "2024-11-11T07:16:38Z",
                  "description": "Example mac address",
                  "client": {
                    "mac": "A1:B2:C3:D4:E5:F6"
                  },
                  "ssid": {
                    "id": "5",
                    "name": "Test SSID",
                    "number": 2
                  },
                  "network": {
                    "id": "N_123",
                    "name": "Test network"
                  }
                }
              }
            }
          }
        },
        "summary": "Create isolation allow list MAC entry for this organization",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "isolation",
          "allowlist",
          "entries"
        ]
      }
    },
    "/organizations/{organizationId}/wireless/ssids/firewall/isolation/allowlist/entries/{entryId}": {
      "delete": {
        "description": "Destroy isolation allow list MAC entry for this organization",
        "operationId": "deleteOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Destroy isolation allow list MAC entry for this organization",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "isolation",
          "allowlist",
          "entries"
        ]
      },
      "put": {
        "description": "Update isolation allow list MAC entry info",
        "operationId": "updateOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of mac address"
                  },
                  "client": {
                    "type": "object",
                    "properties": {
                      "mac": {
                        "type": "string",
                        "description": "L2 Isolation mac address"
                      }
                    },
                    "description": "The client of allowlist"
                  }
                },
                "example": {
                  "description": "Example mac address",
                  "client": {
                    "mac": "A1:B2:C3:D4:E5:F6"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entryId": {
                      "type": "string",
                      "description": "The id of entry"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Created at timestamp for the adaptive policy group"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "description": "Updated at timestamp for the adaptive policy group"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of mac address"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "mac": {
                          "type": "string",
                          "description": "L2 Isolation mac address"
                        }
                      },
                      "required": [
                        "mac"
                      ],
                      "description": "The client of allowlist"
                    },
                    "ssid": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The index of SSID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of SSID"
                        },
                        "number": {
                          "type": "integer",
                          "description": "The number of SSID"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "The SSID that allowlist belongs to"
                    },
                    "network": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The index of network"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of network"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "The network that allowlist SSID belongs to"
                    }
                  },
                  "required": [
                    "entryId"
                  ]
                },
                "example": {
                  "entryId": "1",
                  "createdAt": "2024-11-11T07:16:38Z",
                  "lastUpdatedAt": "2024-11-11T07:16:38Z",
                  "description": "Example mac address",
                  "client": {
                    "mac": "A1:B2:C3:D4:E5:F6"
                  },
                  "ssid": {
                    "id": "5",
                    "name": "Test SSID",
                    "number": 2
                  },
                  "network": {
                    "id": "N_123",
                    "name": "Test network"
                  }
                }
              }
            }
          }
        },
        "summary": "Update isolation allow list MAC entry info",
        "tags": [
          "wireless",
          "configure",
          "ssids",
          "firewall",
          "isolation",
          "allowlist",
          "entries"
        ]
      }
    },
    "/organizations/{organizationId}/wireless/ssids/statuses/byDevice": {
      "get": {
        "description": "List status information of all BSSIDs in your organization",
        "operationId": "getOrganizationWirelessSsidsStatusesByDevice",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "networkIds",
            "in": "query",
            "description": "Optional parameter to filter the result set by the included set of network IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "serials",
            "in": "query",
            "description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "bssids",
            "in": "query",
            "description": "A list of BSSIDs. The returned devices will be filtered to only include these BSSIDs.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hideDisabled",
            "in": "query",
            "description": "If true, the returned devices will not include disabled SSIDs. (default: true)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "serial": {
                            "type": "string",
                            "description": "Unique serial number for device."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of device."
                          },
                          "network": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for network."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of network."
                              }
                            },
                            "description": "Group of devices and settings."
                          },
                          "basicServiceSets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "bssid": {
                                  "type": "string",
                                  "description": "Unique identifier for wireless access point."
                                },
                                "ssid": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of wireless network."
                                    },
                                    "number": {
                                      "type": "integer",
                                      "description": "Unique identifier for wireless network."
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Status of wireless network."
                                    },
                                    "advertised": {
                                      "type": "boolean",
                                      "description": "Availability of wireless network for devices to connect to."
                                    }
                                  },
                                  "description": "Wireless access point and network identifier."
                                },
                                "radio": {
                                  "type": "object",
                                  "properties": {
                                    "band": {
                                      "type": "string",
                                      "enum": [
                                        "2.4",
                                        "5",
                                        "6"
                                      ],
                                      "description": "Frequency range used for wireless communication."
                                    },
                                    "channel": {
                                      "type": "integer",
                                      "description": "Frequency channel used for wireless communication."
                                    },
                                    "channelWidth": {
                                      "type": "integer",
                                      "description": "Width of frequency channel used for wireless communication."
                                    },
                                    "power": {
                                      "type": "integer",
                                      "description": "Strength of wireless signal."
                                    },
                                    "isBroadcasting": {
                                      "type": "boolean",
                                      "description": "Indicates whether or not this radio is currently broadcasting."
                                    },
                                    "index": {
                                      "type": "string",
                                      "description": "The radio index."
                                    }
                                  },
                                  "description": "Wireless access point radio identifier."
                                }
                              }
                            },
                            "description": "Status information for wireless access points."
                          }
                        }
                      },
                      "description": "The top-level propery containing all status data."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "counts": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "description": "The total number of items."
                                },
                                "remaining": {
                                  "type": "integer",
                                  "description": "The number of items remaining based on current pagination location within the dataset."
                                }
                              },
                              "description": "The count metadata."
                            }
                          },
                          "description": "Count metadata related to this result set."
                        }
                      },
                      "description": "Other metadata related to this result set."
                    }
                  }
                },
                "example": {
                  "items": [
                    {
                      "serial": "QQ3A-QHWY-DQ2Z",
                      "name": "My AP",
                      "network": {
                        "id": "N_24329156",
                        "name": "Main Office"
                      },
                      "basicServiceSets": [
                        {
                          "bssid": "8A:15:04:00:00:00",
                          "ssid": {
                            "name": "My SSID",
                            "number": 0,
                            "enabled": true,
                            "advertised": true
                          },
                          "radio": {
                            "band": "2.4",
                            "channel": 11,
                            "channelWidth": 20,
                            "power": 18,
                            "isBroadcasting": true,
                            "index": "0"
                          }
                        }
                      ]
                    }
                  ],
                  "meta": {
                    "counts": {
                      "items": {
                        "total": 1738,
                        "remaining": 1238
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            }
          }
        },
        "summary": "List status information of all BSSIDs in your organization",
        "tags": [
          "wireless",
          "monitor",
          "ssids",
          "statuses",
          "byDevice"
        ]
      }
    }
  },
   "tags": [
    {
      "name": "organizations"
    },
    {
      "name": "networks"
    },
    {
      "name": "devices"
    },
    {
      "name": "insight"
    },
    {
      "name": "wireless"
    },
    {
      "name": "camera"
    },
    {
      "name": "appliance"
    },
    {
      "name": "switch"
    },
    {
      "name": "cellularGateway"
    },
    {
      "name": "sm"
    },
    {
      "name": "sensor"
    },
    {
      "name": "administered"
    },
    {
      "name": "campusGateway"
    },
    {
      "name": "wirelessController"
    },
    {
      "name": "spaces"
    },
    {
      "name": "accessControlLists"
    },
    {
      "name": "accessPolicies"
    },
    {
      "name": "accounts"
    },
    {
      "name": "acls"
    },
    {
      "name": "actionBatches"
    },
    {
      "name": "adaptivePolicy"
    },
    {
      "name": "addresses"
    },
    {
      "name": "admins"
    },
    {
      "name": "airMarshal"
    },
    {
      "name": "alertTypes"
    },
    {
      "name": "alerts"
    },
    {
      "name": "allowlist"
    },
    {
      "name": "alternateManagementInterface"
    },
    {
      "name": "analytics"
    },
    {
      "name": "api"
    },
    {
      "name": "apiRequests"
    },
    {
      "name": "apnsCert"
    },
    {
      "name": "appliances"
    },
    {
      "name": "applicationCategories"
    },
    {
      "name": "applicationUsage"
    },
    {
      "name": "applications"
    },
    {
      "name": "areas"
    },
    {
      "name": "arpInspection"
    },
    {
      "name": "arpTable"
    },
    {
      "name": "artifacts"
    },
    {
      "name": "assets"
    },
    {
      "name": "assignments"
    },
    {
      "name": "authenticationToken"
    },
    {
      "name": "authorities"
    },
    {
      "name": "autoLocate"
    },
    {
      "name": "autoRf"
    },
    {
      "name": "availabilities"
    },
    {
      "name": "bandwidthUsageHistory"
    },
    {
      "name": "bgp"
    },
    {
      "name": "billing"
    },
    {
      "name": "blink"
    },
    {
      "name": "bluetooth"
    },
    {
      "name": "bluetoothClients"
    },
    {
      "name": "bonjourForwarding"
    },
    {
      "name": "boundaries"
    },
    {
      "name": "brandingPolicies"
    },
    {
      "name": "bulk"
    },
    {
      "name": "bulkCreate"
    },
    {
      "name": "bulkDelete"
    },
    {
      "name": "bulkUpdate"
    },
    {
      "name": "byBoundary"
    },
    {
      "name": "byClient"
    },
    {
      "name": "byDevice"
    },
    {
      "name": "byEnergyUsage"
    },
    {
      "name": "byInterval"
    },
    {
      "name": "byMetric"
    },
    {
      "name": "byModel"
    },
    {
      "name": "byNetwork"
    },
    {
      "name": "byStatus"
    },
    {
      "name": "bySwitch"
    },
    {
      "name": "byType"
    },
    {
      "name": "byUsage"
    },
    {
      "name": "byUtilization"
    },
    {
      "name": "bypassActivationLockAttempts"
    },
    {
      "name": "cableTest"
    },
    {
      "name": "callbacks"
    },
    {
      "name": "captures"
    },
    {
      "name": "categories"
    },
    {
      "name": "cellular"
    },
    {
      "name": "cellularFirewallRules"
    },
    {
      "name": "cellularUsageHistory"
    },
    {
      "name": "certificates"
    },
    {
      "name": "certs"
    },
    {
      "name": "changeHistory"
    },
    {
      "name": "channelUtilization"
    },
    {
      "name": "channelUtilizationHistory"
    },
    {
      "name": "channels"
    },
    {
      "name": "claim"
    },
    {
      "name": "claimKey"
    },
    {
      "name": "clientCountHistory"
    },
    {
      "name": "clients"
    },
    {
      "name": "cloudMonitoring"
    },
    {
      "name": "clusters"
    },
    {
      "name": "commands"
    },
    {
      "name": "communicationPlans"
    },
    {
      "name": "compliance"
    },
    {
      "name": "configTemplates"
    },
    {
      "name": "configurationChanges"
    },
    {
      "name": "configure"
    },
    {
      "name": "configuredDevices"
    },
    {
      "name": "connectionStats"
    },
    {
      "name": "connections"
    },
    {
      "name": "connectivity"
    },
    {
      "name": "connectivityEvents"
    },
    {
      "name": "connectivityMonitoringDestinations"
    },
    {
      "name": "contentFiltering"
    },
    {
      "name": "controller"
    },
    {
      "name": "coterm"
    },
    {
      "name": "cpu"
    },
    {
      "name": "crls"
    },
    {
      "name": "current"
    },
    {
      "name": "customAnalytics"
    },
    {
      "name": "customPerformanceClasses"
    },
    {
      "name": "dataRateHistory"
    },
    {
      "name": "delegated"
    },
    {
      "name": "deltas"
    },
    {
      "name": "desktopLogs"
    },
    {
      "name": "details"
    },
    {
      "name": "detections"
    },
    {
      "name": "deviceCommandLogs"
    },
    {
      "name": "deviceProfiles"
    },
    {
      "name": "deviceTypeGroupPolicies"
    },
    {
      "name": "dhcp"
    },
    {
      "name": "dhcpServerPolicy"
    },
    {
      "name": "discovery"
    },
    {
      "name": "dns"
    },
    {
      "name": "downloadUrl"
    },
    {
      "name": "dscpTaggingOptions"
    },
    {
      "name": "dscpToCosMappings"
    },
    {
      "name": "eapOverride"
    },
    {
      "name": "earlyAccess"
    },
    {
      "name": "electronicShelfLabel"
    },
    {
      "name": "entitlements"
    },
    {
      "name": "entries"
    },
    {
      "name": "esims"
    },
    {
      "name": "ethernet"
    },
    {
      "name": "eventTypes"
    },
    {
      "name": "events"
    },
    {
      "name": "exportEvents"
    },
    {
      "name": "failedConnections"
    },
    {
      "name": "failover"
    },
    {
      "name": "features"
    },
    {
      "name": "fields"
    },
    {
      "name": "firewall"
    },
    {
      "name": "firewalledServices"
    },
    {
      "name": "firmware"
    },
    {
      "name": "firmwareUpgrades"
    },
    {
      "name": "floorPlans"
    },
    {
      "name": "groupPolicies"
    },
    {
      "name": "groups"
    },
    {
      "name": "health"
    },
    {
      "name": "healthByTime"
    },
    {
      "name": "historical"
    },
    {
      "name": "history"
    },
    {
      "name": "hotspot20"
    },
    {
      "name": "httpServers"
    },
    {
      "name": "identities"
    },
    {
      "name": "identityPsks"
    },
    {
      "name": "idps"
    },
    {
      "name": "imports"
    },
    {
      "name": "inboundCellularFirewallRules"
    },
    {
      "name": "inboundFirewallRules"
    },
    {
      "name": "integration"
    },
    {
      "name": "integrations"
    },
    {
      "name": "interfaces"
    },
    {
      "name": "internetPolicies"
    },
    {
      "name": "intrusion"
    },
    {
      "name": "inventory"
    },
    {
      "name": "ipsec"
    },
    {
      "name": "ipv6"
    },
    {
      "name": "isolation"
    },
    {
      "name": "jobs"
    },
    {
      "name": "keys"
    },
    {
      "name": "l2"
    },
    {
      "name": "l3"
    },
    {
      "name": "l3FirewallRules"
    },
    {
      "name": "l7FirewallRules"
    },
    {
      "name": "lan"
    },
    {
      "name": "latencyHistory"
    },
    {
      "name": "latencyStats"
    },
    {
      "name": "latest"
    },
    {
      "name": "leds"
    },
    {
      "name": "licenses"
    },
    {
      "name": "licensing"
    },
    {
      "name": "lines"
    },
    {
      "name": "linkAggregations"
    },
    {
      "name": "linkLayer"
    },
    {
      "name": "live"
    },
    {
      "name": "liveTools"
    },
    {
      "name": "lldpCdp"
    },
    {
      "name": "load"
    },
    {
      "name": "local"
    },
    {
      "name": "localOverrides"
    },
    {
      "name": "location"
    },
    {
      "name": "loginSecurity"
    },
    {
      "name": "logs"
    },
    {
      "name": "lossAndLatencyHistory"
    },
    {
      "name": "macTable"
    },
    {
      "name": "malware"
    },
    {
      "name": "managementInterface"
    },
    {
      "name": "manufacturers"
    },
    {
      "name": "me"
    },
    {
      "name": "memory"
    },
    {
      "name": "merakiAuthUsers"
    },
    {
      "name": "meshStatuses"
    },
    {
      "name": "migrations"
    },
    {
      "name": "mode"
    },
    {
      "name": "models"
    },
    {
      "name": "monitor"
    },
    {
      "name": "monitoredMediaServers"
    },
    {
      "name": "mqttBrokers"
    },
    {
      "name": "mtu"
    },
    {
      "name": "multicast"
    },
    {
      "name": "multicastForwarding"
    },
    {
      "name": "netflow"
    },
    {
      "name": "networkAdapters"
    },
    {
      "name": "networkHealth"
    },
    {
      "name": "objectDetectionModels"
    },
    {
      "name": "onboarding"
    },
    {
      "name": "oneToManyNatRules"
    },
    {
      "name": "oneToOneNatRules"
    },
    {
      "name": "openapiSpec"
    },
    {
      "name": "optIns"
    },
    {
      "name": "order"
    },
    {
      "name": "ospf"
    },
    {
      "name": "overview"
    },
    {
      "name": "packetCapture"
    },
    {
      "name": "packetLoss"
    },
    {
      "name": "packets"
    },
    {
      "name": "payloadTemplates"
    },
    {
      "name": "peers"
    },
    {
      "name": "performance"
    },
    {
      "name": "performanceHistory"
    },
    {
      "name": "permissions"
    },
    {
      "name": "pii"
    },
    {
      "name": "piiKeys"
    },
    {
      "name": "ping"
    },
    {
      "name": "pingDevice"
    },
    {
      "name": "policies"
    },
    {
      "name": "policy"
    },
    {
      "name": "policyObjects"
    },
    {
      "name": "portForwardingRules"
    },
    {
      "name": "portSchedules"
    },
    {
      "name": "ports"
    },
    {
      "name": "power"
    },
    {
      "name": "powerModules"
    },
    {
      "name": "prefixes"
    },
    {
      "name": "prepare"
    },
    {
      "name": "priorities"
    },
    {
      "name": "profiles"
    },
    {
      "name": "provisioning"
    },
    {
      "name": "qosRules"
    },
    {
      "name": "qualityAndRetention"
    },
    {
      "name": "qualityRetentionProfiles"
    },
    {
      "name": "radio"
    },
    {
      "name": "radsec"
    },
    {
      "name": "ratePlans"
    },
    {
      "name": "readings"
    },
    {
      "name": "receivers"
    },
    {
      "name": "recent"
    },
    {
      "name": "records"
    },
    {
      "name": "redundancy"
    },
    {
      "name": "relationships"
    },
    {
      "name": "rendezvousPoints"
    },
    {
      "name": "requests"
    },
    {
      "name": "responseCodes"
    },
    {
      "name": "restrictions"
    },
    {
      "name": "rfProfiles"
    },
    {
      "name": "roles"
    },
    {
      "name": "rollbacks"
    },
    {
      "name": "routing"
    },
    {
      "name": "rules"
    },
    {
      "name": "saml"
    },
    {
      "name": "samlRoles"
    },
    {
      "name": "scanning"
    },
    {
      "name": "schedules"
    },
    {
      "name": "sdwan"
    },
    {
      "name": "search"
    },
    {
      "name": "security"
    },
    {
      "name": "securityCenters"
    },
    {
      "name": "seen"
    },
    {
      "name": "sense"
    },
    {
      "name": "sentry"
    },
    {
      "name": "servers"
    },
    {
      "name": "serviceProviders"
    },
    {
      "name": "settings"
    },
    {
      "name": "signalQualityHistory"
    },
    {
      "name": "sims"
    },
    {
      "name": "singleLan"
    },
    {
      "name": "siteToSite"
    },
    {
      "name": "siteToSiteVpn"
    },
    {
      "name": "slas"
    },
    {
      "name": "smDevicesForKey"
    },
    {
      "name": "smOwnersForKey"
    },
    {
      "name": "snmp"
    },
    {
      "name": "softwares"
    },
    {
      "name": "splash"
    },
    {
      "name": "splashAuthorizationStatus"
    },
    {
      "name": "splashLoginAttempts"
    },
    {
      "name": "split"
    },
    {
      "name": "ssids"
    },
    {
      "name": "stacks"
    },
    {
      "name": "staged"
    },
    {
      "name": "stages"
    },
    {
      "name": "staticRoutes"
    },
    {
      "name": "statics"
    },
    {
      "name": "stats"
    },
    {
      "name": "status"
    },
    {
      "name": "statuses"
    },
    {
      "name": "stormControl"
    },
    {
      "name": "stp"
    },
    {
      "name": "subnetPool"
    },
    {
      "name": "subnets"
    },
    {
      "name": "subscription"
    },
    {
      "name": "subscriptions"
    },
    {
      "name": "summary"
    },
    {
      "name": "swap"
    },
    {
      "name": "swaps"
    },
    {
      "name": "switches"
    },
    {
      "name": "syslogServers"
    },
    {
      "name": "system"
    },
    {
      "name": "targetGroups"
    },
    {
      "name": "taxonomy"
    },
    {
      "name": "themes"
    },
    {
      "name": "thirdPartyVPNPeers"
    },
    {
      "name": "throughputTest"
    },
    {
      "name": "top"
    },
    {
      "name": "topology"
    },
    {
      "name": "traffic"
    },
    {
      "name": "trafficAnalysis"
    },
    {
      "name": "trafficHistory"
    },
    {
      "name": "trafficShaping"
    },
    {
      "name": "trustedAccessConfigs"
    },
    {
      "name": "trustedServers"
    },
    {
      "name": "types"
    },
    {
      "name": "upgrades"
    },
    {
      "name": "uplink"
    },
    {
      "name": "uplinkBandwidth"
    },
    {
      "name": "uplinkSelection"
    },
    {
      "name": "uplinks"
    },
    {
      "name": "uplinksLossAndLatency"
    },
    {
      "name": "usage"
    },
    {
      "name": "usageHistories"
    },
    {
      "name": "usageHistory"
    },
    {
      "name": "userAccessDevices"
    },
    {
      "name": "utilization"
    },
    {
      "name": "v4"
    },
    {
      "name": "video"
    },
    {
      "name": "videoLink"
    },
    {
      "name": "vlanAssignments"
    },
    {
      "name": "vlanProfiles"
    },
    {
      "name": "vlans"
    },
    {
      "name": "vmx"
    },
    {
      "name": "vpn"
    },
    {
      "name": "vpnExclusions"
    },
    {
      "name": "vpnFirewallRules"
    },
    {
      "name": "vppAccounts"
    },
    {
      "name": "wakeOnLan"
    },
    {
      "name": "warmSpare"
    },
    {
      "name": "warnings"
    },
    {
      "name": "webhookTests"
    },
    {
      "name": "webhooks"
    },
    {
      "name": "wirelessControllers"
    },
    {
      "name": "wirelessProfiles"
    },
    {
      "name": "wlanLists"
    },
    {
      "name": "xdr"
    },
    {
      "name": "zones"
    }
  ],
  "x-batchable-actions": [
    {
      "group": "",
      "summary": "Migrate devices to another controller or management mode",
      "resource": "/organizations/{organizationId}/devices/controller/migrations",
      "operation": "mr/actions/migrate"
    },
    {
      "group": "Adaptive policy",
      "summary": "Add an Adaptive Policy",
      "resource": "/organizations/{organizationId}/adaptivePolicy/policies",
      "operation": "create"
    },
    {
      "group": "Adaptive policy",
      "summary": "Delete an Adaptive Policy",
      "resource": "/organizations/{organizationId}/adaptivePolicy/policies/{id}",
      "operation": "destroy"
    },
    {
      "group": "Adaptive policy",
      "summary": "Update an Adaptive Policy",
      "resource": "/organizations/{organizationId}/adaptivePolicy/policies/{id}",
      "operation": "update"
    },
    {
      "group": "Adaptive policy group",
      "summary": "Creates a new adaptive policy group",
      "resource": "/organizations/{organizationId}/adaptivePolicy/groups",
      "operation": "create"
    },
    {
      "group": "Adaptive policy group",
      "summary": "Deletes the specified adaptive policy group and any associated policies and references",
      "resource": "/organizations/{organizationId}/adaptivePolicy/groups/{id}",
      "operation": "destroy"
    },
    {
      "group": "Adaptive policy group",
      "summary": "Updates an adaptive policy group. If updating \"Infrastructure\", only the SGT is allowed. Cannot update \"Unknown\".",
      "resource": "/organizations/{organizationId}/adaptivePolicy/groups/{id}",
      "operation": "update"
    },
    {
      "group": "Adaptive policy settings",
      "summary": "Update global adaptive policy settings",
      "resource": "/organizations/{organizationId}/adaptivePolicy/settings",
      "operation": "update"
    },
    {
      "group": "Alternate management interface",
      "summary": "Update the switch alternate management interface for the network",
      "resource": "/networks/{networkId}/switch/alternateManagementInterface",
      "operation": "update"
    },
    {
      "group": "Appliance radio settings",
      "summary": "Update the radio settings of an appliance",
      "resource": "/devices/{serial}/appliance/radio/settings",
      "operation": "update"
    },
    {
      "group": "Appliance ssid",
      "summary": "Update the attributes of an MX SSID",
      "resource": "/networks/{networkId}/appliance/ssids/{number}",
      "operation": "update"
    },
    {
      "group": "Appliance/actions/firewall/multicast forwarding",
      "summary": "Update static multicast forward rules for a network",
      "resource": "/networks/{networkId}/appliance/firewall/multicastForwarding",
      "operation": "update"
    },
    {
      "group": "Billing",
      "summary": "Update the billing settings",
      "resource": "/networks/{networkId}/wireless/billing",
      "operation": "update"
    },
    {
      "group": "Camera custom analytics settings",
      "summary": "Update custom analytics settings for a camera",
      "resource": "/devices/{serial}/camera/customAnalytics",
      "operation": "update"
    },
    {
      "group": "Camera video settings",
      "summary": "Update video settings for the given camera",
      "resource": "/devices/{serial}/camera/video/settings",
      "operation": "update"
    },
    {
      "group": "Camera wireless profile settings",
      "summary": "Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once.",
      "resource": "/devices/{serial}/camera/wirelessProfiles",
      "operation": "update"
    },
    {
      "group": "Config template",
      "summary": "Create a new configuration template",
      "resource": "/organizations/{organizationId}/configTemplates",
      "operation": "create"
    },
    {
      "group": "Config template",
      "summary": "Update a configuration template",
      "resource": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
      "operation": "update"
    },
    {
      "group": "Custom performance class",
      "summary": "Add a custom performance class for an MX network",
      "resource": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses",
      "operation": "create"
    },
    {
      "group": "Custom performance class",
      "summary": "Delete a custom performance class from an MX network",
      "resource": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
      "operation": "destroy"
    },
    {
      "group": "Custom performance class",
      "summary": "Update a custom performance class for an MX network",
      "resource": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
      "operation": "update"
    },
    {
      "group": "Dai trusted server",
      "summary": "Add a server to be trusted by Dynamic ARP Inspection on this network",
      "resource": "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers",
      "operation": "create"
    },
    {
      "group": "Dai trusted server",
      "summary": "Remove a server from being trusted by Dynamic ARP Inspection on this network",
      "resource": "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}",
      "operation": "destroy"
    },
    {
      "group": "Dai trusted server",
      "summary": "Update a server that is trusted by Dynamic ARP Inspection on this network",
      "resource": "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}",
      "operation": "update"
    },
    {
      "group": "Dash xl/dashboard branding policy",
      "summary": "Add a new branding policy to an organization",
      "resource": "/organizations/{organizationId}/brandingPolicies",
      "operation": "create"
    },
    {
      "group": "Dash xl/dashboard branding policy",
      "summary": "Delete a branding policy",
      "resource": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
      "operation": "destroy"
    },
    {
      "group": "Dash xl/dashboard branding policy",
      "summary": "Update a branding policy",
      "resource": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
      "operation": "update"
    },
    {
      "group": "Dash xl/dashboard branding policy priorities",
      "summary": "Update the priority ordering of an organization's branding policies.",
      "resource": "/organizations/{organizationId}/brandingPolicies/priorities",
      "operation": "update"
    },
    {
      "group": "Dashboard features/actions/client",
      "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
      "resource": "/networks/{networkId}/clients",
      "operation": "provision"
    },
    {
      "group": "Dashboard features/actions/early access/feature opt in",
      "summary": "Update an early access feature opt-in for an organization",
      "resource": "/organizations/{organizationId}/earlyAccess/features/optIns/{optInId}",
      "operation": "update"
    },
    {
      "group": "Device",
      "summary": "Update the attributes of a device",
      "resource": "/devices/{serial}",
      "operation": "update"
    },
    {
      "group": "Device",
      "summary": "Remove a single device",
      "resource": "/networks/{networkId}/devices",
      "operation": "remove"
    },
    {
      "group": "Device",
      "summary": "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requests against that device to succeed). This operation can be used up to ten times within a single five minute window.",
      "resource": "/networks/{networkId}/devices/claim",
      "operation": "claim"
    },
    {
      "group": "Dhcp server policy",
      "summary": "Update the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively",
      "resource": "/networks/{networkId}/switch/dhcpServerPolicy",
      "operation": "update"
    },
    {
      "group": "Dscp cos mapping",
      "summary": "Update the DSCP to CoS mappings",
      "resource": "/networks/{networkId}/switch/dscpToCosMappings",
      "operation": "update"
    },
    {
      "group": "Eap override",
      "summary": "Update the EAP overridden parameters for an SSID.",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/eapOverride",
      "operation": "update"
    },
    {
      "group": "End users/actions/meraki auth user",
      "summary": "Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)",
      "resource": "/networks/{networkId}/merakiAuthUsers",
      "operation": "create"
    },
    {
      "group": "End users/actions/meraki auth user",
      "summary": "Delete an 802.1X RADIUS user, or deauthorize and optionally delete a splash guest or client VPN user.",
      "resource": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
      "operation": "destroy"
    },
    {
      "group": "End users/actions/meraki auth user",
      "summary": "Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)",
      "resource": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
      "operation": "update"
    },
    {
      "group": "Esl network settings",
      "summary": "Update the ESL settings of a wireless network",
      "resource": "/networks/{networkId}/wireless/electronicShelfLabel",
      "operation": "update"
    },
    {
      "group": "Esl node settings",
      "summary": "Update the ESL settings of a device",
      "resource": "/devices/{serial}/wireless/electronicShelfLabel",
      "operation": "update"
    },
    {
      "group": "Firewall/actions/l2 isolation allowlist",
      "summary": "Create isolation allow list MAC entry for this organization",
      "resource": "/organizations/{organizationId}/wireless/ssids/firewall/isolation/allowlist/entries",
      "operation": "create"
    },
    {
      "group": "Firewall/actions/l2 isolation allowlist",
      "summary": "Destroy isolation allow list MAC entry for this organization",
      "resource": "/organizations/{organizationId}/wireless/ssids/firewall/isolation/allowlist/entries/{entryId}",
      "operation": "destroy"
    },
    {
      "group": "Firewall/actions/l2 isolation allowlist",
      "summary": "Update isolation allow list MAC entry info",
      "resource": "/organizations/{organizationId}/wireless/ssids/firewall/isolation/allowlist/entries/{entryId}",
      "operation": "update"
    },
    {
      "group": "Firmware upgrade rollback",
      "summary": "Rollback a Firmware Upgrade For A Network",
      "resource": "/networks/{networkId}/firmwareUpgrades/rollbacks",
      "operation": "create"
    },
    {
      "group": "Firmware upgrades update",
      "summary": "Update firmware upgrade information for a network",
      "resource": "/networks/{networkId}/firmwareUpgrades",
      "operation": "update"
    },
    {
      "group": "Floor plan",
      "summary": "Destroy a floor plan",
      "resource": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "operation": "destroy"
    },
    {
      "group": "Floor plan",
      "summary": "Update a floor plan's geolocation and other meta data",
      "resource": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "operation": "update"
    },
    {
      "group": "Group policy",
      "summary": "Create a group policy",
      "resource": "/networks/{networkId}/groupPolicies",
      "operation": "create"
    },
    {
      "group": "Group policy",
      "summary": "Delete a group policy",
      "resource": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "operation": "destroy"
    },
    {
      "group": "Group policy",
      "summary": "Update a group policy",
      "resource": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "operation": "update"
    },
    {
      "group": "Hotspot20",
      "summary": "Update the Hotspot 2.0 settings of an SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/hotspot20",
      "operation": "update"
    },
    {
      "group": "Insight/actions/org wide alerts/alert config",
      "summary": "Create an organization-wide alert configuration",
      "resource": "/organizations/{organizationId}/alerts/profiles",
      "operation": "create"
    },
    {
      "group": "Insight/actions/org wide alerts/alert config",
      "summary": "Removes an organization-wide alert config",
      "resource": "/organizations/{organizationId}/alerts/profiles/{alertConfigId}",
      "operation": "destroy"
    },
    {
      "group": "Insight/actions/org wide alerts/alert config",
      "summary": "Update an organization-wide alert config",
      "resource": "/organizations/{organizationId}/alerts/profiles/{alertConfigId}",
      "operation": "update"
    },
    {
      "group": "L3 firewall",
      "summary": "Update the L3 firewall rules of an SSID on an MR network",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules",
      "operation": "update"
    },
    {
      "group": "L3 interface",
      "summary": "Create a layer 3 interface for a switch",
      "resource": "/devices/{serial}/switch/routing/interfaces",
      "operation": "create"
    },
    {
      "group": "L3 interface",
      "summary": "Delete a layer 3 interface from the switch",
      "resource": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
      "operation": "destroy"
    },
    {
      "group": "L3 interface",
      "summary": "Update a layer 3 interface for a switch",
      "resource": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
      "operation": "update"
    },
    {
      "group": "L3 interface dhcp",
      "summary": "Update a layer 3 interface DHCP configuration for a switch",
      "resource": "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp",
      "operation": "update"
    },
    {
      "group": "L3 static route",
      "summary": "Create a layer 3 static route for a switch",
      "resource": "/devices/{serial}/switch/routing/staticRoutes",
      "operation": "create"
    },
    {
      "group": "L3 static route",
      "summary": "Delete a layer 3 static route for a switch",
      "resource": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
      "operation": "destroy"
    },
    {
      "group": "L3 static route",
      "summary": "Update a layer 3 static route for a switch",
      "resource": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
      "operation": "update"
    },
    {
      "group": "License",
      "summary": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
      "resource": "/organizations/{organizationId}/licenses",
      "operation": "assignSeats"
    },
    {
      "group": "License",
      "summary": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
      "resource": "/organizations/{organizationId}/licenses",
      "operation": "move"
    },
    {
      "group": "License",
      "summary": "Move SM seats to another organization",
      "resource": "/organizations/{organizationId}/licenses",
      "operation": "moveSeats"
    },
    {
      "group": "License",
      "summary": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
      "resource": "/organizations/{organizationId}/licenses",
      "operation": "renewSeats"
    },
    {
      "group": "License",
      "summary": "Update a license",
      "resource": "/organizations/{organizationId}/licenses/{licenseId}",
      "operation": "update"
    },
    {
      "group": "Link aggregation",
      "summary": "Create a link aggregation group",
      "resource": "/networks/{networkId}/switch/linkAggregations",
      "operation": "create"
    },
    {
      "group": "Link aggregation",
      "summary": "Split a link aggregation group into separate ports",
      "resource": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
      "operation": "destroy"
    },
    {
      "group": "Link aggregation",
      "summary": "Update a link aggregation group",
      "resource": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
      "operation": "update"
    },
    {
      "group": "MTU configuration",
      "summary": "Update the MTU configuration",
      "resource": "/networks/{networkId}/switch/mtu",
      "operation": "update"
    },
    {
      "group": "MX VLAN settings",
      "summary": "Enable/Disable VLANs for the given network",
      "resource": "/networks/{networkId}/appliance/vlans/settings",
      "operation": "update"
    },
    {
      "group": "MX connectivity monitoring destination",
      "summary": "Update the connectivity testing destinations for an MX network",
      "resource": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
      "operation": "update"
    },
    {
      "group": "MX l7 firewall",
      "summary": "Update the MX L7 firewall rules for an MX network",
      "resource": "/networks/{networkId}/appliance/firewall/l7FirewallRules",
      "operation": "update"
    },
    {
      "group": "MX port",
      "summary": "Update the per-port VLAN settings for a single MX port.",
      "resource": "/networks/{networkId}/appliance/ports/{portId}",
      "operation": "update"
    },
    {
      "group": "MX uplink setting",
      "summary": "Updates the uplink bandwidth settings for your MX network.",
      "resource": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
      "operation": "update"
    },
    {
      "group": "Management interface settings",
      "summary": "Update the management interface settings for a device",
      "resource": "/devices/{serial}/managementInterface",
      "operation": "update"
    },
    {
      "group": "Mars/actions/device",
      "summary": "Updating device details (currently only used for Catalyst devices)",
      "resource": "/organizations/{organizationId}/devices/details/bulkUpdate",
      "operation": "details/update"
    },
    {
      "group": "Mcg/actions/cluster",
      "summary": "Create a cluster and add campus gateways to it",
      "resource": "/networks/{networkId}/campusGateway/clusters",
      "operation": "create"
    },
    {
      "group": "Mcg/actions/cluster",
      "summary": "Update a cluster and add/remove campus gateways to/from it",
      "resource": "/networks/{networkId}/campusGateway/clusters/{clusterId}",
      "operation": "update"
    },
    {
      "group": "Monitored media server",
      "summary": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
      "resource": "/organizations/{organizationId}/insight/monitoredMediaServers",
      "operation": "create"
    },
    {
      "group": "Monitored media server",
      "summary": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
      "resource": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
      "operation": "destroy"
    },
    {
      "group": "Monitored media server",
      "summary": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
      "resource": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
      "operation": "update"
    },
    {
      "group": "Mqtt broker",
      "summary": "Add an MQTT broker",
      "resource": "/networks/{networkId}/mqttBrokers",
      "operation": "create"
    },
    {
      "group": "Mqtt broker",
      "summary": "Delete an MQTT broker",
      "resource": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
      "operation": "destroy"
    },
    {
      "group": "Mqtt broker",
      "summary": "Update an MQTT broker",
      "resource": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
      "operation": "update"
    },
    {
      "group": "Mr/actions/air marshal rule",
      "summary": "Creates a new rule",
      "resource": "/networks/{networkId}/wireless/airMarshal/rules",
      "operation": "update"
    },
    {
      "group": "Mr/actions/air marshal rule",
      "summary": "Delete an Air Marshal rule.",
      "resource": "/networks/{networkId}/wireless/airMarshal/rules/{ruleId}",
      "operation": "destroy"
    },
    {
      "group": "Mr/actions/air marshal rule",
      "summary": "Update a rule",
      "resource": "/networks/{networkId}/wireless/airMarshal/rules/{ruleId}",
      "operation": "update"
    },
    {
      "group": "Mr/actions/air marshal setting",
      "summary": "Updates Air Marshal settings.",
      "resource": "/networks/{networkId}/wireless/airMarshal/settings",
      "operation": "update"
    },
    {
      "group": "Mr/actions/ap port profile",
      "summary": "Create an AP port profile",
      "resource": "/networks/{networkId}/wireless/ethernet/ports/profiles",
      "operation": "create"
    },
    {
      "group": "Mr/actions/ap port profile",
      "summary": "Delete an AP port profile",
      "resource": "/networks/{networkId}/wireless/ethernet/ports/profiles/{profileId}",
      "operation": "destroy"
    },
    {
      "group": "Mr/actions/ap port profile",
      "summary": "Update the AP port profile by ID for this network",
      "resource": "/networks/{networkId}/wireless/ethernet/ports/profiles/{profileId}",
      "operation": "update"
    },
    {
      "group": "Mr/actions/ap port profile assign",
      "summary": "Assign AP port profile to list of APs",
      "resource": "/networks/{networkId}/wireless/ethernet/ports/profiles",
      "operation": "aps"
    },
    {
      "group": "Mr/actions/ap port profile set",
      "summary": "Set the AP port profile to be default for this network",
      "resource": "/networks/{networkId}/wireless/ethernet/ports/profiles",
      "operation": "default"
    },
    {
      "group": "Mr/actions/autolocation job",
      "summary": "Cancel a scheduled or running auto locate job",
      "resource": "/networks/{networkId}/floorPlans/autoLocate/jobs/{jobId}",
      "operation": "cancel"
    },
    {
      "group": "Mr/actions/autolocation job",
      "summary": "Update the status of a finished auto locate job to be published, and update device locations",
      "resource": "/networks/{networkId}/floorPlans/autoLocate/jobs/{jobId}",
      "operation": "publish"
    },
    {
      "group": "Mr/actions/autolocation job",
      "summary": "Trigger auto locate recalculation for a job, and optionally set anchors",
      "resource": "/networks/{networkId}/floorPlans/autoLocate/jobs/{jobId}",
      "operation": "recalculate"
    },
    {
      "group": "Mr/actions/autolocation jobs bulk",
      "summary": "Schedule auto locate jobs for one or more floor plans in a network",
      "resource": "/networks/{networkId}/floorPlans/autoLocate/jobs",
      "operation": "batch_create"
    },
    {
      "group": "Mr/actions/bluetooth device setting",
      "summary": "Update the bluetooth settings for a wireless device",
      "resource": "/devices/{serial}/wireless/bluetooth/settings",
      "operation": "update"
    },
    {
      "group": "Mr/actions/device floorplan assignments batch",
      "summary": "Update floorplan assignments for a batch of devices",
      "resource": "/networks/{networkId}/floorPlans/devices",
      "operation": "batch_update"
    },
    {
      "group": "Mr/actions/rf auto channel",
      "summary": "Recalculates automatically assigned channels for every AP within specified the specified network(s). Note: This could cause a brief loss in connectivity for wireless clients.",
      "resource": "/organizations/{organizationId}/wireless/radio/autoRf/channels",
      "operation": "update"
    },
    {
      "group": "Mr/actions/wireless alternate management interface v6",
      "summary": "Update alternate management interface IPv6 address",
      "resource": "/devices/{serial}/wireless/alternateManagementInterface/ipv6",
      "operation": "update"
    },
    {
      "group": "Mr/actions/wireless settings",
      "summary": "Update the wireless settings for a network",
      "resource": "/networks/{networkId}/wireless/settings",
      "operation": "update"
    },
    {
      "group": "Ms/access",
      "summary": "Create an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.",
      "resource": "/networks/{networkId}/switch/accessPolicies",
      "operation": "create"
    },
    {
      "group": "Ms/access",
      "summary": "Delete an access policy for a switch network",
      "resource": "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}",
      "operation": "destroy"
    },
    {
      "group": "Ms/access",
      "summary": "Update an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.",
      "resource": "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}",
      "operation": "update"
    },
    {
      "group": "Ms/actions/spanning tree configuration",
      "summary": "Updates STP settings",
      "resource": "/networks/{networkId}/switch/stp",
      "operation": "update"
    },
    {
      "group": "Ms/live tools/actions/perform leds",
      "summary": "Enqueue a job to blink LEDs on a device. This endpoint has a rate limit of one request every 10 seconds.",
      "resource": "/devices/{serial}/liveTools/leds/blink",
      "operation": "blink"
    },
    {
      "group": "Ms/live tools/actions/perform throughput",
      "summary": "Enqueue a job to test a device throughput, the test will run for 10 secs to test throughput. This endpoint has a rate limit of one request every five seconds per device.",
      "resource": "/devices/{serial}/liveTools/throughputTest",
      "operation": "test"
    },
    {
      "group": "Ms/routing/actions/ospf routing",
      "summary": "Update layer 3 OSPF routing configuration",
      "resource": "/networks/{networkId}/switch/routing/ospf",
      "operation": "update"
    },
    {
      "group": "Ms/switch",
      "summary": "Update switch network settings",
      "resource": "/networks/{networkId}/switch/settings",
      "operation": "settings/actions/update"
    },
    {
      "group": "Mt/api/actions/alert profiles",
      "summary": "Creates a sensor alert profile for a network.",
      "resource": "/networks/{networkId}/sensor/alerts/profiles",
      "operation": "create"
    },
    {
      "group": "Mt/api/actions/alert profiles",
      "summary": "Deletes a sensor alert profile from a network.",
      "resource": "/networks/{networkId}/sensor/alerts/profiles/{id}",
      "operation": "destroy"
    },
    {
      "group": "Mt/api/actions/alert profiles",
      "summary": "Updates a sensor alert profile for a network.",
      "resource": "/networks/{networkId}/sensor/alerts/profiles/{id}",
      "operation": "update"
    },
    {
      "group": "Mt/api/actions/commands",
      "summary": "Sends a command to a sensor",
      "resource": "/devices/{serial}/sensor/commands",
      "operation": "create"
    },
    {
      "group": "Mt/api/actions/sensor gateway role",
      "summary": "Assign one or more sensor roles to a given sensor or camera device.",
      "resource": "/devices/{serial}/sensor/relationships",
      "operation": "update"
    },
    {
      "group": "Mt/api/actions/sensor mqtt broker",
      "summary": "Update the sensor settings of an MQTT broker. To update the broker itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}.",
      "resource": "/networks/{networkId}/sensor/mqttBrokers/{mqttBrokerId}",
      "operation": "update"
    },
    {
      "group": "Multicast",
      "summary": "Update multicast settings for a network",
      "resource": "/networks/{networkId}/switch/routing/multicast",
      "operation": "update"
    },
    {
      "group": "Network",
      "summary": "Bind a network to a template.",
      "resource": "/networks/{networkId}",
      "operation": "bind"
    },
    {
      "group": "Network",
      "summary": "Delete a network",
      "resource": "/networks/{networkId}",
      "operation": "destroy"
    },
    {
      "group": "Network",
      "summary": "Split a combined network into individual networks for each type of device",
      "resource": "/networks/{networkId}",
      "operation": "split"
    },
    {
      "group": "Network",
      "summary": "Unbind a network from a template.",
      "resource": "/networks/{networkId}",
      "operation": "unbind"
    },
    {
      "group": "Network",
      "summary": "Update a network",
      "resource": "/networks/{networkId}",
      "operation": "update"
    },
    {
      "group": "Network",
      "summary": "Combine multiple networks into a single network",
      "resource": "/organizations/{organizationId}/networks",
      "operation": "combine"
    },
    {
      "group": "Network",
      "summary": "Create a network",
      "resource": "/organizations/{organizationId}/networks",
      "operation": "create"
    },
    {
      "group": "Network appliance settings",
      "summary": "Update the appliance settings for a network",
      "resource": "/networks/{networkId}/appliance/settings",
      "operation": "update"
    },
    {
      "group": "Network settings",
      "summary": "Update the settings for a network",
      "resource": "/networks/{networkId}/settings",
      "operation": "update"
    },
    {
      "group": "Organization SAML IdP",
      "summary": "Create a SAML IdP for your organization.",
      "resource": "/organizations/{organizationId}/saml/idps",
      "operation": "create"
    },
    {
      "group": "Organization SAML IdP",
      "summary": "Remove a SAML IdP in your organization.",
      "resource": "/organizations/{organizationId}/saml/idps/{idpId}",
      "operation": "destroy"
    },
    {
      "group": "Organization SAML IdP",
      "summary": "Update a SAML IdP in your organization",
      "resource": "/organizations/{organizationId}/saml/idps/{idpId}",
      "operation": "update"
    },
    {
      "group": "Organization login security settings",
      "summary": "Update the login security settings for an organization",
      "resource": "/organizations/{organizationId}/loginSecurity",
      "operation": "update"
    },
    {
      "group": "Pcap logs",
      "summary": "BulkDelete packet captures from cloud",
      "resource": "/organizations/{organizationId}/devices/packetCapture/captures",
      "operation": "destroy"
    },
    {
      "group": "Pcap logs",
      "summary": "Delete a single packet capture from cloud using captureId",
      "resource": "/organizations/{organizationId}/devices/packetCapture/captures/{captureId}",
      "operation": "destroy"
    },
    {
      "group": "Pcap schedule configurations",
      "summary": "Create a schedule for packet capture",
      "resource": "/organizations/{organizationId}/devices/packetCapture/schedules",
      "operation": "create"
    },
    {
      "group": "Pcap schedule configurations",
      "summary": "Bulk update priorities of pcap schedules",
      "resource": "/organizations/{organizationId}/devices/packetCapture/schedules",
      "operation": "reorder"
    },
    {
      "group": "Pcap schedule configurations",
      "summary": "Delete schedule from cloud",
      "resource": "/organizations/{organizationId}/devices/packetCapture/schedules/{scheduleId}",
      "operation": "destroy"
    },
    {
      "group": "Pcap schedule configurations",
      "summary": "Update a schedule for packet capture",
      "resource": "/organizations/{organizationId}/devices/packetCapture/schedules/{scheduleId}",
      "operation": "update"
    },
    {
      "group": "Policy object",
      "summary": "Creates a new Policy Object.",
      "resource": "/organizations/{organizationId}/policyObjects",
      "operation": "create"
    },
    {
      "group": "Policy object",
      "summary": "Deletes a Policy Object.",
      "resource": "/organizations/{organizationId}/policyObjects/{policyObjectId}",
      "operation": "destroy"
    },
    {
      "group": "Policy object",
      "summary": "Updates a Policy Object.",
      "resource": "/organizations/{organizationId}/policyObjects/{policyObjectId}",
      "operation": "update"
    },
    {
      "group": "Policy object group",
      "summary": "Creates a new Policy Object Group.",
      "resource": "/organizations/{organizationId}/policyObjects/groups",
      "operation": "create"
    },
    {
      "group": "Policy object group",
      "summary": "Deletes a Policy Object Group.",
      "resource": "/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}",
      "operation": "destroy"
    },
    {
      "group": "Policy object group",
      "summary": "Updates a Policy Object Group.",
      "resource": "/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}",
      "operation": "update"
    },
    {
      "group": "Psk group",
      "summary": "Create an Identity PSK",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks",
      "operation": "create"
    },
    {
      "group": "Psk group",
      "summary": "Delete an Identity PSK",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
      "operation": "destroy"
    },
    {
      "group": "Psk group",
      "summary": "Update an Identity PSK",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
      "operation": "update"
    },
    {
      "group": "Qos rule",
      "summary": "Add a quality of service rule",
      "resource": "/networks/{networkId}/switch/qosRules",
      "operation": "create"
    },
    {
      "group": "Qos rule",
      "summary": "Update the order in which the rules should be processed by the switch",
      "resource": "/networks/{networkId}/switch/qosRules/order",
      "operation": "update_order"
    },
    {
      "group": "Qos rule",
      "summary": "Delete a quality of service rule",
      "resource": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
      "operation": "destroy"
    },
    {
      "group": "Qos rule",
      "summary": "Update a quality of service rule",
      "resource": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
      "operation": "update"
    },
    {
      "group": "Quality and retention setting",
      "summary": "Update quality and retention settings for the given camera",
      "resource": "/devices/{serial}/camera/qualityAndRetention",
      "operation": "update"
    },
    {
      "group": "RF profile",
      "summary": "Creates new RF profile for this network",
      "resource": "/networks/{networkId}/wireless/rfProfiles",
      "operation": "create"
    },
    {
      "group": "RF profile",
      "summary": "Delete a RF Profile",
      "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "operation": "destroy"
    },
    {
      "group": "RF profile",
      "summary": "Updates specified RF profile for this network. Note: built-in RF profiles can only be assigned as a default, and its attributes are immutable",
      "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "operation": "update"
    },
    {
      "group": "Radio settings",
      "summary": "Update the radio settings overrides of a device, which take precedence over RF profiles.",
      "resource": "/devices/{serial}/wireless/radio/settings",
      "operation": "update"
    },
    {
      "group": "Rendezvous point",
      "summary": "Create a multicast rendezvous point",
      "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints",
      "operation": "create"
    },
    {
      "group": "Rendezvous point",
      "summary": "Delete a multicast rendezvous point",
      "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
      "operation": "destroy"
    },
    {
      "group": "Rendezvous point",
      "summary": "Update a multicast rendezvous point",
      "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
      "operation": "update"
    },
    {
      "group": "Sense setting",
      "summary": "Update sense settings for the given camera",
      "resource": "/devices/{serial}/camera/sense",
      "operation": "update"
    },
    {
      "group": "Single lan",
      "summary": "Update single LAN configuration",
      "resource": "/networks/{networkId}/appliance/singleLan",
      "operation": "update"
    },
    {
      "group": "Site to site vpn",
      "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
      "resource": "/networks/{networkId}/appliance/vpn/siteToSiteVpn",
      "operation": "update"
    },
    {
      "group": "Sm/actions/admins/role",
      "summary": "Create a Limited Access Role",
      "resource": "/organizations/{organizationId}/sm/admins/roles",
      "operation": "create"
    },
    {
      "group": "Sm/actions/admins/role",
      "summary": "Delete a Limited Access Role",
      "resource": "/organizations/{organizationId}/sm/admins/roles/{roleId}",
      "operation": "destroy"
    },
    {
      "group": "Sm/actions/admins/role",
      "summary": "Update a Limited Access Role",
      "resource": "/organizations/{organizationId}/sm/admins/roles/{roleId}",
      "operation": "update"
    },
    {
      "group": "Sm/actions/sentry/policies/assignments",
      "summary": "Update an Organizations Sentry Policies using the provided list. Sentry Policies are ordered in descending order of priority (i.e. highest priority at the bottom, this is opposite the Dashboard UI). Policies not present in the request will be deleted.",
      "resource": "/organizations/{organizationId}/sm/sentry/policies/assignments",
      "operation": "update"
    },
    {
      "group": "Spaces/actions/remove",
      "summary": "Remove the Spaces integration from Meraki",
      "resource": "/organizations/{organizationId}/spaces/integration",
      "operation": "integration"
    },
    {
      "group": "Splash theme",
      "summary": "Create a Splash Theme",
      "resource": "/organizations/{organizationId}/splash/themes",
      "operation": "create"
    },
    {
      "group": "Splash theme asset",
      "summary": "Delete a Splash Theme Asset",
      "resource": "/organizations/{organizationId}/splash/assets/{id}",
      "operation": "destroy"
    },
    {
      "group": "Splash theme asset",
      "summary": "Create a Splash Theme Asset",
      "resource": "/organizations/{organizationId}/splash/themes/{themeIdentifier}/assets",
      "operation": "create"
    },
    {
      "group": "Splash2 theme",
      "summary": "Delete a Splash Theme",
      "resource": "/organizations/{organizationId}/splash/themes/{id}",
      "operation": "destroy"
    },
    {
      "group": "Ssid",
      "summary": "Update the attributes of an MR SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}",
      "operation": "update"
    },
    {
      "group": "Ssid bonjour forwarding",
      "summary": "Update the bonjour forwarding setting and rules for the SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding",
      "operation": "update"
    },
    {
      "group": "Ssid device type group policies",
      "summary": "Update the device type group policies for the SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies",
      "operation": "update"
    },
    {
      "group": "Ssid outage schedule",
      "summary": "Update the outage schedule for the SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/schedules",
      "operation": "update"
    },
    {
      "group": "Ssid splash settings",
      "summary": "Modify the splash page settings for the given SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/splash/settings",
      "operation": "update"
    },
    {
      "group": "Ssid vpn",
      "summary": "Update the VPN settings for the SSID",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/vpn",
      "operation": "update"
    },
    {
      "group": "Staged upgrade/group",
      "summary": "Create a Staged Upgrade Group for a network",
      "resource": "/networks/{networkId}/firmwareUpgrades/staged/groups",
      "operation": "create"
    },
    {
      "group": "Staged upgrade/group",
      "summary": "Delete a Staged Upgrade Group",
      "resource": "/networks/{networkId}/firmwareUpgrades/staged/groups/{groupId}",
      "operation": "destroy"
    },
    {
      "group": "Static delegated prefix",
      "summary": "Add a static delegated prefix from a network",
      "resource": "/networks/{networkId}/appliance/prefixes/delegated/statics",
      "operation": "create"
    },
    {
      "group": "Static delegated prefix",
      "summary": "Delete a static delegated prefix from a network",
      "resource": "/networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}",
      "operation": "destroy"
    },
    {
      "group": "Static delegated prefix",
      "summary": "Update a static delegated prefix from a network",
      "resource": "/networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}",
      "operation": "update"
    },
    {
      "group": "Storm control",
      "summary": "Update the storm control configuration for a switch network",
      "resource": "/networks/{networkId}/switch/stormControl",
      "operation": "update"
    },
    {
      "group": "Switch",
      "summary": "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring",
      "resource": "/organizations/{organizationId}/switch/devices",
      "operation": "clone"
    },
    {
      "group": "Switch port",
      "summary": "Cycle a set of switch ports",
      "resource": "/devices/{serial}/switch/ports",
      "operation": "cycle"
    },
    {
      "group": "Switch port",
      "summary": "Update a switch port",
      "resource": "/devices/{serial}/switch/ports/{portId}",
      "operation": "update"
    },
    {
      "group": "Switch port schedule",
      "summary": "Update a switch port schedule",
      "resource": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
      "operation": "update"
    },
    {
      "group": "Switch profile port",
      "summary": "Update a switch template port",
      "resource": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}",
      "operation": "update"
    },
    {
      "group": "Switch stacks l3 interface",
      "summary": "Create a layer 3 interface for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces",
      "operation": "create"
    },
    {
      "group": "Switch stacks l3 interface",
      "summary": "Delete a layer 3 interface from a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
      "operation": "destroy"
    },
    {
      "group": "Switch stacks l3 interface",
      "summary": "Update a layer 3 interface for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
      "operation": "update"
    },
    {
      "group": "Switch stacks l3 interface dhcp",
      "summary": "Update a layer 3 interface DHCP configuration for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp",
      "operation": "update"
    },
    {
      "group": "Switch stacks l3 static route",
      "summary": "Create a layer 3 static route for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes",
      "operation": "create"
    },
    {
      "group": "Switch stacks l3 static route",
      "summary": "Delete a layer 3 static route for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
      "operation": "destroy"
    },
    {
      "group": "Switch stacks l3 static route",
      "summary": "Update a layer 3 static route for a switch stack",
      "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
      "operation": "update"
    },
    {
      "group": "Switch warm spare settings",
      "summary": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
      "resource": "/devices/{serial}/switch/warmSpare",
      "operation": "update"
    },
    {
      "group": "Traffic shaping settings",
      "summary": "Update the traffic shaping settings rules for an MX network",
      "resource": "/networks/{networkId}/appliance/trafficShaping/rules",
      "operation": "update"
    },
    {
      "group": "Traffic shaping settings",
      "summary": "Update the traffic shaping rules for an SSID on an MR network.",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules",
      "operation": "update"
    },
    {
      "group": "Uplink selection settings",
      "summary": "Update uplink selection settings for an MX network",
      "resource": "/networks/{networkId}/appliance/trafficShaping/uplinkSelection",
      "operation": "update"
    },
    {
      "group": "User access device",
      "summary": "Delete a User Access Device",
      "resource": "/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}",
      "operation": "destroy"
    },
    {
      "group": "V1/adaptive policy acl",
      "summary": "Creates new adaptive policy ACL",
      "resource": "/organizations/{organizationId}/adaptivePolicy/acls",
      "operation": "create"
    },
    {
      "group": "V1/adaptive policy acl",
      "summary": "Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.",
      "resource": "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}",
      "operation": "destroy"
    },
    {
      "group": "V1/adaptive policy acl",
      "summary": "Updates an adaptive policy ACL",
      "resource": "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}",
      "operation": "update"
    },
    {
      "group": "VLAN",
      "summary": "Add a VLAN",
      "resource": "/networks/{networkId}/appliance/vlans",
      "operation": "create"
    },
    {
      "group": "VLAN",
      "summary": "Delete a VLAN from a network",
      "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
      "operation": "destroy"
    },
    {
      "group": "VLAN",
      "summary": "Update a VLAN",
      "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
      "operation": "update"
    },
    {
      "group": "VLAN profile",
      "summary": "Create a VLAN profile for a network",
      "resource": "/networks/{networkId}/vlanProfiles",
      "operation": "create"
    },
    {
      "group": "VLAN profile",
      "summary": "Delete a VLAN profile of a network",
      "resource": "/networks/{networkId}/vlanProfiles/{iname}",
      "operation": "destroy"
    },
    {
      "group": "Vmx",
      "summary": "Claim a vMX into a network",
      "resource": "/networks/{networkId}/devices/claim/vmx",
      "operation": "claim"
    },
    {
      "group": "Vmx token",
      "summary": "Generate a new vMX authentication token",
      "resource": "/devices/{serial}/appliance/vmx/authenticationToken",
      "operation": "create"
    },
    {
      "group": "Warm spare",
      "summary": "Swap MX primary and warm spare appliances",
      "resource": "/networks/{networkId}/appliance/warmSpare",
      "operation": "swap"
    },
    {
      "group": "Warm spare",
      "summary": "Update MX warm spare settings",
      "resource": "/networks/{networkId}/appliance/warmSpare",
      "operation": "update"
    },
    {
      "group": "Webhook template",
      "summary": "Create a webhook payload template for a network",
      "resource": "/networks/{networkId}/webhooks/payloadTemplates",
      "operation": "create"
    },
    {
      "group": "Webhook template",
      "summary": "Destroy a webhook payload template for a network. Does not work for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or 'wpt_00006')",
      "resource": "/networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}",
      "operation": "destroy"
    },
    {
      "group": "Webhook template",
      "summary": "Update a webhook payload template for a network",
      "resource": "/networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}",
      "operation": "update"
    },
    {
      "group": "Wired/actions/bgp",
      "summary": "Update a Hub BGP Configuration",
      "resource": "/networks/{networkId}/appliance/vpn/bgp",
      "operation": "settings/update"
    },
    {
      "group": "Wired/actions/vpn exclusions",
      "summary": "Update VPN exclusion rules for an MX network.",
      "resource": "/networks/{networkId}/appliance/trafficShaping/vpnExclusions",
      "operation": "update"
    },
    {
      "group": "Wired/actions/vpn/ipsec sla policies",
      "summary": "Update the IPsec SLA policies for an organization",
      "resource": "/organizations/{organizationId}/appliance/vpn/siteToSite/ipsec/peers/slas",
      "operation": "update"
    },
    {
      "group": "Wired/actions/wan traffic uplink",
      "summary": "Update SDWAN internet traffic preferences for an MX network",
      "resource": "/networks/{networkId}/appliance/sdwan/internetPolicies",
      "operation": "update"
    },
    {
      "group": "Wired/appliance RF profile",
      "summary": "Creates new RF profile for this network",
      "resource": "/networks/{networkId}/appliance/rfProfiles",
      "operation": "create"
    },
    {
      "group": "Wired/appliance RF profile",
      "summary": "Delete a RF Profile",
      "resource": "/networks/{networkId}/appliance/rfProfiles/{rfProfileId}",
      "operation": "destroy"
    },
    {
      "group": "Wired/appliance RF profile",
      "summary": "Updates specified RF profile for this network",
      "resource": "/networks/{networkId}/appliance/rfProfiles/{rfProfileId}",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway connectivity monitoring destination",
      "summary": "Update the connectivity testing destinations for an MG network",
      "resource": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway device lan",
      "summary": "Update the LAN Settings for a single MG.",
      "resource": "/devices/{serial}/cellularGateway/lan",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway dhcp setting",
      "summary": "Update common DHCP settings of MGs",
      "resource": "/networks/{networkId}/cellularGateway/dhcp",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway port forwarding rules",
      "summary": "Updates the port forwarding rules for a single MG.",
      "resource": "/devices/{serial}/cellularGateway/portForwardingRules",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway subnet pool",
      "summary": "Update the subnet pool and mask configuration for MGs in the network.",
      "resource": "/networks/{networkId}/cellularGateway/subnetPool",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/api/actions/cellular gateway uplink setting",
      "summary": "Updates the uplink settings for your MG network.",
      "resource": "/networks/{networkId}/cellularGateway/uplink",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/esim/api/actions/cellular esim",
      "summary": "Toggle the status of an eSIM",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/inventory/{id}",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/esim/api/actions/cellular service provider account",
      "summary": "Add a service provider account.",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/serviceProviders/accounts",
      "operation": "create"
    },
    {
      "group": "Wired/cellular/esim/api/actions/cellular service provider account",
      "summary": "Remove a service provider account's integration with the Dashboard.",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/serviceProviders/accounts/{accountId}",
      "operation": "destroy"
    },
    {
      "group": "Wired/cellular/esim/api/actions/cellular service provider account",
      "summary": "Edit service provider account info stored in Meraki's database.",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/serviceProviders/accounts/{accountId}",
      "operation": "update"
    },
    {
      "group": "Wired/cellular/esim/api/actions/initiate",
      "summary": "Swap which profile an eSIM uses.",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/swap",
      "operation": "swap"
    },
    {
      "group": "Wired/cellular/esim/api/actions/sync swap",
      "summary": "Get the status of a profile swap.",
      "resource": "/organizations/{organizationId}/cellularGateway/esims/swap/{id}",
      "operation": "status"
    },
    {
      "group": "Wired/local dns/api/actions/bulk create",
      "summary": "Assign the local DNS profile to networks in the organization",
      "resource": "/organizations/{organizationId}/appliance/dns/local/profiles/assignments",
      "operation": "bulk_create"
    },
    {
      "group": "Wired/local dns/api/actions/bulk delete",
      "summary": "Unassign the local DNS profile to networks in the organization",
      "resource": "/organizations/{organizationId}/appliance/dns/local/profiles/assignments/bulkDelete",
      "operation": "bulk_delete"
    },
    {
      "group": "Wired/local dns/profiles/api/actions/local dns profile",
      "summary": "Create a new local DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/local/profiles",
      "operation": "create"
    },
    {
      "group": "Wired/local dns/profiles/api/actions/local dns profile",
      "summary": "Deletes a local DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/local/profiles/{profileId}",
      "operation": "destroy"
    },
    {
      "group": "Wired/local dns/profiles/api/actions/local dns profile",
      "summary": "Update a local DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/local/profiles/{profileId}",
      "operation": "update"
    },
    {
      "group": "Wired/local dns/records/api/actions/local dns record",
      "summary": "Create a new local DNS record",
      "resource": "/organizations/{organizationId}/appliance/dns/local/records",
      "operation": "create"
    },
    {
      "group": "Wired/local dns/records/api/actions/local dns record",
      "summary": "Deletes a local DNS record",
      "resource": "/organizations/{organizationId}/appliance/dns/local/records/{recordId}",
      "operation": "destroy"
    },
    {
      "group": "Wired/local dns/records/api/actions/local dns record",
      "summary": "Updates a local DNS record",
      "resource": "/organizations/{organizationId}/appliance/dns/local/records/{recordId}",
      "operation": "update"
    },
    {
      "group": "Wired/split dns/api/actions/bulk create",
      "summary": "Assign the split DNS profile to networks in the organization",
      "resource": "/organizations/{organizationId}/appliance/dns/split/profiles/assignments/bulkCreate",
      "operation": "bulk_create"
    },
    {
      "group": "Wired/split dns/api/actions/bulk delete",
      "summary": "Unassign the split DNS profile to networks in the organization",
      "resource": "/organizations/{organizationId}/appliance/dns/split/profiles/assignments/bulkDelete",
      "operation": "bulk_delete"
    },
    {
      "group": "Wired/split dns/api/actions/split dns profile",
      "summary": "Create a new split DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/split/profiles",
      "operation": "create"
    },
    {
      "group": "Wired/split dns/api/actions/split dns profile",
      "summary": "Deletes a split DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/split/profiles/{profileId}",
      "operation": "destroy"
    },
    {
      "group": "Wired/split dns/api/actions/split dns profile",
      "summary": "Update a split DNS profile",
      "resource": "/organizations/{organizationId}/appliance/dns/split/profiles/{profileId}",
      "operation": "update"
    },
    {
      "group": "Wired/uplinks/settings",
      "summary": "Update the uplink settings for an MX appliance",
      "resource": "/devices/{serial}/appliance/uplinks/settings",
      "operation": "update"
    },
    {
      "group": "Wired/vpn/third party vpn peers",
      "summary": "Update the third party VPN peers for an organization",
      "resource": "/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers",
      "operation": "update"
    },
    {
      "group": "Wired/xdr/api/actions/xdr",
      "summary": "Disable XDR on networks",
      "resource": "/organizations/{organizationId}/integrations/xdr/networks",
      "operation": "disable"
    },
    {
      "group": "Wired/xdr/api/actions/xdr",
      "summary": "Enable XDR on networks",
      "resource": "/organizations/{organizationId}/integrations/xdr/networks",
      "operation": "enable"
    },
    {
      "group": "Wireless alternate management interface",
      "summary": "Update alternate management interface and device static IP",
      "resource": "/networks/{networkId}/wireless/alternateManagementInterface",
      "operation": "update"
    },
    {
      "group": "Wireless l7 firewall",
      "summary": "Update the L7 firewall rules of an SSID on an MR network",
      "resource": "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules",
      "operation": "update"
    },
    {
      "group": "Wireless/location/scanning http servers/actions/location scanning http servers",
      "summary": "Add new receiver for scanning API",
      "resource": "/organizations/{organizationId}/wireless/location/scanning/receivers",
      "operation": "create"
    },
    {
      "group": "Wireless/location/scanning http servers/actions/location scanning http servers",
      "summary": "Delete a scanning API receiver",
      "resource": "/organizations/{organizationId}/wireless/location/scanning/receivers/{receiverId}",
      "operation": "delete"
    },
    {
      "group": "Wireless/location/scanning http servers/actions/location scanning http servers",
      "summary": "Change scanning API receiver settings",
      "resource": "/organizations/{organizationId}/wireless/location/scanning/receivers/{receiverId}",
      "operation": "update"
    },
    {
      "group": "Wireless/location/scanning/actions/location scanning",
      "summary": "Change scanning API settings",
      "resource": "/networks/{networkId}/wireless/location/scanning",
      "operation": "update"
    }
  ]
}
  